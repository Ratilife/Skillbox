
Процедура ОбработкаПроведения(Отказ, Режим)
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	Движения.ОсновныеНачисления2.Записывать = Истина;
	Для Каждого ТекСтрокаНачисления Из Начисления Цикл
		Движение = Движения.ОсновныеНачисления2.Добавить();
		Движение.Сторно = ТекСтрокаНачисления.Сторно;
		Движение.ВидРасчета = ТекСтрокаНачисления.ВидРасчета;
		Движение.ПериодДействияНачало = ТекСтрокаНачисления.ДатаНачала;
		Движение.ПериодДействияКонец = КонецДня(ТекСтрокаНачисления.ДатаОкончания);
		Движение.ПериодРегистрации = ПериодРегистрации;
		Движение.Сотрудник = ТекСтрокаНачисления.Сотрудник;
		Движение.Подразделение = ТекСтрокаНачисления.Подразделение;
		Движение.ТипГрафика = ТекСтрокаНачисления.ТипГрафика;
		Движение.Размер = ТекСтрокаНачисления.Размер;
		//Движение.Результат = ТекСтрокаНачисления.Размер;
		
	КонецЦикла;
	
	Движения.ДополнительныеНачисления.Записывать = Истина;
	Для Каждого ТекСтрокаДопНачисления Из ДополнительныеНачисления Цикл
		Если ЗначениеЗаполнено(ТекСтрокаДопНачисления.Размер) Тогда
			Движение = Движения.ДополнительныеНачисления.Добавить();
			Движение.Сторно = ТекСтрокаДопНачисления.Сторно;
			Движение.ВидРасчета = ТекСтрокаДопНачисления.ВидРасчета;
			Движение.ПериодРегистрации = ПериодРегистрации;
			Движение.БазовыйПериодНачало = ТекСтрокаДопНачисления.БазовыйПериодНачало;
			Движение.БазовыйПериодКонец = ТекСтрокаДопНачисления.БазовыйПериодКонец;
			Движение.Сотрудник = ТекСтрокаДопНачисления.Сотрудник;
			Движение.Подразделение = ТекСтрокаДопНачисления.Подразделение;
			Движение.Размер = ТекСтрокаДопНачисления.Размер;
		КонецЕсли; 
	КонецЦикла;
	Движения.Удержания.Записывать = Истина;
	Для Каждого ТекСтрокаУдержания Из Удержания Цикл
		Движение = Движения.Удержания.Добавить();
		Движение.Сторно = ТекСтрокаУдержания.Сторно;
		Движение.ВидРасчета = ТекСтрокаУдержания.ВидРасчета;
		Движение.ПериодРегистрации = ПериодРегистрации;
		Движение.Сотрудник = ТекСтрокаУдержания.Сотрудник;
		Движение.Подразделение = ТекСтрокаУдержания.Подразделение;
		Движение.Размер = ТекСтрокаУдержания.Размер;
		Движение.БазовыйПериодНачало = НачалоМесяца(ПериодРегистрации);
		Движение.БазовыйПериодКонец = КонецМесяца(ПериодРегистрации);
	КонецЦикла;
	
	Движения.Записать();
	//
	РассчитатьНачисления(Отказ);
	РассчитатьДопНачисления(Отказ);
	
	РассчитатьУдержания(Отказ);
	
КонецПроцедуры

Процедура РассчитатьДопНачисления(Отказ)
	МаксКвоКатегорий =1;
	//Для НомерКатегории =0 По МаксКвоКатегорий Цикл
		
		Запрос = Новый Запрос;
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ДополнительныеНачисленияБазаОсновныеНачисления.НомерСтроки,
		|	ДополнительныеНачисленияБазаОсновныеНачисления.Размер,
		|	ДополнительныеНачисленияБазаОсновныеНачисления.РезультатБаза КАК База,
		|	ДополнительныеНачисленияБазаОсновныеНачисления.ВидРасчета.СпособРасчета КАК Способ
		|ПОМЕСТИТЬ ДанныеБезГруппировки
		|ИЗ
		|	РегистрРасчета.ДополнительныеНачисления.БазаОсновныеНачисления(
		|			&Измерения,
		|			&Измерения,
		|			,
		|			Регистратор = &Ссылка
		|				И ВидРасчета.СпособРасчета В (&Способы)) КАК ДополнительныеНачисленияБазаОсновныеНачисления
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДополнительныеНачисленияБазаДополнительныеНачисления.НомерСтроки,
		|	ДополнительныеНачисленияБазаДополнительныеНачисления.Размер,
		|	ДополнительныеНачисленияБазаДополнительныеНачисления.РезультатБаза,
		|	ДополнительныеНачисленияБазаДополнительныеНачисления.ВидРасчета.СпособРасчета
		|ИЗ
		|	РегистрРасчета.ДополнительныеНачисления.БазаДополнительныеНачисления(
		|			&Измерения,
		|			&Измерения,
		|			,
		|			Регистратор = &Ссылка
		|				И ВидРасчета.СпособРасчета В (&Способы)) КАК ДополнительныеНачисленияБазаДополнительныеНачисления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеБезГруппировки.НомерСтроки,
		|	ДанныеБезГруппировки.Размер,
		|	СУММА(ДанныеБезГруппировки.База) КАК База,
		|	ДанныеБезГруппировки.Способ
		|ИЗ
		|	ДанныеБезГруппировки КАК ДанныеБезГруппировки
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеБезГруппировки.НомерСтроки,
		|	ДанныеБезГруппировки.Способ,
		|	ДанныеБезГруппировки.Размер";
		Измерения = Новый Массив;
		Измерения.Добавить("Сотрудник");
		Измерения.Добавить("Подразделение");
		
		Способы = Новый Массив;
		Способы.Добавить(Перечисления.СпособыРасчета.Процентом); 
		Запрос.УстановитьПараметр("Способы", Способы);
		//Запрос.УстановитьПараметр("НомерКатегории", 0);
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		//Запрос.УстановитьПараметр("Премия", ПланыВидовРасчета.ДополнительныеНачисления.Премия);
		Запрос.УстановитьПараметр("Измерения", Измерения);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Поиск = Новый Структура("НомерСтроки");
		Набор = Движения.ДополнительныеНачисления;
		Процентом = Перечисления.СпособыРасчета.Процентом;
		
		Для каждого Запись Из Набор Цикл
			Поиск.НомерСтроки = Запись.НомерСтроки;
			Выборка.Сбросить();
			Если Выборка.НайтиСледующий(Поиск) Тогда
				Если Выборка.Способ = Процентом Тогда
					Запись.Результат = Запись.Размер*Выборка.База/100*?(Запись.Сторно, -1, 1);
				КонецЕсли; 
			КонецЕсли; 
			
		КонецЦикла; 
		
		
		Набор.Записать(,Истина);
	//КонецЦикла; 
	
КонецПроцедуры

Процедура РассчитатьНачисления(Отказ)
	МаксКвоКатегорий =1;
	Для НомерКатегории =0 По МаксКвоКатегорий Цикл
		
		
		
		Запрос = Новый Запрос;
		Запрос.Текст = //"ВЫБРАТЬ
		//|	ОсновныеНачисленияДанныеГрафика.НомерСтроки,
		//|	ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия 				КАК План,
		//|	ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия 	КАК Факт,
		//|	ОсновныеНачисленияДанныеГрафика.ВидРасчета.СпособРасчета 			КАК Способ
		//|ИЗ
		//|	РегистрРасчета.ОсновныеНачисления.ДанныеГрафика(
		//|			Регистратор = &Ссылка
		//|				И ВидРасчета.КатегорияРасчета = &НомерКатегории) КАК ОсновныеНачисленияДанныеГрафика";
		
		"ВЫБРАТЬ
		|	ОсновныеНачисления2ДанныеГрафика.НомерСтроки 						КАК НомерСтроки,
		|	ОсновныеНачисления2ДанныеГрафика.ЗначениеПериодДействия 			КАК План,
		|	ОсновныеНачисления2ДанныеГрафика.ЗначениеФактическийПериодДействия 	КАК Факт,
		|	ОсновныеНачисления2ДанныеГрафика.ВидРасчета 						КАК Способ
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисления2.ДанныеГрафика(
		|			Регистратор = &Ссылка
		|				И ВидРасчета.КатегорияРасчета = &НомерКатегории) КАК ОсновныеНачисления2ДанныеГрафика";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Способы = Новый Массив;
		Способы.Добавить(Перечисления.СпособыРасчета.ПоОтработанномуВремени); 
		Способы.Добавить(Перечисления.СпособыРасчета.ВынужденныйПростой); 
		Способы.Добавить(Перечисления.СпособыРасчета.УдержаниеЗаДеньНевыхода); 
		Запрос.УстановитьПараметр("Способы", Способы);
		Запрос.УстановитьПараметр("НомерКатегории", НомерКатегории);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Поиск = Новый Структура("НомерСтроки");
		Набор = Движения.ОсновныеНачисления2;
		Тариф = Перечисления.СпособыРасчета.ПоОтработанномуВремени;
		Простой = Перечисления.СпособыРасчета.ВынужденныйПростой;
		Невыход = Перечисления.СпособыРасчета.УдержаниеЗаДеньНевыхода;
		
		Для каждого Запись Из Набор Цикл
			
			Поиск.НомерСтроки = Запись.НомерСтроки;
			Выборка.Сбросить();
			Если Выборка.НайтиСледующий(Поиск) Тогда
				
				Если Выборка.Способ = Тариф ИЛИ Выборка.Способ = Простой Тогда
					Если Выборка.План=0 Тогда
						Сообщение = Новый СообщениеПользователю;
						Сообщение.Текст = "Нет данных графика";
						Сообщение.Сообщить(); 
						Отказ = Истина;
					Иначе
						Запись.Результат = Выборка.Факт*Запись.Размер/Выборка.План*?(Запись.Сторно, -1, 1)
						*?(Выборка.Способ = Простой, 2/3, 1);
					КонецЕсли; 
				ИначеЕсли Выборка.Способ = Невыход Тогда
					Запись.Результат = -Выборка.Факт/8*Запись.Размер*?(Запись.Сторно, -1, 1)
				КонецЕсли; 
			КонецЕсли; 
			
		КонецЦикла; 
		
		Набор.Записать(,Истина);
	КонецЦикла; 
	
КонецПроцедуры


Процедура РассчитатьУдержания(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЕСТЬNULL(УдержанияБазаДополнительныеНачисления.НомерСтроки, УдержанияБазаОсновныеНачисления.НомерСтроки) КАК НомерСтроки,
	|	ЕСТЬNULL(УдержанияБазаДополнительныеНачисления.РезультатБаза, 0) + ЕСТЬNULL(УдержанияБазаОсновныеНачисления.РезультатБаза, 0) КАК База,
	|	ЕСТЬNULL(УдержанияБазаОсновныеНачисления.ВидРасчета.СпособРасчета, УдержанияБазаДополнительныеНачисления.ВидРасчета.СпособРасчета) КАК Способ
	|ИЗ
	|	РегистрРасчета.Удержания.БазаДополнительныеНачисления(
	|			&Измерения,
	|			&Измерения,
	|			,
	|			Регистратор = &Ссылка
	|				И ВидРасчета.СпособРасчета В (&Способы)) КАК УдержанияБазаДополнительныеНачисления
	|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрРасчета.Удержания.БазаОсновныеНачисления(
	|				&Измерения,
	|				&Измерения,
	|				,
	|				Регистратор = &Ссылка
	|					И ВидРасчета.СпособРасчета В (&Способы)) КАК УдержанияБазаОсновныеНачисления
	|		ПО УдержанияБазаДополнительныеНачисления.НомерСтроки = УдержанияБазаОсновныеНачисления.НомерСтроки";
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	Измерения.Добавить("Подразделение");
	
	Способы = Новый Массив;
	Способы.Добавить(Перечисления.СпособыРасчета.Процентом); 
	Запрос.УстановитьПараметр("Способы", Способы);
	
	Запрос.УстановитьПараметр("Измерения", Измерения);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Поиск = Новый Структура("НомерСтроки");
	Набор = Движения.Удержания;
	Процентом = Перечисления.СпособыРасчета.Процентом;
	
	Для каждого Запись Из Набор Цикл
		
		Поиск.НомерСтроки = Запись.НомерСтроки;
		Выборка.Сбросить();
		Если Выборка.НайтиСледующий(Поиск) Тогда
			
			Если Выборка.Способ = Процентом Тогда
				Запись.Результат = Выборка.База*Запись.Размер/100*?(Запись.Сторно, -1, 1);
			КонецЕсли; 
		Иначе
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Неизвесный вид расчета "+Запись.ВидРасчета;
			Сообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли; 
		
	КонецЦикла; 
	
	Набор.Записать(,Истина);
КонецПроцедуры
