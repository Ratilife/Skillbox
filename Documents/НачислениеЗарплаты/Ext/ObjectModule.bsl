
Процедура ОбработкаПроведения(Отказ, Режим)
	Отказ = Истина; 		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НачислениеЗарплатыНачисления.Размер КАК Размер,
		|	НачислениеЗарплатыНачисления.ВидНачисления КАК ВидНачисления
		|ИЗ
		|	Документ.НачислениеЗарплаты.Начисления КАК НачислениеЗарплатыНачисления
		|ГДЕ
		|	НачислениеЗарплатыНачисления.Ссылка = &Ссылка
		|	И НачислениеЗарплатыНачисления.ВидНачисления = &ВидНачисления
		|	И НачислениеЗарплатыНачисления.Размер > 0";
	
	Запрос.УстановитьПараметр("ВидНачисления", ПланыВидовРасчета.ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если  Выборка.Следующий() Тогда 
		 Отказ = Ложь;
	КонецЕсли;
	
	

	
	// регистр ОсновныеНачисления
	Движения.ОсновныеНачисления.Записывать = Истина;
	Для Каждого ТекСтрокаНачисления Из Начисления Цикл
		Движение = Движения.ОсновныеНачисления.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ТекСтрокаНачисления.ВидНачисления;
		Движение.ПериодДействияНачало = ТекСтрокаНачисления.ДатоНачало;
		Движение.ПериодДействияКонец = ТекСтрокаНачисления.ДатоОкончание;
		Движение.ПериодРегистрации = Дата;
		Движение.Сотрудник = ТекСтрокаНачисления.Сотрудник;
		//Движение.Результат = ТекСтрокаНачисления.Размер * ТекСтрокаНачисления.Факт/План;
		//Движение.Факт = 0;
		Движение.Размер = ТекСтрокаНачисления.Размер
	КонецЦикла;
	Движения.ОсновныеНачисления.Записать();	
	
	// Оклад
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисленияДанныеГрафика.Сотрудник КАК Сотрудник,
		|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗначениеЧасыФактическийПериодДействия, 0) КАК ФактЧасы,
		|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗначениеЧасыПериодДействия, 0) КАК ПланЧасы,
		|	ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисления.ДанныеГрафика(
		|			Регистратор = &РегистраторСсылка
		|				И ВидРасчета = &Оклад) КАК ОсновныеНачисленияДанныеГрафика";
	
	Запрос.УстановитьПараметр("Оклад", ПланыВидовРасчета.ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("РегистраторСсылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Для Каждого СтрДвижение из Движения.ОсновныеНачисления Цикл
		Если СтрДвижение.ВидРасчета <> ПланыВидовРасчета.ОсновныеНачисления.Оклад Тогда
			Продолжить;
		КонецЕсли;	
		ВыборкаДетальныеЗаписи.Сбросить(); //Позиционирует выборку в начало
		ВыборкаДетальныеЗаписи.НайтиСледующий(СтрДвижение.НомерСтроки,"НомерСтроки");
		
		СтрДвижение.Результат = ВыборкаДетальныеЗаписи.ФактЧасы / ВыборкаДетальныеЗаписи.ПланЧасы * СтрДвижение.Размер;
		СтрДвижение.Факт =  ВыборкаДетальныеЗаписи.ФактЧасы;
			
	КонецЦикла;	
	//Больничный
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.Сотрудник, 0) КАК Сотрудник,
		|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗначениеДниФактическийПериодДействия, 0) КАК ДниБольничного
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисления.ДанныеГрафика(
		|			Регистратор = &РегистраторСсылка
		|				И ВидРасчета = &Больничный) КАК ОсновныеНачисленияДанныеГрафика";
	
	Запрос.УстановитьПараметр("Больничный", ПланыВидовРасчета.ОсновныеНачисления.Больничный);
	Запрос.УстановитьПараметр("РегистраторСсылка", Ссылка);

	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	СтавкаПоБольничномуВДень = Константы.СтавкапоБольничномуВДень.Получить();
	Для Каждого СтрДвижение из Движения.ОсновныеНачисления Цикл
		Если СтрДвижение.ВидРасчета <> ПланыВидовРасчета.ОсновныеНачисления.Больничный Тогда
			Продолжить;
		КонецЕсли;	
		ВыборкаДетальныеЗаписи.Сбросить(); //Позиционирует выборку в начало
		ВыборкаДетальныеЗаписи.НайтиСледующий(СтрДвижение.НомерСтроки,"НомерСтроки");
		
		СтрДвижение.Результат = ВыборкаДетальныеЗаписи.ДниБольничного * СтавкаПоБольничномуВДень;
		СтрДвижение.Факт =  ВыборкаДетальныеЗаписи.ДниБольничного;
			
	КонецЦикла;	

	//Командировка
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.Сотрудник, 0) КАК Сотрудник,
		|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗначениеДниФактическийПериодДействия, 0) КАК ДниКомандировки
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисления.ДанныеГрафика(
		|			Регистратор = &Ссылка
		|				И ВидРасчета = &Коммандировка) КАК ОсновныеНачисленияДанныеГрафика";
	
	Запрос.УстановитьПараметр("Коммандировка", ПланыВидовРасчета.ОсновныеНачисления.Командировка);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	СтавкаКоммандировки = Константы.СтавкаКоммандировки.Получить();
	Для Каждого СтрДвижение из Движения.ОсновныеНачисления Цикл
		Если СтрДвижение.ВидРасчета <> ПланыВидовРасчета.ОсновныеНачисления.Командировка Тогда
			Продолжить;
		КонецЕсли;	
		ВыборкаДетальныеЗаписи.Сбросить(); //Позиционирует выборку в начало
		ВыборкаДетальныеЗаписи.НайтиСледующий(СтрДвижение.НомерСтроки,"НомерСтроки");
		
		СтрДвижение.Результат = ВыборкаДетальныеЗаписи.ДниКомандировки * СтавкаКоммандировки;
		СтрДвижение.Факт =  ВыборкаДетальныеЗаписи.ДниКомандировки;
			
	КонецЦикла;	

	// Отпуск
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисленияДанныеГрафика.Сотрудник КАК Сотрудник,
		|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗначениеЧасыФактическийПериодДействия, 0) КАК ФактЧасы,
		|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗначениеЧасыПериодДействия, 0) КАК ПланЧасы,
		|	ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ОкладыСотрудниковСрезПоследних.Оклад, 0) КАК Оклад
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисления.ДанныеГрафика(
		|			Регистратор = &Регистратор
		|				И ВидРасчета = &Отпуск) КАК ОсновныеНачисленияДанныеГрафика
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОкладыСотрудников.СрезПоследних КАК ОкладыСотрудниковСрезПоследних
		|		ПО ОсновныеНачисленияДанныеГрафика.Сотрудник = ОкладыСотрудниковСрезПоследних.Сотрудник";
	
	Запрос.УстановитьПараметр("Отпуск", ПланыВидовРасчета.ОсновныеНачисления.Отпуск);
	Запрос.УстановитьПараметр("Регистратор", ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Для Каждого СтрДвижение из Движения.ОсновныеНачисления Цикл
		Если СтрДвижение.ВидРасчета<> ПланыВидовРасчета.ОсновныеНачисления.Отпуск Тогда
			 Продолжить;
		КонецЕсли;
		Выборка.Сбросить();
		Выборка.НайтиСледующий(СтрДвижение.НомерСтроки,"НомерСтроки");
	
		СтрДвижение.Результат = Выборка.ФактЧасы / Выборка.ПланЧасы * Выборка.Оклад * 1.05;
        СтрДвижение.Факт = Выборка.ФактЧасы;
	КонецЦикла;	

	Движения.ОсновныеНачисления.Записать(,Истина);	
	
КонецПроцедуры
