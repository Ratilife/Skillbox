
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
		// Заполнение шапки
		Покупатель = ДанныеЗаполнения.Поставщик;
		Склад = ДанныеЗаполнения.Склад;
		Заказ = ДанныеЗаполнения.Ссылка;
		Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
			НоваяСтрока = Товары.Добавить();
			НоваяСтрока.Количество = ТекСтрокаТовары.Количество;
			НоваяСтрока.Номенклатура = ТекСтрокаТовары.Номенклатура;
			НоваяСтрока.Стоимость = ТекСтрокаТовары.Стоимость;
			НоваяСтрока.ЦенаРеализации = ТекСтрокаТовары.ЦенаРеализации;
		КонецЦикла;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияТоваров") Тогда
		// Заполнение шапки
		Договор = ДанныеЗаполнения.Договор;
		Заказ = ДанныеЗаполнения.Заказ;
		Покупатель = ДанныеЗаполнения.Покупатель;
		Склад = ДанныеЗаполнения.Склад;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
		ТорговаяТочка = ДанныеЗаполнения.ТорговаяТочка;
		Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
			НоваяСтрока = Товары.Добавить();
			НоваяСтрока.Количество = ТекСтрокаТовары.Количество;
			НоваяСтрока.Номенклатура = ТекСтрокаТовары.Номенклатура;
			НоваяСтрока.Скидка = ТекСтрокаТовары.Скидка;
			НоваяСтрока.Стоимость = ТекСтрокаТовары.Стоимость;
			НоваяСтрока.СтоимостьСоСкидкой = ТекСтрокаТовары.СтоимостьСоСкидкой;
			НоваяСтрока.Характеристика = ТекСтрокаТовары.Характеристика;
			НоваяСтрока.ЦенаРеализации = ТекСтрокаТовары.ЦенаРеализации;
		КонецЦикла;
	КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	// регистр Хозяйственный 
	Движения.Хозяйственный.Записывать = Истина;
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияТоваровТовары.Ссылка.Дата                                   КАК Период,
		|	СУММА(РеализацияТоваровТовары.Стоимость)                              КАК Сумма,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПокупателями)                КАК СчетДт,
		|	РеализацияТоваровТовары.Ссылка.Покупатель                             КАК СубконтоДт1,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконто.Контрагент)              КАК ВидСубконтоДт1,
		|	РеализацияТоваровТовары.Ссылка.Договор                                КАК СубконтоДт2,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконто.Договор)                 КАК ВидСубконтоДт2,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Выручка)                             КАК СчетКт,
		|	РеализацияТоваровТовары.Номенклатура.ВидНоменклатуры                  КАК СубконтоКт1,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконто.ВидНоменклатуры)         КАК ВидСубконтоКт1
		|ИЗ
		|	Документ.РеализацияТоваров.Товары КАК РеализацияТоваровТовары
		|ГДЕ
		|	РеализацияТоваровТовары.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	РеализацияТоваровТовары.Ссылка.Дата,
		|	РеализацияТоваровТовары.Ссылка.Договор,
		|	РеализацияТоваровТовары.Номенклатура.ВидНоменклатуры,
		|	РеализацияТоваровТовары.Ссылка.Покупатель";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Движения.Хозяйственный.Записывать = Истина;
	движения.Хозяйственный.Загрузить(РезультатЗапроса.Выгрузить());
		
	
	//Для Каждого ТекСтрокаТовары Из Товары Цикл
	//	Движение = Движения.Хозяйственный.Добавить();
	//	Движение.СчетКт = ПланыСчетов.Хозрасчетный.Выручка;
	//	Движение.СчетДт = ПланыСчетов.Хозрасчетный.РасчетыСПокупателями;
	//	Движение.Период = Дата;
	//	Движение.Сумма = ТекСтрокаТовары.Стоимость;
	//	Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.ВидНоменклатуры] = ТекСтрокаТовары.Номенклатура.ВидНоменклатуры;
	//	Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Контрагент] = Покупатель;
	//	Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Договор] = Договор;
	//	
	//	
	//КонецЦикла;
	
	// регистр ОбъемыПродажь 
	Движения.Продажи.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
			Движение = Движения.Продажи.Добавить();
			Движение.Период = Дата;
			Движение.Склады = Склад;
			Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
			Движение.Стоимость = ТекСтрокаТовары.Стоимость;
			Движение.Количество = ТекСтрокаТовары.Количество;
			Движение.Покупатель = Покупатель;
		КонецЦикла;
	
	// регистр ОстаткиНаСкладе Расход
	Движения.ОстаткиНаСкладе.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Если (ТекСтрокаТовары.Номенклатура.ВидНоменклатуры = Справочники.ВибыНоменклатура.Товар)
			ИЛИ (ТекСтрокаТовары.Номенклатура.ВидНоменклатуры = Справочники.ВибыНоменклатура.ПустаяСсылка()) Тогда
			Движение = Движения.ОстаткиНаСкладе.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
			Движение.Склады = Склад;
			Движение.Характеристика = ТекСтрокаТовары.Характеристика;
			Движение.Количество = ТекСтрокаТовары.Количество;
		КонецЕсли;
	КонецЦикла;
		//Проверка остатка на складе 
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиНаСкладеОстатки.Номенклатура КАК Номенклатура,
		|	ЕСТЬNULL(ОстаткиНаСкладеОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.ОстаткиНаСкладе.Остатки(, Номенклатура В (&Товары)) КАК ОстаткиНаСкладеОстатки
		|ГДЕ
		|	ОстаткиНаСкладеОстатки.КоличествоОстаток < 0";
	
	Запрос.УстановитьПараметр("Товары", Товары);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
			Отказ = Истина;
			Пока Выборка.Следующий() Цикл
				 Сообщить("Недостаточно товара "+ Выборка.Номенклатура+" ! нехватает: "+ -Выборка.КоличествоОстаток+" !" );
			КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	СуммаДокумента = Товары.Итог("Стоимость");
КонецПроцедуры

	//// регистр Хозяйственный 
	