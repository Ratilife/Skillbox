
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	// 1. Установка маркера Записи у регистра
	Движения.ОсновноеНачислениеИзменениеОклада.Записывать=Истина;
	
	// 2. Получение данных из документа	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НачислениеЗарплатыИзменениеОкладаНачисления.Ссылка.ПериодРегистрации КАК ПериодРегистрации,
		|	НачислениеЗарплатыИзменениеОкладаНачисления.НомерСтроки КАК НомерСтроки,
		|	НачислениеЗарплатыИзменениеОкладаНачисления.Сотрудник КАК Сотрудник,
		|	НачислениеЗарплатыИзменениеОкладаНачисления.ВидРасчета КАК ВидРасчета,
		|	НачислениеЗарплатыИзменениеОкладаНачисления.ДатаНачала КАК НачалоПериода,
		|	КОНЕЦПЕРИОДА(НачислениеЗарплатыИзменениеОкладаНачисления.ДатаОкончания, ДЕНЬ) КАК КонецПериода
		|ПОМЕСТИТЬ ВТДокумент
		|ИЗ
		|	Документ.НачислениеЗарплатыИзменениеОклада.Начисления КАК НачислениеЗарплатыИзменениеОкладаНачисления
		|ГДЕ
		|	НачислениеЗарплатыИзменениеОкладаНачисления.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	ВидРасчета,
		|	КонецПериода
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТДокумент.ПериодРегистрации КАК ПериодРегистрации,
		|	ВТДокумент.НомерСтроки КАК НомерСтроки,
		|	ВТДокумент.Сотрудник КАК Сотрудник,
		|	ВТДокумент.ВидРасчета КАК ВидРасчета,
		|	ЕСТЬNULL(ПлановыеНачисления.Период, ВТДокумент.НачалоПериода) КАК Период,
		|	ЕСТЬNULL(ПлановыеНачисления.Размер, 0) КАК Размер,
		|	ВТДокумент.НачалоПериода КАК НачалоПериода,
		|	ВТДокумент.КонецПериода КАК КонецПериода
		|ПОМЕСТИТЬ ВТПлановыеНачисления
		|ИЗ
		|	ВТДокумент КАК ВТДокумент
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСотрудникахИзменениеОклада КАК ПлановыеНачисления
		|		ПО ВТДокумент.Сотрудник = ПлановыеНачисления.Сотрудник
		|			И ВТДокумент.ВидРасчета = ПлановыеНачисления.ВидРасчета
		|			И ВТДокумент.КонецПериода >= ПлановыеНачисления.Период
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	ВидРасчета,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТПлановыеНачисления.Сотрудник КАК Сотрудник,
		|	ВТПлановыеНачисления.ВидРасчета КАК ВидРасчета,
		|	МАКСИМУМ(ВТПлановыеНачисления.Период) КАК Период
		|ПОМЕСТИТЬ ВТПериоды
		|ИЗ
		|	ВТПлановыеНачисления КАК ВТПлановыеНачисления
		|ГДЕ
		|	ВТПлановыеНачисления.Период <= ВТПлановыеНачисления.НачалоПериода
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТПлановыеНачисления.Сотрудник,
		|	ВТПлановыеНачисления.ВидРасчета
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Период,
		|	Сотрудник,
		|	ВидРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТПлановыеНачисления.ПериодРегистрации КАК ПериодРегистрации,
		|	ВТПлановыеНачисления.НомерСтроки КАК НомерСтроки,
		|	ВТПлановыеНачисления.Сотрудник КАК Сотрудник,
		|	ВТПлановыеНачисления.ВидРасчета КАК ВидРасчета,
		|	ВТПлановыеНачисления.Период КАК Период,
		|	ВТПлановыеНачисления.Размер КАК Размер,
		|	ВТПлановыеНачисления.НачалоПериода КАК НачалоПериода,
		|	ВТПлановыеНачисления.КонецПериода КАК КонецПериода
		|ИЗ
		|	ВТПлановыеНачисления КАК ВТПлановыеНачисления
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПериоды КАК ВТПериоды
		|		ПО ВТПлановыеНачисления.Сотрудник = ВТПериоды.Сотрудник
		|			И ВТПлановыеНачисления.ВидРасчета = ВТПериоды.ВидРасчета
		|			И ВТПлановыеНачисления.Период = ВТПериоды.Период
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТПлановыеНачисления.ПериодРегистрации,
		|	ВТПлановыеНачисления.НомерСтроки,
		|	ВТПлановыеНачисления.Сотрудник,
		|	ВТПлановыеНачисления.ВидРасчета,
		|	ВТПлановыеНачисления.Период,
		|	ВТПлановыеНачисления.Размер,
		|	ВТПлановыеНачисления.НачалоПериода,
		|	ВТПлановыеНачисления.КонецПериода
		|ИЗ
		|	ВТПлановыеНачисления КАК ВТПлановыеНачисления
		|ГДЕ
		|	ВТПлановыеНачисления.Период > ВТПлановыеНачисления.НачалоПериода
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки,
		|	Период
		|ИТОГИ
		|	МИНИМУМ(НачалоПериода),
		|	МАКСИМУМ(КонецПериода)
		|ПО
		|	НомерСтроки";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	// 8. Формирование выборки для движений
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаИтоги = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаИтоги.Следующий() Цикл
		ПредыдущаяЗапись = Неопределено;
		ПериодДействияНачало = ВыборкаИтоги.НачалоПериода;
		ПериодДействияКонец = ВыборкаИтоги.КонецПериода;
        		 	
		Выборка = ВыборкаИтоги.Выбрать();
		// если для одного номера строки табличной части запрос вернул несколько строк,
		// то это означает, что плановые начисления неоднократно изменялись в течение месяца
		Пока Выборка.Следующий() Цикл
			НоваяЗапись = Движения.ОсновноеНачислениеИзменениеОклада.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись,Выборка);
			// 9. Первой всегда будет строка табличной части документа с показателем на начало периода действия надбавки
			// если размер надбавки изменялся в течение месяца, то начало периода действия должно совпадать с периодом ее изменения 
			ПериодДействияНачало = Макс(Выборка.НачалоПериода, Выборка.Период); 
			НоваяЗапись.ПериодДействияНачало = ПериодДействияНачало;
			НоваяЗапись.ПериодДействияКонец = ПериодДействияКонец;
			// 10. Окончание периода действия предыдущей строки должно предшествовать текущей 
			Если ПредыдущаяЗапись <> Неопределено Тогда
				ПредыдущаяЗапись.ПериодДействияКонец = КонецДня(ПериодДействияНачало - 1);
			КонецЕсли;
			ПредыдущаяЗапись = НоваяЗапись;
		КонецЦикла;
	КонецЦикла;
	// 11. Предварительная запись движений документа
	Движения.Записать();
    
	// 12. Выполнение расчетов для записанных наборов записей
	РасчетЗП.РассчитатьИзменениеОклада(Ссылка,Движения.ОсновноеНачислениеИзменениеОклада);	
КонецПроцедуры
