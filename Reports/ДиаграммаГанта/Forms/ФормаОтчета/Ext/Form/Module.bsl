
&НаСервере
Процедура СформироватьНаСервере()
	// 1. Запрос, в котором получается период действия вида расчета в разрезе сотрудников
	//В качестве источника данных для диаграммы используем виртуальную таблицу регистра расчета ФактическийПериодДействия, 
	//которая позволяет получить записи регистра с учетом механизма вытеснения.	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисления2ФактическийПериодДействия.Регистратор КАК Регистратор,
		|	ОсновныеНачисления2ФактическийПериодДействия.Регистратор.Представление КАК Представление,
		|	ОсновныеНачисления2ФактическийПериодДействия.Сотрудник КАК Сотрудник,
		|	ОсновныеНачисления2ФактическийПериодДействия.ВидРасчета КАК ВидРасчета,
		|	ОсновныеНачисления2ФактическийПериодДействия.ПериодДействияНачало КАК ПериодДействияНачало,
		|	ОсновныеНачисления2ФактическийПериодДействия.ПериодДействияКонец КАК ПериодДействияКонец
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисления2.ФактическийПериодДействия(ПериодДействия МЕЖДУ &НачалоПериода И &КонецПериода) КАК ОсновныеНачисления2ФактическийПериодДействия";    //ПериодДействия МЕЖДУ &НачалоПериода И &КонецПериода
	
	Запрос.УстановитьПараметр("КонецПериода", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("НачалоПериода",Период.ДатаНачала );  
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	// 2. Очистка диаграммы перед формированием
	Диаграмма.Очистить();
	//В цикле обойдем результат запроса для добавление в диаграмму интервалов. 
	//В качестве точки будем устанавливать Сотрудника, в качестве серии ВидРасчета. 
	//Начало интервала установим равным началу периода действия вида расчета, 
	//конец интервала будет равен концу периода действия вида расчета. 
	//Для визуализации диаграммы для каждого вида расчета будем устанавливать свой цвет.
	Пока Выборка.Следующий() Цикл
		// 3.Установка сотрудника в качестве точек диаграммы
        Точка = Диаграмма.УстановитьТочку(Выборка.Сотрудник);
        // 4. В качестве серий установлены виды расчета  
        Серия = Диаграмма.УстановитьСерию(Выборка.ВидРасчета);
        // 5. Получение значения диаграммы для установленной точки и серии
        Значение = Диаграмма.ПолучитьЗначение(Точка, Серия);
		// 6. Добавление интервала с текущим фактическим периодом действия
        Интервал = Значение.Добавить();
        Интервал.Начало = Выборка.ПериодДействияНачало;
        Интервал.Конец = Выборка.ПериодДействияКонец;
        Интервал.Текст = Выборка.Представление;
        Интервал.Расшифровка = Выборка.Регистратор;
        
        ВидРасчета = Выборка.ВидРасчета;
        
        // 7. Раскраска серий в зависимости от вида расчета
        Если ВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.Оклад Тогда
            Серия.Цвет = WebЦвета.Красный;
        ИначеЕсли ВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.Командировка Тогда    
            Серия.Цвет = WebЦвета.Синий;
		ИначеЕсли ВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.Больничный Тогда
			Серия.Цвет = WebЦвета.Зеленый;
		ИначеЕсли ВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.Отпуск Тогда
			Серия.Цвет = WebЦвета.Циан;
        КонецЕсли; 

	КонецЦикла;
	
	

КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	СформироватьНаСервере();
КонецПроцедуры
