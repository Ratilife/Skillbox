&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка) 
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЦветФонаЗаменяемогоПараметра = ПечатьДоговоров.ЦветФонаЗаменяемогоПараметра();
	
	Если ЗначениеЗаполнено(Параметры.ШаблонДоговора) Тогда
	
		ШаблонДоговора = Параметры.ШаблонДоговора;
		ОбъектПечати = Параметры.ОбъектПечати;
		
	Иначе
		
		ОбъектПечати = Параметры.ОбъектПечати;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ОбъектПечати) Тогда
		ВызватьИсключение НСтр("ru = 'Не определен договор или документ, для которого необходимо распечатать текст договора.'");
	КонецЕсли;
	
	ЗагрузитьСведенияОДоговореКонтрагента();  
	Если ЗначениеЗаполнено(ШаблонДоговора) Тогда
			
			ТекстПросьбы = Символы.ПС + Символы.Таб + НСтр("ru = 'Пожалуйста, подождите...'");
			ШрифтПросьбы = Новый Шрифт( , 18, Истина);
			ПросьбаПодождать = Новый ФорматированнаяСтрока(ТекстПросьбы, ШрифтПросьбы);
			ФорматированныйДокумент.УстановитьФорматированнуюСтроку(ПросьбаПодождать);
			
			ЗагрузитьШаблонДоговора();
			
		Иначе
			// Нигде не смогли найти, какой шаблон использовать.
			ВызватьИсключение НСтр("ru = 'Не указан шаблон договора для редактирования текста договора.'");
		КонецЕсли;

	УправлениеФормой();
	
	Если НЕ ТолькоПросмотр Тогда
		//ДобавитьДополнительныеРеквизитыИДопСвойства()
	КонецЕсли;

КонецПроцедуры	

&НаСервере
Процедура ЗагрузитьСведенияОДоговореКонтрагента()

	Если ТипЗнч(ОбъектПечати) = Тип("СправочникСсылка.Договора") Тогда
		ДоговорКонтрагента = ОбъектПечати;
	ИначеЕсли ОбъектПечати.Метаданные().Реквизиты.Найти("ДоговорКонтрагента") <> Неопределено Тогда
		//ДоговорКонтрагента = ОбщееНазначение.ЗначениеРеквизитаОбъекта(ОбъектПечати, "ДоговорКонтрагента");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не определен договор для %1'"), ОбъектПечати);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;

//	РеквизитыДоговора = ОбщееНазначение.ЗначенияРеквизитовОбъекта(ДоговорКонтрагента, 
		//"Владелец, ФайлДоговора, ДоговорПодписан, Номер, Дата");
		
	//Контрагент		= РеквизитыДоговора.Владелец;
	//ФайлДоговора 	= РеквизитыДоговора.ФайлДоговора;
	//НомерДоговора 	= РеквизитыДоговора.Номер;
	//ДатаДоговора 	= РеквизитыДоговора.Дата;
	//// Считаем, что договор подписан, только если создан файл договора
	//ДоговорПодписан = РеквизитыДоговора.ДоговорПодписан И ЗначениеЗаполнено(ФайлДоговора);
	
КонецПроцедуры

 &НаСервере
Процедура УправлениеФормой()
	
	ВидимостьКоманднаяПанель = Истина;
	
	Если ПодписанЭП Тогда
		ВидимостьКоманднаяПанель = Ложь;
		СтатусДоговора = "Договор подписан электронной подписью";
	ИначеЕсли ДоговорПодписан Тогда
		ВидимостьКоманднаяПанель = Ложь;
		СтатусДоговора = "Договор подписан";
	КонецЕсли;
	
	//Элементы.ГруппаКоманднаяПанель.Видимость = ВидимостьКоманднаяПанель;
	//Элементы.ГруппаПодписан.Видимость = НЕ ВидимостьКоманднаяПанель;
	
	Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = '%1 (%2)'"), ДоговорКонтрагента, Контрагент);
		
КонецПроцедуры

&НаСервере
Процедура ДобавитьДополнительныеРеквизитыИДопСвойства()
	
	// Добавим дополнительные реквизиты и доп. свойства объектов для выбора в качестве параметров.
	
	СоответствиеДопРеквизитыГруппаЭлементов = Новый Соответствие;
	
	ВсеСвойства = Новый Массив;
	
	// Список доп. реквизитов и доп. сведений организации
	СвойстваОбъекта = УправлениеСвойствами.СвойстваОбъекта(Справочники.Организации.ПустаяСсылка(), Истина, Истина);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ВсеСвойства, СвойстваОбъекта);
	СоответствиеДопРеквизитыГруппаЭлементов.Вставить(Элементы.ГруппаДополнительныеРеквизитыОрганизация, СвойстваОбъекта);
	
	// Список доп. реквизитов и доп. сведений контрагента
	СвойстваОбъекта = УправлениеСвойствами.СвойстваОбъекта(Справочники.Контрагенты.ПустаяСсылка(), Истина, Истина);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ВсеСвойства, СвойстваОбъекта);
	СоответствиеДопРеквизитыГруппаЭлементов.Вставить(Элементы.ГруппаДополнительныеРеквизитыКонтрагент, СвойстваОбъекта);
	
	// Список доп. реквизитов и доп. сведений договора
	СвойстваОбъекта = УправлениеСвойствами.СвойстваОбъекта(Справочники.ДоговорыКонтрагентов.ПустаяСсылка(), Истина, Истина);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ВсеСвойства, СвойстваОбъекта);
	СоответствиеДопРеквизитыГруппаЭлементов.Вставить(Элементы.ГруппаДополнительныеРеквизитыДоговорКонтрагента, СвойстваОбъекта);
	
	//// Список доп. реквизитов и доп. сведений документа
	//ЭтоСчетНаОплату = ТипЗнч(ОбъектПечати) = Тип("ДокументСсылка.СчетНаОплатуПокупателю");
	//
	//Если ЭтоСчетНаОплату Тогда
	//	СвойстваОбъекта = УправлениеСвойствами.СвойстваОбъекта(Документы.СчетНаОплатуПокупателю.ПустаяСсылка(), Ложь, Истина);
	//	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ВсеСвойства, СвойстваОбъекта);
	//	СоответствиеДопРеквизитыГруппаЭлементов.Вставить(Элементы.ГруппаДополнительныеРеквизитыДокумента, СвойстваОбъекта);
	//Иначе
		Элементы.ГруппаПараметрыДокумента.Видимость = Ложь;
	//КонецЕсли;
	
	// Текстовые поля по массиву ссылок
	РеквизитыСвойств = ОбщееНазначение.ЗначенияРеквизитовОбъектов(ВсеСвойства, "Заголовок, Наименование");
	
	// Вставляем в подменю каждого объекта перечень всех его доп. реквизитов и доп. свойств отдельными пунктами.
	
	НомерКоманды = 0;
	Для Каждого КлючИЗначение Из СоответствиеДопРеквизитыГруппаЭлементов Цикл 
		
		МассивСвойств = КлючИЗначение.Значение;	
		
		Для Каждого СсылкаНаСвойство Из МассивСвойств Цикл
			
			ПоляСвойства = РеквизитыСвойств[СсылкаНаСвойство];
			Если ПоляСвойства = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ИмяКоманды = "ВставитьДополнительныйРеквизит" + Формат(НомерКоманды, "ЧН=0; ЧГ=");
			НаименованиеРеквизита = ПоляСвойства.Заголовок;
			
			Команда = Команды.Добавить(ИмяКоманды);
			Команда.Заголовок = НаименованиеРеквизита;
			Команда.Действие = "ВставитьДополнительныйРеквизит";
			Команда.ИзменяетСохраняемыеДанные = Истина;
			
			Кнопка = Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), КлючИЗначение.Ключ);
			Кнопка.ИмяКоманды = ИмяКоманды;
			Кнопка.Заголовок = НаименованиеРеквизита;
			
			ЭтотОбъект.ДополнительныеРеквизиты.Добавить(ПоляСвойства.Наименование);
			
			НомерКоманды = НомерКоманды + 1;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры


#Область ОбработчикиСобытийКомандныхПанелейФормы
&НаКлиенте
Процедура Сохранить(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ОбъектПечати", ДоговорКонтрагента);
	
	//ОткрытьФорму("Справочник.ДоговорыКонтрагентов.Форма.СохранениеПечатнойФормы", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры  

#КонецОбласти

#Область ОбработчикиСобытийФормы
 &НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ДлительнаяОперация <> Неопределено Тогда
		ПодключитьОбработчикОжидания("Подключаемый_ОжидатьЗагрузкиШаблона", 0.1, Истина);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область РаботаСШаблоном
 &НаКлиенте
Процедура Подключаемый_ОжидатьЗагрузкиШаблона()
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбработатьЗагрузкуШаблона", ЭтотОбъект);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Заполнение шаблона договора'");
	ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьШаблонДоговора()

	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("ШаблонДоговора",          ШаблонДоговора);
	ПараметрыЗаполнения.Вставить("СсылкаНаОбъект",          ОбъектПечати);
	
	ПараметрыВыполненияВФоне = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполненияВФоне.НаименованиеФоновогоЗадания = НСтр("ru = 'Заполнение шаблона договора'");
	ПараметрыВыполненияВФоне.КлючФоновогоЗадания         = ОбъектПечати;
	
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне("ПечатьДоговоров.ЗаполнитьТекстДоговораПоШаблонуВФоне",
		ПараметрыЗаполнения, ПараметрыВыполненияВФоне);
	
КонецПроцедуры


#КонецОбласти   
&НаКлиенте
Процедура ОбработатьЗагрузкуШаблона(Результат, ДополнительныеПараметры) Экспорт
	
	ДлительнаяОперация = Неопределено;
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус <> "Выполнено" Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			Результат.КраткоеПредставлениеОшибки,
			ШаблонДоговора,
			"ФорматированныйДокумент");
		Возврат;
	КонецЕсли;
	
	ОбработатьЗагрузкуШаблонаНаСервере(Результат.АдресРезультата);
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьЗагрузкуШаблонаНаСервере(Знач АдресХранилища)

	// Получаем из фонового задания подготовленный текст и вложения
	// и заполняем по ним форматированный документ.
	Если ЭтоАдресВременногоХранилища(АдресХранилища) Тогда
		Результат = ПолучитьИзВременногоХранилища(АдресХранилища);
		Если ТипЗнч(Результат) = Тип("ХранилищеЗначения") Тогда
			ДанныеДокумента = Результат.Получить();
		КонецЕсли;
	КонецЕсли;

	Если ТипЗнч(ДанныеДокумента) = Тип("Структура") Тогда
		ФорматированныйДокумент.УстановитьHTML(ДанныеДокумента.ТекстHTML, ДанныеДокумента.Вложения);
	Иначе
		ФорматированныйДокумент.УстановитьHTML("", Новый Структура);
	КонецЕсли;

КонецПроцедуры

