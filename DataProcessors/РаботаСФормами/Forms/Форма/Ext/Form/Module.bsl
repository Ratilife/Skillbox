
&НаКлиенте
Перем КлиентскаяПеременная;
&НаСервере
Перем СервернаяПеременная ;
&НаКлиенте
Процедура ПримерыОткрытияФорм()
	ОткрытьФорму("Справочник.Контрагенты.Форма.ФормаЭлементаДляМенеджера"); 
	//ОткрытьФорму("Справочник.Договора.ФормаСписка");
	//ОткрытьФорму("Справочник.Контрагенты.Форма.ФормаЭлементаОсобая"); 
	//ОткрытьФорму("ОбщаяФорма.НастройкаКонфигурации"); 
	//ОткрытьФорму("Справочник.Контрагенты.ФормаОбъекта"); 
	//ОткрытьФорму("Справочник.Контрагенты.ФормаСписка"); 
	////ПараметрыФормы = Новый Структура;
	////ПараметрыФормы.Вставить("ТолькоПросмотр",Истина);
	////ОткрытьФорму("Справочник.Контрагенты.ФормаОбъекта",ПараметрыФормы); 
	//
	//ПараметрыФормы = Новый Структура;
	//ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
	//ОткрытьФорму("Отчет.ИсторияКонтрагента.Форма",ПараметрыФормы); 
КонецПроцедуры // ПримерыОткрытияФорм()


&НаКлиенте
Процедура ОткрытьФормуКонтрагента(Команда)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", Контрагент);
	//ПараметрыФормы.Вставить("ТолькоПросмотр", Истина);
	ОткрытьФорму("Справочник.Контрагенты.ФормаОбъекта",ПараметрыФормы); 	
КонецПроцедуры


&НаКлиенте
Процедура ОткрытьФормуСПараметрами(Команда)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", Контрагент);
	ПараметрыФормы.Вставить("ДляОрганизацийНедоступенПол", ДляОрганизацийНедоступенПол);
	ПараметрыФормы.Вставить("Период", Период);
	ОткрытьФормуМодально("Справочник.Контрагенты.ФормаОбъекта",ПараметрыФормы); 	
	//ОткрытьФорму("Справочник.Контрагенты.ФормаОбъекта",ПараметрыФормы); 	
КонецПроцедуры


&НаКлиенте
Процедура ПолучитьФормуКонтрагента(Команда)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", Контрагент);
	НашаФорма = ПолучитьФорму("Справочник.Контрагенты.ФормаОбъекта",ПараметрыФормы); 
	НашаФорма.ДляОрганизацийНедоступенПол=Истина;	
	НашаФорма.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура ПримерыОткрытия(Команда)
	ПримерыОткрытияФорм();
КонецПроцедуры
&НаКлиенте
Процедура СозданиеОптовогоСклада(Команда)
	ПараметрыСозданияСклада = Новый Структура;
	ПараметрыСозданияСклада.Вставить("Оптовый", Истина);
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", ПараметрыСозданияСклада);
	ОткрытьФорму("Справочник.Склады.ФормаОбъекта",ПараметрыФормы); 
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РеквизитФормы = "Наше значение";
	НоваяСтрока = ТаблицаК.Добавить();
	НоваяСтрока.Тип = "Оптовый";
	НоваяСтрока.Количество = 1;
	
	
	ТаблицаТест = Новый ТаблицаЗначений;
	ТаблицаТест.Колонки.Добавить("Тип");
	ТаблицаТест.Колонки.Добавить("Количество");
	НоваяСтрока = ТаблицаТест.Добавить();
	НоваяСтрока.Тип = "Розница";
	НоваяСтрока.Количество = 2;
	НоваяСтрока = ТаблицаТест.Добавить();
	НоваяСтрока.Тип = "Разовий";
	НоваяСтрока.Количество = 3;
	
	Т = РеквизитФормыВЗначение("ТаблицаК");
	ЗначениеВРеквизитФормы(ТаблицаТест,"ТаблицаК");
	Для Сч = 1 По 1000 Цикл
		
		СтрокаТаблицы = ТаблицаК1.Добавить();
		СтрокаТаблицы.Количество = Сч;
		НоваяСтрока.Тип = "Разовий" + Сч;
		
	КонецЦикла; 
	
КонецПроцедуры


&НаКлиенте
Процедура СозданиеЭлементаНаОсновании(Команда)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Новый Структура("Владелец", Контрагент));
	ОткрытьФорму("Справочник.Договора.ФормаОбъекта",ПараметрыФормы); 
КонецПроцедуры


&НаКлиенте
Процедура ТаблицаКТипПриИзменении(Элемент)
	ТД = Элементы.ТаблицаК.ТекущиеДанные;
	ТД.Количество = ТД.Количество +1;
	
КонецПроцедуры


&НаСервере
Функция ДемонстрацияПередачиНаСерверСКонтекстомНаСервере(ПолученныйКонтрагент)
	Признак = ПолученныйКонтрагент.Признак;
	Возврат Признак ;
КонецФункции


&НаКлиенте
Процедура ДемонстрацияПередачиНаСерверСКонтекстом(Команда)
	Сообщить(ДемонстрацияПередачиНаСерверСКонтекстомНаСервере(Контрагент));
КонецПроцедуры


&НаСервереБезКонтекста
//Функция ДемонстрацияПередачиНаСерверБезКонтекстаНаСервере(НашаПеременная,ПолученныйКонтрагент)
Функция ДемонстрацияПередачиНаСерверБезКонтекстаНаСервере(ПолученныйКонтрагент)
	ПризнакКонтрагента = ПолученныйКонтрагент.Признак;
	Возврат ПризнакКонтрагента ;
	////Сообщить(СтрокаСТекстом);
	//СтрокаСТекстом="325436";
	//СтруктураВозврата = Новый Структура;
	//СтруктураВозврата.Вставить("ОсновнаяОрганизация",Константы.ОсновнаяОрганизация.Получить());
	//СтруктураВозврата.Вставить("СтрокаСТекстом", СтрокаСТекстом);
	//СтруктураВозврата.Вставить("ПризнакКонтрагента", ПризнакКонтрагента);
	//
	//Возврат  СтруктураВозврата;
КонецФункции


&НаКлиенте
Процедура ДемонстрацияПередачиНаСерверБезКонтекста(Команда)
	Сообщить(ДемонстрацияПередачиНаСерверБезКонтекстаНаСервере(Контрагент));
	// НашаПеременная = "214";
	//ПолученнаяСтруктура = ДемонстрацияПередачиНаСерверБезКонтекстаНаСервере(НашаПеременная,Контрагент);
КонецПроцедуры

&НаСервере
Процедура ПростоСервернаяПроцедура()
	ПрисвоитьСервернуюПеременную();
	РаботаСПермеменнымиНаСервере();
	
	
КонецПроцедуры // ПростоСервернаяункция()

&НаСервере
Процедура ПрисвоитьСервернуюПеременную()
	
	СервернаяПеременная = "Привет на сервере";
	
	
КонецПроцедуры // переменнуюПрисвоитьСерверную()

&НаСервере
Процедура РаботаСПермеменнымиНаСервере()
	Сообщить("Сервер 1 " +СервернаяПеременная);
	ДемонстрацияПередачиНаСерверСКонтекстомНаСервере(Контрагент);
	Сообщить("Сервер 2 " +СервернаяПеременная);
	
КонецПроцедуры
&НаКлиенте
Процедура ПроверкаПеременной(Режим)
	
	Сообщить("Клиент"+Режим+" " +КлиентскаяПеременная);
	
КонецПроцедуры // ()

&НаКлиенте
Процедура СообщитьТекущуюДату()
	
	Сообщить(" " +ТекущаяДата() +"Клиент3 " +КлиентскаяПеременная );
	
КонецПроцедуры // ()

&НаКлиенте
Процедура РаботаСпермеменными(Команда)
	РеквизитФормы = "Наш реквизит";
	КлиентскаяПеременная = "Привет";
	ПроверкаПеременной(1);
	ПростоСервернаяПроцедура()  ;
	
	РаботаСПермеменнымиНаСервере();
	ПроверкаПеременной(2);
	СообщитьТекущуюДату();
	
	ПроверкаПеременной(2);
	РаботаСПермеменнымиНаСервере();
	ПроверкаПеременной(4);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
КонецПроцедуры

&НаКлиенте
Процедура МодальноеОткрытиеФорм(Команда)
	СтруктураПараметровИзФормыПечати =ОткрытьФормуМодально("ОбщаяФорма.ПолучитьНастройкиПечати"); 
	Если СтруктураПараметровИзФормыПечати = Неопределено Тогда
	Иначе
		КоличествоЭкземпляровПечати=СтруктураПараметровИзФормыПечати.КоличествоЭкземпляровПечати;
		ПечатьБезПросмотра=СтруктураПараметровИзФормыПечати.ПечатьБезПросмотра;
		ПримечаниеДляПечати=СтруктураПараметровИзФормыПечати.ПримечаниеДляПечати;
		СлужебнаяПечать=СтруктураПараметровИзФормыПечати.СлужебнаяПечать;
	КонецЕсли; 	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//	ТекущееВремя = Час(ТекущаяДата());
	//Если ТекущееВремя>19 Тогда
	//
	//Отказ =Истина;	
	//
	//КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры



&НаКлиенте
Процедура РассчитатьСуммы(Команда)
	Для каждого СтрокаТаблицы Из ТаблицаТоваров Цикл
		
		СтрокаТаблицы.Сумма = СтрокаТаблицы.Количество * СтрокаТаблицы.Цена;
		//СтрокаТаблицы.Сумма = ВычислитьСуммуФункция(СтрокаТаблицы.Цена,СтрокаТаблицы.Количество);
		//ВычислитьСумму(СтрокаТаблицы.Цена,СтрокаТаблицы.Количество,СтрокаТаблицы.Сумма);
		
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаТоваровКоличествоПриИзменении(Элемент)
	СтрокаТаблицы = Элементы.ТаблицаТоваров.ТекущиеДанные;
	СтрокаТаблицы.Сумма = СтрокаТаблицы.Количество * СтрокаТаблицы.Цена;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаТоваровЦенаПриИзменении(Элемент)
	ТД = Элементы.ТаблицаТоваров.ТекущиеДанные;
	ТД.Сумма = ТД.Количество * ТД.Цена;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаТоваровПриИзменении(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры


&НаКлиенте
Процедура Команда1(Команда)
	
	

КонецПроцедуры
