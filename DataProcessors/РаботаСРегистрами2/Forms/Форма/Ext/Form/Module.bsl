
&НаСервереБезКонтекста
Процедура ПросмотрСтруктурыБазыНаСервере()
	ТаблицаСтруктурыБазы= ПолучитьСтруктуруХраненияБазыДанных();
КонецПроцедуры

&НаКлиенте
Процедура ПросмотрСтруктурыБазы(Команда)
	ПросмотрСтруктурыБазыНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПересчитатьИтогиПоРегиструНаСервере()
РегистрыНакопления.ОстаткиТоваров.ПересчитатьИтоги();
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьИтогиПоРегистру(Команда)
	ПересчитатьИтогиПоРегиструНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПроведениеВМодулеДокументаНаСервере()
	ТекДокОбъект = ПоступлениеТоваровИУслуг.ПолучитьОбъект();
	ТекДокОбъект.ПроведениеВМодуле();

	
КонецПроцедуры

&НаКлиенте
Процедура ПроведениеВМодулеДокумента(Команда)
	ПроведениеВМодулеДокументаНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПерепрповестиРеализНаСервере()
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализационнаяНакладная.Ссылка
		|ИЗ
		|	Документ.РеализационнаяНакладная КАК РеализационнаяНакладная
		|ГДЕ
		|	РеализационнаяНакладная.Проведен";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		  ТекОбъект =  ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		  ТекОбъект.Записать(РежимЗаписиДокумента.Проведение);
		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПерепрповестиРеализ(Команда)
	ПерепрповестиРеализНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьКурсНаСервере(НаДату,Валюта,Курс)
	
	НаборЗаписейРегистра = РегистрыСведений.КурсыВалют.СоздатьНаборЗаписей();
	НаборЗаписейРегистра.Отбор.Валюта.Установить(Валюта);
	НаборЗаписейРегистра.Отбор.Период.Установить(НаДату);
	ЗаписьРегистра =НаборЗаписейРегистра.Добавить();
	ЗаписьРегистра.Период=НаДату;
	ЗаписьРегистра.Валюта=Валюта;
	ЗаписьРегистра.Курс=Курс;
	НаборЗаписейРегистра.Записать();
	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьКурс(Команда)
	ЗаписатьКурсНаСервере(НаДату,Валюта,Курс);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПоказатьКурсНаСервере(НаДату)

	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КурсыВалютСрезПоследних.Период,
		|	КурсыВалютСрезПоследних.Валюта,
		|	КурсыВалютСрезПоследних.Курс
		|ИЗ
		|	РегистрСведений.КурсыВалют.СрезПоследних(&НаДату, ) КАК КурсыВалютСрезПоследних";
	
	Запрос.УстановитьПараметр("НаДату", НаДату);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
	Сообщить(Строка(ВыборкаДетальныеЗаписи.Валюта) + " "+Строка(ВыборкаДетальныеЗаписи.курс));	
	КонецЦикла;
	
КонецПроцедуры
&НаСервереБезКонтекста
Процедура ПоказатьКурсСрезПоследнихОбъектно(Валюта,НаДату)
	СрезПоследних=РегистрыСведений.КурсыВалют.СрезПоследних(НаДату);
	ОтборПоВалюте = Новый Структура("Валюта",Валюта);
	//ОтборПоВалюте.Валюта = Валюта;
	
	//СрезПоследних=РегистрыСведений.КурсыВалют.СрезПоследних();
	СрезПоследних=РегистрыСведений.КурсыВалют.СрезПоследних(НаДату,ОтборПоВалюте);
	СтруктураПоследнее=РегистрыСведений.КурсыВалют.ПолучитьПоследнее(НаДату,ОтборПоВалюте);
	
	Если СрезПоследних.Количество()>1 Тогда
		Сообщить(Строка(СрезПоследних[0].Валюта) + " "+СрезПоследних[0].курс);	
	КонецЕсли; 	
	СрезПервых=РегистрыСведений.КурсыВалют.СрезПервых(НаДату,ОтборПоВалюте);
	Если СрезПервых.Количество()>1 Тогда
		
		
		Сообщить(Строка(СрезПервых[0].Валюта) + " "+СрезПервых[0].курс);	
		
	КонецЕсли; 	
	СрезПоследних=РегистрыСведений.КурсыВалют.СрезПоследних();
	СрезПервых=РегистрыСведений.КурсыВалют.СрезПервых();
	Если СрезПервых.Количество()>1 Тогда
		
		
		Сообщить(Строка(СрезПервых[0].Валюта) + " "+СрезПервых[0].курс);	
		
	КонецЕсли; 	
	Курс = ОбщееНазначение.ПолучитьКурс(Валюта,НаДату);
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьКурс(Команда)
	//ПоказатьКурсНаСервере(НаДату);
	ПоказатьКурсСрезПоследнихОбъектно(Валюта,НаДату);
КонецПроцедуры


&НаСервереБезКонтекста
Процедура ЗаписатьКурсМенеджерНаСервере(НаДату,Валюта,Курс)
	ЗаписьРегистра = РегистрыСведений.КурсыВалют.СоздатьМенеджерЗаписи();
	ЗаписьРегистра.Период=НаДату;
	ЗаписьРегистра.Валюта=Валюта;
	ЗаписьРегистра.Курс=Курс;
	ЗаписьРегистра.Записать();

КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьКурсМенеджер(Команда)
	ЗаписатьКурсМенеджерНаСервере(НаДату,Валюта,Курс);
КонецПроцедуры


&НаСервере
Процедура ВыбратьПоРегиструНаСервере()
	
ОтборПоТовару = Новый Структура("Товар");
ОтборПоТовару.Товар = ВыбТовар;
ОстаткиПоТовару = РегистрыНакопления.ОстаткиТоваров.Остатки(НаДату,ОтборПоТовару);	
ВыборкаПоРегистру = РегистрыНакопления.ОстаткиТоваров.Выбрать(Период.ДатаНачала,Период.ДатаОкончания,ОтборПоТовару);

Пока ВыборкаПоРегистру.Следующий() Цикл

	 Сообщить(" "+ВыборкаПоРегистру.Период+ " "+ВыборкаПоРегистру.Товар+ " "+ВыборкаПоРегистру.Количество);
	

КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПоРегистру(Команда)
	ВыбратьПоРегиструНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВыбратьПоРегистраторуНаСервере()
	
ВыборкаПоРегистру = РегистрыНакопления.ОстаткиТоваров.ВыбратьПоРегистратору(ПоступлениеТоваровИУслуг);

Пока ВыборкаПоРегистру.Следующий() Цикл

	 Сообщить(" "+ВыборкаПоРегистру.Период+ " "+ВыборкаПоРегистру.Товар+ " "+Строка(ВыборкаПоРегистру.Количество));
	

КонецЦикла; 

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПоРегистратору(Команда)
	ВыбратьПоРегистраторуНаСервере();
КонецПроцедуры

&НаСервере
Процедура СрезПервыхПоТоваруНаСервере()
	Отбор = новый структура("Товар",ВыбТовар) ;
	// первый пособ
	ТаблицаЦен =РегистрыСведений.ЦеныТоваров.СрезПервых(Период.ДатаОкончания,Отбор );
	Цена = ТаблицаЦен.Итог("Цена");
	Сообщить(Цена);
	// второй пособ
	Цена = РегистрыСведений.ЦеныТоваров.ПолучитьПервое(Период.ДатаОкончания,Отбор).Цена;
	Сообщить(Цена);
КонецПроцедуры

&НаКлиенте
Процедура СрезПервыхПоТовару(Команда)
	СрезПервыхПоТоваруНаСервере();
КонецПроцедуры

&НаСервере
Процедура СрезПоследнихпоТоваруНаСервере()
	Отбор = новый структура("Товар",ВыбТовар) ;
	// первый пособ
	ТаблицаЦен =РегистрыСведений.ЦеныТоваров.СрезПоследних(Период.ДатаОкончания,Отбор );
	Цена = ТаблицаЦен.Итог("Цена");
	Сообщить(Цена);
	// второй пособ
	Цена = РегистрыСведений.ЦеныТоваров.ПолучитьПоследнее(Период.ДатаОкончания,Отбор).Цена;
	Сообщить(Цена);
КонецПроцедуры

&НаКлиенте
Процедура СрезПоследнихпоТовару(Команда)
	СрезПоследнихпоТоваруНаСервере();
КонецПроцедуры


&НаСервере
Процедура ОстаткиНаСервере()
	
	Макет = Обработки.РаботаСРегистрами.ПолучитьМакет("Макет");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиТоваровОстатки.Товар,
		|	ПРЕДСТАВЛЕНИЕ(ОстаткиТоваровОстатки.Товар),
		|	ОстаткиТоваровОстатки.КоличествоОстаток,
		|	ОстаткиТоваровОстатки.СуммаОстаток
		|ИЗ
		|	РегистрНакопления.ОстаткиТоваров.Остатки(&НаДату, Товар = &Товар) КАК ОстаткиТоваровОстатки";
	Если ЗначениеЗаполнено(НаДату) Тогда
		
		Граница = Новый Граница (КонецДня(НаДату), ВидГраницы.Включая);
	Иначе
		Граница = НаДату;
	КонецЕсли; 
	
	Запрос.УстановитьПараметр("НаДату", Граница);
	Запрос.УстановитьПараметр("Товар", ВыбТовар);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	

	
КонецПроцедуры


&НаКлиенте
Процедура Остатки(Команда)
	ОстаткиНаСервере();
КонецПроцедуры


&НаСервере
Процедура ОстаткиИОборотыНаСервере()
	 	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Макет = Обработки.РаботаСРегистрами.ПолучитьМакет("Макет2");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиТоваровОстаткиИОбороты.Товар,
		|	ПРЕДСТАВЛЕНИЕ(ОстаткиТоваровОстаткиИОбороты.Товар),
		|	ОстаткиТоваровОстаткиИОбороты.КоличествоНачальныйОстаток,
		|	ОстаткиТоваровОстаткиИОбороты.КоличествоПриход,
		|	ОстаткиТоваровОстаткиИОбороты.КоличествоРасход,
		|	ОстаткиТоваровОстаткиИОбороты.КоличествоКонечныйОстаток
		|ИЗ
		|	РегистрНакопления.ОстаткиТоваров.ОстаткиИОбороты(&ДатаНачала, &ДатаОкончания, , , ) КАК ОстаткиТоваровОстаткиИОбороты";
	
	Запрос.УстановитьПараметр("ДатаНачала", ЕщеОдинПериод.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ЕщеОдинПериод.ДатаОкончания);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

КонецПроцедуры


&НаКлиенте
Процедура ОстаткиИОбороты(Команда)
	ОстаткиИОборотыНаСервере();
КонецПроцедуры


&НаСервере
Процедура ОборотыНаСервере()
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Макет = Обработки.РаботаСРегистрами.ПолучитьМакет("Макет1");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиТоваровОбороты.Товар КАК Товар,
		|	ПРЕДСТАВЛЕНИЕ(ОстаткиТоваровОбороты.Товар),
		|	ОстаткиТоваровОбороты.КоличествоПриход КАК КоличествоПриход,
		|	ОстаткиТоваровОбороты.КоличествоРасход КАК КоличествоРасход,
		|	ОстаткиТоваровОбороты.СуммаПриход КАК СуммаПриход,
		|	ОстаткиТоваровОбороты.СуммаРасход КАК СуммаРасход,
		|	ОстаткиТоваровОбороты.ПериодМесяц КАК ПериодМесяц,
		|	ОстаткиТоваровОбороты.ПериодНеделя КАК ПериодНеделя
		|ИЗ
		|	РегистрНакопления.ОстаткиТоваров.Обороты(&ДатаНачала, &ДатаОкончания, Авто, ) КАК ОстаткиТоваровОбороты
		|ИТОГИ
		|	СУММА(КоличествоПриход),
		|	СУММА(КоличествоРасход),
		|	СУММА(СуммаПриход),
		|	СУММА(СуммаРасход)
		|ПО
		|	ПериодМесяц,
		|	ПериодНеделя,
		|	Товар";
	
	Запрос.УстановитьПараметр("ДатаНачала", Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", Период.ДатаОкончания);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьПериодМесяц = Макет.ПолучитьОбласть("ПериодМесяц");
	ОбластьПериодНеделя = Макет.ПолучитьОбласть("ПериодНеделя");
	ОбластьТовар = Макет.ПолучитьОбласть("Товар");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаПериодМесяц = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаПериодМесяц.Следующий() Цикл
		ОбластьПериодМесяц.Параметры.Заполнить(ВыборкаПериодМесяц);
		ТабДок.Вывести(ОбластьПериодМесяц, ВыборкаПериодМесяц.Уровень());
	
		ВыборкаПериодНеделя = ВыборкаПериодМесяц.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
		Пока ВыборкаПериодНеделя.Следующий() Цикл
			ОбластьПериодНеделя.Параметры.Заполнить(ВыборкаПериодНеделя);
			ТабДок.Вывести(ОбластьПериодНеделя, ВыборкаПериодНеделя.Уровень());
	
			ВыборкаТовар = ВыборкаПериодНеделя.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
			Пока ВыборкаТовар.Следующий() Цикл
				ОбластьТовар.Параметры.Заполнить(ВыборкаТовар);
				ТабДок.Вывести(ОбластьТовар, ВыборкаТовар.Уровень());
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
КонецПроцедуры


&НаКлиенте
Процедура Обороты(Команда)
	ОборотыНаСервере();
КонецПроцедуры


&НаСервере
Процедура ТестОтображенияНаСервере()
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиТоваровОстатки.Товар,
		|	ОстаткиТоваровОстатки.КоличествоОстаток,
		|	ОстаткиТоваровОстатки.СуммаОстаток
		|ИЗ
		|	РегистрНакопления.ОстаткиТоваров.Остатки КАК ОстаткиТоваровОстатки";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
КонецПроцедуры


&НаКлиенте
Процедура ТестОтображения(Команда)
	ТестОтображенияНаСервере();
КонецПроцедуры


&НаСервереБезКонтекста
Процедура ВыбратьКурсыНаСервере(Валюта)
	Отбор = Новый Структура("Валюта",Валюта);
	Выборка = РегистрыСведений.КурсыВалют.Выбрать(,,Отбор);
	Пока Выборка.Следующий() Цикл
		
		Сообщить(" " +Строка(Выборка.Валюта) + " "+ Формат(Выборка.Период,"ДФ=dd.MM.yyyy")+ " "+ Строка(Выборка.Курс));
		
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура ВыбратьКурсы(Команда)
	ВыбратьКурсыНаСервере(Валюта);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьДокументыНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеТоваровИУслуг.Ссылка,
	|	ПоступлениеТоваровИУслуг.Проведен
	|ИЗ
	|	Документ.ПоступлениеТоваровИУслуг КАК ПоступлениеТоваровИУслуг
	|ГДЕ
	|	ПоступлениеТоваровИУслуг.Проведен";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ТекОбъект =  ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		Если ВыборкаДетальныеЗаписи.Проведен Тогда
			ТекОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Иначе

			ТекОбъект.Записать(РежимЗаписиДокумента.Запись);
		КонецЕсли; 
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализационнаяНакладная.Ссылка
	|ИЗ
	|	Документ.РеализационнаяНакладная КАК РеализационнаяНакладная
	|ГДЕ
	|	РеализационнаяНакладная.Проведен";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ТекОбъект =  ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		ТекОбъект.Записать(РежимЗаписиДокумента.Запись);
		
	КонецЦикла;
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьДокументы(Команда)
	ЗаписатьДокументыНаСервере();
	
КонецПроцедуры
&НаСервереБезКонтекста
Процедура ПереформироватьДвиженияНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеТоваровИУслуг.Ссылка,
	|	ПоступлениеТоваровИУслуг.Дата,
	|	ПоступлениеТоваровИУслуг.Контрагент,
	|	ПоступлениеТоваровИУслуг.Организация,
	|	ПоступлениеТоваровИУслуг.Автор
	|ИЗ
	|	Документ.ПоступлениеТоваровИУслуг КАК ПоступлениеТоваровИУслуг
	|ГДЕ
	|	ПоступлениеТоваровИУслуг.Проведен";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ТекОбъект =  ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		Движения =ТекОбъект.Движения;
		Движения.ИтогиПоДокументам.Записывать=Истина;
		Движение = Движения.ИтогиПоДокументам.Добавить();
		Движение.Период = ВыборкаДетальныеЗаписи.Дата;
		Движение.Сумма = ТекОбъект.Товары.Итог("Сумма");
		Движение.Контрагент = ВыборкаДетальныеЗаписи.Контрагент;
		Движение.Автор = ВыборкаДетальныеЗаписи.Автор;
		Движения.ИтогиПоДокументам.Записать();
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализационнаяНакладная.Ссылка,
	|	РеализационнаяНакладная.Дата,
	|	РеализационнаяНакладная.Контрагент,
	|	РеализационнаяНакладная.Организация,
	|	РеализационнаяНакладная.Автор
	|ИЗ
	|	Документ.РеализационнаяНакладная КАК РеализационнаяНакладная
	|ГДЕ
	|	РеализационнаяНакладная.Проведен";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ТекОбъект =  ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		Движения =ТекОбъект.Движения;
		Движения.ИтогиПоДокументам.Записывать=Истина;
		Движение = Движения.ИтогиПоДокументам.Добавить();
		Движение.Период = ВыборкаДетальныеЗаписи.Дата;
		Движение.Сумма = ТекОбъект.Товары.Итог("Сумма");
		Движение.Контрагент = ВыборкаДетальныеЗаписи.Контрагент;
		Движение.Автор = ВыборкаДетальныеЗаписи.Автор;
		Движения.ИтогиПоДокументам.Записать();
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Счет.Ссылка,
	|	Счет.Дата,
	|	Счет.Контрагент,
	|	Счет.Организация,
	|	Счет.Автор
	|ИЗ
	|	Документ.Счет КАК Счет
	|ГДЕ
	|	Счет.Проведен";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ТекОбъект =  ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		Движения =ТекОбъект.Движения;
		Движения.ИтогиПоДокументам.Записывать=Истина;
		Движение = Движения.ИтогиПоДокументам.Добавить();
		Движение.Период = ВыборкаДетальныеЗаписи.Дата;
		Движение.Сумма = ТекОбъект.Товары.Итог("Сумма");
		Движение.Контрагент = ВыборкаДетальныеЗаписи.Контрагент;
		Движение.Автор = ВыборкаДетальныеЗаписи.Автор;
		Движения.ИтогиПоДокументам.Записать();
		
	КонецЦикла;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Возврат.Ссылка,
	|	Возврат.Дата,
	|	Возврат.Контрагент,
	|	Возврат.Организация
	|ИЗ
	|	Документ.Возврат КАК Возврат
	|ГДЕ
	|	Возврат.Проведен";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ТекОбъект =  ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		Движения =ТекОбъект.Движения;
		Движения.ИтогиПоДокументам.Записывать=Истина;
		Движение = Движения.ИтогиПоДокументам.Добавить();
		Движение.Период = ВыборкаДетальныеЗаписи.Дата;
		Движение.Сумма = ТекОбъект.Товары.Итог("Сумма");
		Движение.Контрагент = ВыборкаДетальныеЗаписи.Контрагент;
		Движение.Автор = ВыборкаДетальныеЗаписи.Автор;
		Движения.ИтогиПоДокументам.Записать();
		
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура ПереформироватьДвижения(Команда)
	ПереформироватьДвиженияНаСервере();
КонецПроцедуры


&НаСервере
Процедура ОчиститьРегистрНаСервере()
	НаборЗаписейРегистра = РегистрыСведений.КурсыВалют.СоздатьНаборЗаписей();
	НаборЗаписейРегистра.Очистить();
	НаборЗаписейРегистра.Записать();

КонецПроцедуры


&НаКлиенте
Процедура ОчиститьРегистр(Команда)
	ОчиститьРегистрНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура ОткытьСписокВалют(Команда)
	ПараметрыФормы =  Новый Структура("ТекущаяСтрока",Валюта ) ;
	ОткрытьФорму("Справочник.Валюты.ФормаСписка",ПараметрыФормы);
	
КонецПроцедуры


&НаСервереБезКонтекста
Процедура ПолучитьДанныеИзРегистраНаСервере(ТекОрганизация)
	  СтруктураДляОтбора = Новый Структура("Организация",ТекОрганизация);
	  ПолученнаяСтруктура = РегистрыСведений.ДанныеОрганизации.Получить(СтруктураДляОтбора);
	  Сообщить(ПолученнаяСтруктура.Директор);
	  Сообщить(ПолученнаяСтруктура.Телефон);
  КонецПроцедуры


&НаКлиенте
Процедура ПолучитьДанныеИзРегистра(Команда)
	ПолучитьДанныеИзРегистраНаСервере(Организация);
КонецПроцедуры


&НаСервереБезКонтекста
Процедура УдалитьВсеКурсыПоВыбраннойВалютеНаСервере(НаДату,Валюта)
	
	НаборЗаписейРегистра = РегистрыСведений.КурсыВалют.СоздатьНаборЗаписей();
	НаборЗаписейРегистра.Отбор.Валюта.Установить(Валюта);
	ЗаписьРегистра =НаборЗаписейРегистра.Добавить();
	ЗаписьРегистра.Период=НаДату;
	ЗаписьРегистра.Валюта=Валюта;
	ЗаписьРегистра.Курс=1;
	НаборЗаписейРегистра.Записать();
	
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВсеКурсыПоВыбраннойВалюте(Команда)
	УдалитьВсеКурсыПоВыбраннойВалютеНаСервере(НаДату,Валюта);

КонецПроцедуры

