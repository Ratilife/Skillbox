
&НаСервере
Процедура ВыполнитьЗапросНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Контрагенты.Ссылка КАК СсылкаНаЭлементСправочника,
		|	Контрагенты.ЭтоГруппа КАК ЭтоГруппа,
		|	Контрагенты.Код КАК Код,
		|	Контрагенты.Наименование КАК Наименование,
		|	Контрагенты.Признак КАК ПризнакаЭлементСправочника,
		|	Контрагенты.Описание КАК Описание,
		|	Контрагенты.Менеджер КАК Менеджер
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Сообщить(ВыборкаДетальныеЗаписи.Наименование+ " " + ВыборкаДетальныеЗаписи.Код);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент КАК Поставщик,
		|	ПоступлениеТоваровИУслугТовары.Товар КАК Товар,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Ссылка КАК Ссылка,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Дата КАК Дата,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Номер КАК Номер,
		|	ПоступлениеТоваровИУслугТовары.Сумма КАК Сумма,
		|	ПоступлениеТоваровИУслугТовары.Цена КАК Цена
		|ИЗ
		|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары
		|ГДЕ
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент.Признак = &Признак
		|
		|УПОРЯДОЧИТЬ ПО
		|	Поставщик,
		|	Товар
		|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоГода(ТекущаяДата()));
	Запрос.УстановитьПараметр("ДатаОкончания", ТекущаяДата());
	Запрос.УстановитьПараметр("Признак", Перечисления.ПризнакКлиента.ЧастноеЛицо);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Сообщить(""+ВыборкаДетальныеЗаписи.Ссылка + " " +ВыборкаДетальныеЗаписи.Товар);
	КонецЦикла;
	

	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровИУслугТовары.Товар КАК Товар,
		|	ПоступлениеТоваровИУслугТовары.Количество КАК Количество,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Дата КАК Дата,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент КАК Контрагент,
		|	ПоступлениеТоваровИУслугТовары.Сумма КАК Сумма,
		|	""Наименование "" + ПоступлениеТоваровИУслугТовары.Товар.Наименование КАК НаименованиеТовара,
		|	ИСТИНА КАК Признак,
		|	ПоступлениеТоваровИУслугТовары.Количество + 100 КАК КоличествоПлюс100
		|ИЗ
		|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Сообщить(ВыборкаДетальныеЗаписи.НаименованиеТовара+ " " + ВыборкаДетальныеЗаписи.КоличествоПлюс100);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровИУслуг.Ссылка,
		|	ПоступлениеТоваровИУслуг.Дата,
		|	ПоступлениеТоваровИУслуг.Контрагент,
		|	ПоступлениеТоваровИУслуг.Организация
		|ИЗ
		|	Документ.ПоступлениеТоваровИУслуг КАК ПоступлениеТоваровИУслуг
		|ГДЕ
		|	ПоступлениеТоваровИУслуг.Дата >= &Дата";
	
	Запрос.УстановитьПараметр("Дата", ДатаПрихода);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровИУслугТовары.Товар КАК Товар,
		|	СУММА(ПоступлениеТоваровИУслугТовары.Количество) КАК Количество,
		|	СУММА(ПоступлениеТоваровИУслугТовары.Сумма) КАК Сумма,
		|	МАКСИМУМ(ПоступлениеТоваровИУслугТовары.Цена) КАК ЦенаМаксимальная
		|ИЗ
		|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары
		|ГДЕ
		|	(ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент = &Контрагент
		|			ИЛИ ПоступлениеТоваровИУслугТовары.Количество > 10)
		|	И ПоступлениеТоваровИУслугТовары.Ссылка.Дата > &Дата
		|
		|СГРУППИРОВАТЬ ПО
		|	ПоступлениеТоваровИУслугТовары.Товар
		|
		|УПОРЯДОЧИТЬ ПО
		|	Товар";
	
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Дата", ДатаПрихода);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	


// запрос с функцией
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровИУслугТовары.Товар,
		|	ПоступлениеТоваровИУслугТовары.Количество,
		|	ПоступлениеТоваровИУслугТовары.Сумма,
		|	ВЫБОР
		|		КОГДА ПоступлениеТоваровИУслугТовары.Количество > 10
		|			ТОГДА ""Хорошая продажа""
		|		ИНАЧЕ ""Плохая продажа""
		|	КОНЕЦ КАК Характеристика
		|ИЗ
		|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	
	
//Значение условия заданно в запросе	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровИУслугТовары.Товар,
		|	ПоступлениеТоваровИУслугТовары.Количество,
		|	ПоступлениеТоваровИУслугТовары.Сумма,
		|	ПоступлениеТоваровИУслугТовары.Цена
		|ИЗ
		|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары
		|ГДЕ
		|	ПоступлениеТоваровИУслугТовары.Цена > 1000";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровИУслугТовары.Товар,
		|	ПоступлениеТоваровИУслугТовары.Количество,
		|	ПоступлениеТоваровИУслугТовары.Цена,
		|	ПоступлениеТоваровИУслугТовары.Сумма,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Дата,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Номер,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент
		|ИЗ
		|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары
		|ГДЕ
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Дата МЕЖДУ &ДатаН И &ДатаО
		|	И ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент.Признак = ЗНАЧЕНИЕ(Перечисление.ПризнакКлиента.Организация)";
	
	Запрос.УстановитьПараметр("ДатаН", Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаО", Период.ДатаОкончания);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗапрос(Команда)
	ВыполнитьЗапросНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЧтениеДляКладовщикаНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Пользователи.Ссылка,
		|	Пользователи.ВерсияДанных,
		|	Пользователи.ПометкаУдаления,
		|	Пользователи.Код,
		|	Пользователи.Наименование,
		|	Пользователи.Уволен,
		|	Пользователи.Предопределенный,
		|	Пользователи.ИмяПредопределенныхДанных,
		|	Пользователи.Сотрудник
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Сообщить(ВыборкаДетальныеЗаписи.Наименование + " сотрудник "+ ВыборкаДетальныеЗаписи.Сотрудник) ;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	
КонецПроцедуры

&НаКлиенте
Процедура ЧтениеДляКладовщика(Команда)
	ЧтениеДляКладовщикаНаСервере();
КонецПроцедуры

&НаСервере
Процедура ГруппировкаВЗапросеНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровИУслугТовары.Товар КАК Товар,
		|	СУММА(ПоступлениеТоваровИУслугТовары.Количество) КАК Количество,
		|	СУММА(ПоступлениеТоваровИУслугТовары.Сумма) КАК Сумма,
		|	СРЕДНЕЕ(ПоступлениеТоваровИУслугТовары.Сумма) КАК СредняяСумма,
		|	МАКСИМУМ(ПоступлениеТоваровИУслугТовары.Сумма) КАК МаксимальнаяСуммаПоставки,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПоступлениеТоваровИУслугТовары.Ссылка) КАК КоличествоПоставок,
		|	МИНИМУМ(ПоступлениеТоваровИУслугТовары.Ссылка.Дата) КАК ДатаПервогоПрихода,
		|	МАКСИМУМ(ПоступлениеТоваровИУслугТовары.Ссылка.Дата) КАК ДатаПоследнегоприхода
		|ИЗ
		|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары
		|
		|СГРУППИРОВАТЬ ПО
		|	ПоступлениеТоваровИУслугТовары.Товар
		|
		|УПОРЯДОЧИТЬ ПО
		|	Товар
		|АВТОУПОРЯДОЧИВАНИЕ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	//группировка с различными агрегатными функциями
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент) КАК КоличествоПоставокОтРазличныхПоставщиков,
		|	ПоступлениеТоваровИУслугТовары.Товар КАК Товар,
		|	СУММА(ПоступлениеТоваровИУслугТовары.Количество) КАК Количество,
		|	СУММА(ПоступлениеТоваровИУслугТовары.Сумма) КАК Сумма,
		|	МИНИМУМ(ПоступлениеТоваровИУслугТовары.Ссылка.Дата) КАК ДатаПервогоПрихода,
		|	МАКСИМУМ(ПоступлениеТоваровИУслугТовары.Ссылка.Дата) КАК ДатаПоследнегоПрихода,
		|	КОЛИЧЕСТВО(ПоступлениеТоваровИУслугТовары.Ссылка) КАК КоличествоПриходов
		|ИЗ
		|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары
		|
		|СГРУППИРОВАТЬ ПО
		|	ПоступлениеТоваровИУслугТовары.Товар
		|
		|УПОРЯДОЧИТЬ ПО
		|	Товар
		|АВТОУПОРЯДОЧИВАНИЕ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ГруппировкаВЗапросе(Команда)
	ГруппировкаВЗапросеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ИтогивЗапросеНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровИУслугТовары.Товар КАК Товар,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент КАК Контрагент,
		|	ПоступлениеТоваровИУслугТовары.Количество КАК Количество,
		|	ПоступлениеТоваровИУслугТовары.Сумма КАК Сумма,
		|	ПоступлениеТоваровИУслугТовары.Цена,
		|	ПоступлениеТоваровИУслугТовары.Ссылка,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Дата,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Номер,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Организация
		|ИЗ
		|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары
		|ИТОГИ
		|	СУММА(Количество),
		|	СУММА(Сумма)
		|ПО
		|	ОБЩИЕ,
		|	Товар,
		|	Контрагент";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаОбщийИтог = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВыборкаОбщийИтог.Следующий();		// Общий итог
	
	// Вставить обработку выборки ВыборкаОбщийИтог
	
	ВыборкаТовар = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТовар.Следующий() Цикл
		// Вставить обработку выборки ВыборкаТовар
	
		ВыборкаКонтрагент = ВыборкаТовар.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
		Пока ВыборкаКонтрагент.Следующий() Цикл
			// Вставить обработку выборки ВыборкаКонтрагент
	
			ВыборкаДетальныеЗаписи = ВыборкаКонтрагент.Выбрать();
	
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				// Вставить обработку выборки ВыборкаДетальныеЗаписи
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	

	
	
КонецПроцедуры

&НаКлиенте
Процедура ИтогивЗапросе(Команда)
	ИтогивЗапросеНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СортировкавЗапросеНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Контрагенты.Ссылка КАК Ссылка,
		|	Контрагенты.ВерсияДанных,
		|	Контрагенты.ПометкаУдаления,
		|	Контрагенты.Родитель,
		|	Контрагенты.ЭтоГруппа,
		|	Контрагенты.Код,
		|	Контрагенты.Наименование,
		|	Контрагенты.Признак,
		|	Контрагенты.Описание,
		|	Контрагенты.ВалютаВзаиморасчетов,
		|	Контрагенты.ВидКонтрагента,
		|	Контрагенты.Менеджер,
		|	Контрагенты.Пол,
		|	Контрагенты.ВидСкидки,
		|	Контрагенты.Автор,
		|	Контрагенты.ПризнакРазовый,
		|	Контрагенты.ДопустимоеВремяЗвонка,
		|	Контрагенты.Обращение,
		|	Контрагенты.ПолноеНаименование,
		|	Контрагенты.Примечание,
		|	Контрагенты.УдобноеВремяЗвокаС,
		|	Контрагенты.УдобноеВремяЗвокаПо,
		|	Контрагенты.Контакты.(
		|		Ссылка,
		|		НомерСтроки,
		|		Телефон,
		|		Мобильный,
		|		АдресПроживания,
		|		ПоУмолчанию
		|	),
		|	Контрагенты.АвтомобилиКонтрагента.(
		|		Ссылка,
		|		НомерСтроки,
		|		Автомобиль
		|	),
		|	Контрагенты.Предопределенный,
		|	Контрагенты.ИмяПредопределенныхДанных
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|АВТОУПОРЯДОЧИВАНИЕ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура СортировкавЗапросе(Команда)
	СортировкавЗапросеНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОпцииВЗапросеНаСервере()
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 3
		|	ПоступлениеТоваровИУслугТовары.Ссылка КАК ПН,
		|	ПоступлениеТоваровИУслугТовары.Номенклатура КАК Номенклатура,
		|	ПоступлениеТоваровИУслугТовары.Количество КАК Количество,
		|	ПоступлениеТоваровИУслугТовары.Стоимость КАК Стоимость,
		|	ПоступлениеТоваровИУслугТовары.ЦенаПоступления КАК ЦенаПоступления
		|ИЗ
		|	Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваровИУслугТовары";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
КонецПроцедуры

&НаКлиенте
Процедура ОпцииВЗапросе(Команда)
	ОпцииВЗапросеНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбъединениеВЗапросеНаСервере()
	 	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПоступлениеТоваров.Номенклатура КАК Товар,
		|	ПоступлениеТоваров.Количество КАК КоличествоПриход,
		|	""Приход"" КАК Тип,
		|	NULL КАК КоличествоРасход
		|ИЗ
		|	Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваров
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РеализационнаяНакладнаяТовары.Номенклатура,
		|	NULL,
		|	""Расход"",
		|	-РеализационнаяНакладнаяТовары.Количество
		|ИЗ
		|	Документ.РеализацияТоваров.Товары КАК РеализационнаяНакладнаяТовары
		|
		|УПОРЯДОЧИТЬ ПО
		|	Товар";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваров.Номенклатура КАК Номенклатура,
		|	ПоступлениеТоваров.Количество КАК Количество,
		|	ПоступлениеТоваров.Стоимость КАК Стоимость,
		|	ПоступлениеТоваров.Ссылка КАК Ссылка,
		|	ТИПЗНАЧЕНИЯ(ПоступлениеТоваров.Ссылка) КАК ТипДокумента
		|ИЗ
		|	Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваров
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РеализацияТоваров.Номенклатура,
		|	-РеализацияТоваров.Количество,
		|	-РеализацияТоваров.Стоимость,
		|	РеализацияТоваров.Ссылка,
		|	ТИПЗНАЧЕНИЯ(РеализацияТоваров.Ссылка)
		|ИЗ
		|	Документ.РеализацияТоваров.Товары КАК РеализацияТоваров";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
КонецПроцедуры

&НаКлиенте
Процедура ОбъединениеВЗапросе(Команда)
	ОбъединениеВЗапросеНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ФункцииВЗапросеНаСервере(ДатаДляАнализа)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровИУслугТовары.Ссылка,
		|	ПоступлениеТоваровИУслугТовары.Товар,
		|	ПоступлениеТоваровИУслугТовары.Количество,
		|	ПоступлениеТоваровИУслугТовары.Цена,
		|	ПоступлениеТоваровИУслугТовары.Сумма,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Номер,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Дата,
		|	ДОБАВИТЬКДАТЕ(ПоступлениеТоваровИУслугТовары.Ссылка.Дата, МЕСЯЦ, -3) КАК ТриМесяцаКДате,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент.ЕДРПОУ КАК ЕДРПОУ,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент.Признак КАК Признак,
		|	ПоступлениеТоваровИУслугТовары.Товар.Артикул КАК Артикул,
		|	""Наименование Товара и Артикул "" + ПоступлениеТоваровИУслугТовары.Товар.Наименование + "" "" + ПоступлениеТоваровИУслугТовары.Товар.Артикул КАК НаименованиеАртикул,
		|	ПоступлениеТоваровИУслугТовары.Сумма / ПоступлениеТоваровИУслугТовары.Цена КАК ЦенаРасчетная,
		|	ИСТИНА КАК ПризнакИстина,
		|	100 КАК Просто100,
		|	ПОДСТРОКА(ПоступлениеТоваровИУслугТовары.Товар.Наименование, 1, 1000) КАК КусокНаименованияТовара,
		|	ГОД(ПоступлениеТоваровИУслугТовары.Ссылка.Дата) КАК Год,
		|	ДЕНЬГОДА(ПоступлениеТоваровИУслугТовары.Ссылка.Дата) КАК ДеньГода,
		|	КОНЕЦПЕРИОДА(ПоступлениеТоваровИУслугТовары.Ссылка.Дата, ГОД) КАК КонецГодаДляДатыДокумнета,
		|	РАЗНОСТЬДАТ(ПоступлениеТоваровИУслугТовары.Ссылка.Дата, &ТекущаяДата, ДЕНЬ) КАК Поле1,
		|	ТИПЗНАЧЕНИЯ(ПоступлениеТоваровИУслугТовары.Товар) КАК Поле2,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК Поле3,
		|	ЗНАЧЕНИЕ(Перечисление.ПризнакКлиента.Организация) КАК Поле4,
		|	ВЫБОР
		|		КОГДА ПоступлениеТоваровИУслугТовары.Цена > 50
		|			ТОГДА ""Дорогой товар""
		|		ИНАЧЕ ""Дешевый товар""
		|	КОНЕЦ КАК Поле5
		|ИЗ
		|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары";
	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	//Запрос.УстановитьПараметр("ТекущаяДата", ДатаДляАнализа);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	 	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровИУслугТовары.Товар,
		|	ПоступлениеТоваровИУслугТовары.Количество,
		|	ПоступлениеТоваровИУслугТовары.Цена,
		|	ПоступлениеТоваровИУслугТовары.Сумма,
		|	ПоступлениеТоваровИУслугТовары.Ссылка,
		|	ИСТИНА КАК Отметить,
		|	ВЫБОР
		|		КОГДА ПоступлениеТоваровИУслугТовары.Количество = 0
		|			ТОГДА 0
		|		ИНАЧЕ ПоступлениеТоваровИУслугТовары.Сумма / ПоступлениеТоваровИУслугТовары.Количество
		|	КОНЕЦ КАК РасчЦена,
		|	""Док Поступление "" + ПоступлениеТоваровИУслугТовары.Ссылка.Номер КАК Поле1,
		|	ПОДСТРОКА(ПоступлениеТоваровИУслугТовары.Товар.Наименование, 1, 1000) КАК Поле2,
		|	НАЧАЛОПЕРИОДА(ПоступлениеТоваровИУслугТовары.Ссылка.Дата, ГОД) КАК Поле3,
		|	НАЧАЛОПЕРИОДА(ПоступлениеТоваровИУслугТовары.Ссылка.Дата, НЕДЕЛЯ) КАК Поле4,
		|	НАЧАЛОПЕРИОДА(ПоступлениеТоваровИУслугТовары.Ссылка.Дата, КВАРТАЛ) КАК Поле5,
		|	ДЕНЬГОДА(ПоступлениеТоваровИУслугТовары.Ссылка.Дата) КАК Поле6,
		|	ДОБАВИТЬКДАТЕ(ПоступлениеТоваровИУслугТовары.Ссылка.Дата, ДЕНЬ, 100) КАК Поле7,
		|	РАЗНОСТЬДАТ(ПоступлениеТоваровИУслугТовары.Ссылка.Дата, &ТекущаяДата, ДЕНЬ) КАК Поле8,
		|	ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровИУслугТовары.Товар),
		|	ТИПЗНАЧЕНИЯ(ПоступлениеТоваровИУслугТовары.Товар) = ТИП(Справочник.Контрагенты) КАК Поле9,
		|	ВЫБОР
		|		КОГДА ПоступлениеТоваровИУслугТовары.Сумма < 100
		|			ТОГДА ""мелкая закупка""
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ПоступлениеТоваровИУслугТовары.Сумма >= 100
		|						И ПоступлениеТоваровИУслугТовары.Сумма < 500
		|					ТОГДА ""средняя""
		|				ИНАЧЕ ""крупная закупка""
		|			КОНЕЦ
		|	КОНЕЦ КАК Поле10,
		|	ВЫБОР ПоступлениеТоваровИУслугТовары.Количество
		|		КОГДА 1
		|			ТОГДА ""хорошо""
		|		КОГДА 2
		|			ТОГДА ""плохо""
		|	КОНЕЦ КАК Поле11
		|ИЗ
		|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары";
	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровИУслугТовары.Товар КАК Товар,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент КАК Контрагент,
		|	ПоступлениеТоваровИУслугТовары.Количество,
		|	ПоступлениеТоваровИУслугТовары.Сумма,
		|	ПоступлениеТоваровИУслугТовары.Цена,
		|	ВЫБОР
		|		КОГДА ПоступлениеТоваровИУслугТовары.Количество = 0
		|			ТОГДА ""Нет количества""
		|		ИНАЧЕ ПоступлениеТоваровИУслугТовары.Сумма / ПоступлениеТоваровИУслугТовары.Количество
		|	КОНЕЦ КАК РасчетнаяЦена,
		|	ПоступлениеТоваровИУслугТовары.ЕдиницаИзмерения,
		|	ПоступлениеТоваровИУслугТовары.Ссылка,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Договор,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Организация КАК ОрганизацияИзШапки,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент.ЕДРПОУ КАК ЕДРПОУ,
		|	ИСТИНА КАК Отметить,
		|	ПОДСТРОКА(ПоступлениеТоваровИУслугТовары.Товар.Наименование, 2, 7) КАК Поле1,
		|	ГОД(ПоступлениеТоваровИУслугТовары.Ссылка.Дата) КАК ГодИзДаты,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Дата,
		|	НАЧАЛОПЕРИОДА(ПоступлениеТоваровИУслугТовары.Ссылка.Дата, ДЕНЬ) КАК Поле2,
		|	НАЧАЛОПЕРИОДА(ПоступлениеТоваровИУслугТовары.Ссылка.Дата, ГОД) КАК Поле3,
		|	НАЧАЛОПЕРИОДА(ПоступлениеТоваровИУслугТовары.Ссылка.Дата, КВАРТАЛ) КАК Поле4,
		|	КОНЕЦПЕРИОДА(ПоступлениеТоваровИУслугТовары.Ссылка.Дата, ДЕНЬ) КАК Поле5,
		|	ДОБАВИТЬКДАТЕ(ПоступлениеТоваровИУслугТовары.Ссылка.Дата, МЕСЯЦ, -2) КАК Поле6,
		|	РАЗНОСТЬДАТ(ПоступлениеТоваровИУслугТовары.Ссылка.Дата, &ТекДата, МЕСЯЦ) КАК Поле7,
		|	ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровИУслугТовары.Товар),
		|	ТИПЗНАЧЕНИЯ(ПоступлениеТоваровИУслугТовары.Товар) КАК Поле8,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(ПоступлениеТоваровИУслугТовары.Товар) = ТИП(Справочник.Товары)
		|			ТОГДА ""Это товар""
		|		ИНАЧЕ ""Не товар""
		|	КОНЕЦ КАК Поле9,
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ПоступлениеТоваровИУслугТовары.Количество = 0
		|				ТОГДА ""Нет количества""
		|			ИНАЧЕ ПоступлениеТоваровИУслугТовары.Сумма / ПоступлениеТоваровИУслугТовары.Количество
		|		КОНЕЦ КАК ЧИСЛО(10, 2)) КАК Поле10
		|ИЗ
		|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПоступлениеТоваровИУслугТовары.Товар.Наименование,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент.Наименование
		|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА


КонецПроцедуры

&НаКлиенте
Процедура ФункцииВЗапросе(Команда)
	ФункцииВЗапросеНаСервере(ДатаДляАнализа);
КонецПроцедуры
&НаСервере
Процедура ОбходРезультатовНаСервере()
	 	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровИУслугТовары.Товар КАК Товар,
		|	ПоступлениеТоваровИУслугТовары.Количество КАК Количество,
		|	ПоступлениеТоваровИУслугТовары.Цена,
		|	ПоступлениеТоваровИУслугТовары.Сумма КАК Сумма,
		|	ПоступлениеТоваровИУслугТовары.Ссылка,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Дата
		|ИЗ
		|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары
		|
		|УПОРЯДОЧИТЬ ПО
		|	Товар
		|ИТОГИ
		|	СУММА(Количество),
		|	СУММА(Сумма)
		|ПО
		|	ОБЩИЕ,
		|	Товар";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаОбщийИтог = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВыборкаОбщийИтог.Следующий();		// Общий итог
	
	// Вставить обработку выборки ВыборкаОбщийИтог
	
	ВыборкаТовар = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТовар.Следующий() Цикл
		// Вставить обработку выборки ВыборкаТовар
	
		ВыборкаДетальныеЗаписи = ВыборкаТовар.Выбрать();
	
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			// Вставить обработку выборки ВыборкаДетальныеЗаписи
		КонецЦикла;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеТоваровИУслугТовары.Товар КАК Товар,
	|	ПоступлениеТоваровИУслугТовары.Сумма КАК Сумма,
	|	ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент КАК Контрагент
	|ИЗ
	|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары
	|ИТОГИ
	|	СУММА(Сумма)
	|ПО
	|	ОБЩИЕ,
	|	Контрагент";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаОбщийИтог = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВыборкаОбщийИтог.Следующий();		// Общий итог
	
	// Вставить обработку выборки ВыборкаОбщийИтог
	Сообщить(Строка(ВыборкаОбщийИтог.Сумма)) ;
	
	ВыборкаКонтрагент = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаКонтрагент.Следующий() Цикл
		// Вставить обработку выборки ВыборкаКонтрагент
		Сообщить(ВыборкаКонтрагент.Контрагент.Наименование+ " "+Строка(ВыборкаКонтрагент.Сумма)) ;
		
		ВыборкаДетальныеЗаписи = ВыборкаКонтрагент.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Сообщить(ВыборкаДетальныеЗаписи.Контрагент.Наименование+ " "+ВыборкаДетальныеЗаписи.Товар.Наименование+" "+Строка(ВыборкаДетальныеЗаписи.Сумма)) ;
		КонецЦикла;
	КонецЦикла;
	
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровИУслугТовары.Товар КАК Товар,
		|	ПоступлениеТоваровИУслугТовары.Сумма КАК Сумма,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент КАК Контрагент
		|ИЗ
		|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары
		|ИТОГИ
		|	СУММА(Сумма)
		|ПО
		|	ОБЩИЕ,
		|	Контрагент";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаОбщийИтог = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВыборкаОбщийИтог.Следующий();		// Общий итог
	
	// Вставить обработку выборки ВыборкаОбщийИтог
	
	ВыборкаКонтрагент = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаКонтрагент.Следующий() Цикл
		// Вставить обработку выборки ВыборкаКонтрагент
	
		ВыборкаДетальныеЗаписи = ВыборкаКонтрагент.Выбрать();
	
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			// Вставить обработку выборки ВыборкаДетальныеЗаписи
		КонецЦикла;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	// Обход по конкретной группировке
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеТоваровИУслугТовары.Товар КАК Товар,
	|	ПоступлениеТоваровИУслугТовары.Сумма КАК Сумма,
	|	ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент КАК Контрагент
	|ИЗ
	|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары
	|ИТОГИ
	|	СУММА(Сумма)
	|ПО
	|	ОБЩИЕ,
	|	Контрагент,
	|	Товар";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаТовар = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Товар");
	
	
	Пока ВыборкаТовар.Следующий() Цикл
		// Вставить обработку выборки ВыборкаКонтрагент
		
		ВыборкаДетальныеЗаписи = ВыборкаТовар.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			// Вставить обработку выборки ВыборкаДетальныеЗаписи
		КонецЦикла;
	КонецЦикла;
	
	
	// обход запроса по итогам с иерархией
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеТоваровИУслугТовары.Товар КАК Товар,
	|	ПоступлениеТоваровИУслугТовары.Сумма КАК Сумма,
	|	ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент КАК Контрагент
	|ИЗ
	|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары
	|ИТОГИ
	|	СУММА(Сумма)
	|ПО
	|	ОБЩИЕ,
	|	Контрагент ИЕРАРХИЯ";
	Результат = Запрос.Выполнить();
	
	
	ВыборкаОбщийИтог = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВыборкаОбщийИтог.Следующий();		// Общий итог
	
	// Вставить обработку выборки ВыборкаОбщийИтог
	
	ВыборкаКонтрагентГруппа = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	Пока ВыборкаКонтрагентГруппа.Следующий() Цикл
		ВыборкаКонтрагент = ВыборкаКонтрагентГруппа.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией,"Контрагент");
		
		Пока ВыборкаКонтрагент.Следующий() Цикл
			// Вставить обработку выборки ВыборкаКонтрагент
			
			ВыборкаДетальныеЗаписи = ВыборкаКонтрагент.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				// Вставить обработку выборки ВыборкаДетальныеЗаписи
			КонецЦикла;
		КонецЦикла;
	КонецЦикла; 
	
	
	
	Результат = Запрос.Выполнить();
	
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(ПоступлениеТоваровИУслугТовары.Ссылка.Дата, ДЕНЬ) КАК ДеньПрихода,
		|	ПоступлениеТоваровИУслугТовары.Товар КАК Товар,
		|	ПоступлениеТоваровИУслугТовары.Количество КАК Количество,
		|	ПоступлениеТоваровИУслугТовары.Сумма КАК Сумма,
		|	ПоступлениеТоваровИУслугТовары.Цена,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент,
		|	ПоступлениеТоваровИУслугТовары.Ссылка
		|ИЗ
		|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары
		|ИТОГИ
		|	СУММА(Количество),
		|	СУММА(Сумма)
		|ПО
		|	ОБЩИЕ,
		|	ДеньПрихода,
		|	Товар";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаОбщийИтог = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВыборкаОбщийИтог.Следующий();		// Общий итог
	
	// Вставить обработку выборки ВыборкаОбщийИтог
	
	ВыборкаДеньПрихода = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаДеньПрихода.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДеньПрихода
	
		ВыборкаТовар = ВыборкаДеньПрихода.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
		Пока ВыборкаТовар.Следующий() Цикл
			// Вставить обработку выборки ВыборкаТовар
	
			ВыборкаДетальныеЗаписи = ВыборкаТовар.Выбрать();
	
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				// Вставить обработку выборки ВыборкаДетальныеЗаписи
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбходРезультатов(Команда)
	ОбходРезультатовНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВыборкаВТабличныйДокументНаСервере()
	
	Макет = Обработки.ПростыеЗапросы.ПолучитьМакет("Макет");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Контрагенты.ЭтоГруппа,
		|	Контрагенты.Родитель,
		|	ПРЕДСТАВЛЕНИЕ(Контрагенты.Родитель),
		|	Контрагенты.Наименование,
		|	Контрагенты.Признак,
		|	Контрагенты.Описание
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
КонецПроцедуры

&НаКлиенте
Процедура ВыборкаВТабличныйДокумент(Команда)
	ВыборкаВТабличныйДокументНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВыводПриходовНаСервере()
	
	Макет = Обработки.ПростыеЗапросы.ПолучитьМакет("Макет1");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровИУслуг.Номер,
		|	ПоступлениеТоваровИУслуг.Дата,
		|	ПоступлениеТоваровИУслуг.Контрагент,
		|	ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровИУслуг.Контрагент),
		|	ПоступлениеТоваровИУслуг.Организация,
		|	ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровИУслуг.Организация),
		|	ПоступлениеТоваровИУслуг.Договор,
		|	ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровИУслуг.Договор)
		|ИЗ
		|	Документ.ПоступлениеТоваровИУслуг КАК ПоступлениеТоваровИУслуг";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	//НашТаблДок = Новый ТабличныйДокумент;
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	

	
КонецПроцедуры

&НаКлиенте
Процедура ВыводПриходов(Команда)
	ВыводПриходовНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПечатьКонтрагентовНаСервере()
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьКонтрагентов(Команда)
	ПечатьКонтрагентовНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПечатьПриходовНаСервере()
	   		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Макет = Обработки.ПростыеЗапросы.ПолучитьМакет("Макет34");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровИУслугТовары.Номенклатура КАК Товар,
		|	ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровИУслугТовары.Номенклатура) КАК НоменклатураПредставление,
		|	ПоступлениеТоваровИУслугТовары.Количество КАК Количество,
		|	ПоступлениеТоваровИУслугТовары.Стоимость КАК Сумма,
		|	ПоступлениеТоваровИУслугТовары.ЦенаПоступления КАК ЦенаПоступления,
		|	ПоступлениеТоваровИУслугТовары.Ссылка КАК Ссылка,
		|	ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровИУслугТовары.Ссылка) КАК СсылкаПредставление
		|ИЗ
		|	Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваровИУслугТовары
		|ИТОГИ
		|	СУММА(Количество),
		|	СУММА(Сумма)
		|ПО
		|	Товар,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Поставщик";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьТовар = Макет.ПолучитьОбласть("Товар");
	ОбластьКонтрагент = Макет.ПолучитьОбласть("Контрагент");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаТовар = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТовар.Следующий() Цикл
		ОбластьТовар.Параметры.Заполнить(ВыборкаТовар);
		ТабДок.Вывести(ОбластьТовар, ВыборкаТовар.Уровень());
	
		ВыборкаКонтрагент = ВыборкаТовар.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
		Пока ВыборкаКонтрагент.Следующий() Цикл
			ОбластьКонтрагент.Параметры.Заполнить(ВыборкаКонтрагент);
			ТабДок.Вывести(ОбластьКонтрагент, ВыборкаКонтрагент.Уровень());
	
			ВыборкаДетальныеЗаписи = ВыборкаКонтрагент.Выбрать();
	
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
				ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьПриходов(Команда)
	ПечатьПриходовНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПросмотрСтруктурыБазыНаСервере()
	Таблица = ПолучитьСтруктуруХраненияБазыДанных();
КонецПроцедуры

&НаКлиенте
Процедура ПросмотрСтруктурыБазы(Команда)
	ПросмотрСтруктурыБазыНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПримерОтображенияДанніхНаФормеНаСервере()
	
	Макет = Обработки.ПростыеЗапросы.ПолучитьМакет("Макетнаш1");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровИУслугТовары.Ссылка КАК Ссылка,
		|	ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровИУслугТовары.Ссылка) КАК СсылкаПредставление,
		|	ПоступлениеТоваровИУслугТовары.НомерСтроки КАК НомерСтроки,
		|	ПоступлениеТоваровИУслугТовары.Товар КАК Товар,
		|	ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровИУслугТовары.Товар) КАК ТоварПредставление,
		|	ПоступлениеТоваровИУслугТовары.Количество КАК Количество,
		|	ПоступлениеТоваровИУслугТовары.Сумма КАК Сумма,
		|	ПоступлениеТоваровИУслугТовары.Цена КАК Цена,
		|	ПоступлениеТоваровИУслугТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровИУслугТовары.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление
		|ИЗ
		|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары
		|
		|УПОРЯДОЧИТЬ ПО
		|	Товар";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
КонецПроцедуры

&НаКлиенте
Процедура ПримерОтображенияДанніхНаФорме(Команда)
	ПримерОтображенияДанніхНаФормеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПримерИспорльзованияКонструктораЗапросовНаСервере()
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Контрагенты.Код,
		|	Контрагенты.Наименование,
		|	Контрагенты.ЕДРПОУ,
		|	Контрагенты.Менеджер,
		|	Контрагенты.ОсновнойСклад,
		|	Контрагенты.Признак
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	


	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Контрагенты.Код,
	|	Контрагенты.Наименование,
	|	Контрагенты.Признак,
	|	Контрагенты.Ссылка КАК КонтрагентСсылка,
	|	Контрагенты.ЕДРПОУ,
	|	Контрагенты.Описание КАК ОписаниеКонтрагента,
	|	Контрагенты.Менеджер
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Сообщить(""+ВыборкаДетальныеЗаписи.КонтрагентСсылка+ " " +ВыборкаДетальныеЗаписи.ЕДРПОУ);	
		
	КонецЦикла;
	

	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Контрагенты.Ссылка,
	|	Контрагенты.Код,
	|	Контрагенты.Наименование,
	|	Контрагенты.Признак,
	|	Контрагенты.ЕДРПОУ,
	|	Контрагенты.ВалютаВзаиморасчетов
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	



КонецПроцедуры

&НаКлиенте
Процедура ПримерИспорльзованияКонструктораЗапросов(Команда)
	ПримерИспорльзованияКонструктораЗапросовНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПереносИзКонсолиНаСервере()
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент КАК Поставщик,
		|	ПоступлениеТоваровИУслугТовары.Товар КАК Товар,
		|	ПоступлениеТоваровИУслугТовары.Количество КАК Количество,
		|	ПоступлениеТоваровИУслугТовары.Сумма КАК Сумма,
		|	ПоступлениеТоваровИУслугТовары.Ссылка КАК КоличествоДокументов,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Дата КАК ДатаПервогоПрихода,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Дата КАК ДатаПоследнегоПрихода,
		|	ПОДСТРОКА(ПоступлениеТоваровИУслугТовары.Товар.Наименование, 5, 7) КАК Поле1,
		|	МЕСЯЦ(ПоступлениеТоваровИУслугТовары.Ссылка.Дата) КАК Поле2,
		|	НАЧАЛОПЕРИОДА(ПоступлениеТоваровИУслугТовары.Ссылка.Дата, ГОД) КАК Поле3,
		|	ДОБАВИТЬКДАТЕ(ПоступлениеТоваровИУслугТовары.Ссылка.Дата, ГОД, -2) КАК Поле4,
		|	РАЗНОСТЬДАТ(ПоступлениеТоваровИУслугТовары.Ссылка.Дата, &ТекущаяДата, МЕСЯЦ) КАК Поле5,
		|	ТИПЗНАЧЕНИЯ(ПоступлениеТоваровИУслугТовары.Товар) КАК Поле6,
		|	ВЫБОР
		|		КОГДА ПоступлениеТоваровИУслугТовары.Количество > 15
		|			ТОГДА ""хороший приход""
		|		ИНАЧЕ ""плохой приход""
		|	КОНЕЦ КАК Поле7,
		|	ВЫБОР
		|		КОГДА ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент.Признак = ЗНАЧЕНИЕ(Перечисление.ПризнакКлиента.ЧастноеЛицо)
		|			ТОГДА ""Физ лио""
		|		ИНАЧЕ ""Юр лицо""
		|	КОНЕЦ КАК Поле8
		|ИЗ
		|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары
		|
		|УПОРЯДОЧИТЬ ПО
		|	Поставщик";
	
	Запрос.УстановитьПараметр("ТекущаяДата", ДатаДляЗапроса);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПереносИзКонсоли(Команда)
	ПереносИзКонсолиНаСервере();
КонецПроцедуры

&НаСервере
Процедура ГруппировкиСВыводовВТаблДокНаСервере()
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Макет = Обработки.ПростыеЗапросы.ПолучитьМакет("Макет2");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровИУслугТовары.Товар КАК Товар,
		|	СУММА(ПоступлениеТоваровИУслугТовары.Количество) КАК Количество,
		|	СУММА(ПоступлениеТоваровИУслугТовары.Сумма) КАК Сумма,
		|	МИНИМУМ(ПоступлениеТоваровИУслугТовары.Ссылка.Дата) КАК ДатаПервогоПрихода,
		|	МАКСИМУМ(ПоступлениеТоваровИУслугТовары.Ссылка.Дата) КАК ДатаПоследнегоПрихода,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент,
		|	КОЛИЧЕСТВО(ПоступлениеТоваровИУслугТовары.Ссылка) КАК Ссылка
		|ИЗ
		|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары
		|
		|СГРУППИРОВАТЬ ПО
		|	ПоступлениеТоваровИУслугТовары.Товар,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент
		|
		|УПОРЯДОЧИТЬ ПО
		|	Товар
		|АВТОУПОРЯДОЧИВАНИЕ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппировкиСВыводовВТаблДок(Команда)
	ГруппировкиСВыводовВТаблДокНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВыборДанныхСУсловиемНаСервере()
	 	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Макет = Обработки.ПростыеЗапросы.ПолучитьМакет("Макет5");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровИУслугТовары.Товар КАК Товар,
		|	ПоступлениеТоваровИУслугТовары.Количество КАК Количество,
		|	ПоступлениеТоваровИУслугТовары.Сумма КАК Сумма,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент,
		|	ПоступлениеТоваровИУслугТовары.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары
		|ГДЕ
		|	ПоступлениеТоваровИУслугТовары.Количество > &Количество
		|
		|УПОРЯДОЧИТЬ ПО
		|	Товар
		|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("Количество", Количество);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
КонецПроцедуры

&НаКлиенте
Процедура ВыборДанныхСУсловием(Команда)
	ВыборДанныхСУсловиемНаСервере();
КонецПроцедуры

&НаСервере
Процедура НашиФункцииВЗапросеНаСервере()
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Макет = Обработки.ПростыеЗапросы.ПолучитьМакет("Макет6");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровИУслугТовары.Товар,
		|	ПоступлениеТоваровИУслугТовары.Количество,
		|	ПоступлениеТоваровИУслугТовары.Сумма,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Дата,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Номер,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент,
		|	""ПН"" КАК ТипДокумента,
		|	ВЫБОР
		|		КОГДА ПоступлениеТоваровИУслугТовары.Количество = 0
		|			ТОГДА 0
		|		ИНАЧЕ ПоступлениеТоваровИУслугТовары.Сумма / ПоступлениеТоваровИУслугТовары.Количество
		|	КОНЕЦ КАК РасчетнаяЦена,
		|	ПОДСТРОКА(ПоступлениеТоваровИУслугТовары.Товар.Наименование, 1, 1000) КАК КусокНаименования,
		|	ГОД(ПоступлениеТоваровИУслугТовары.Ссылка.Дата) КАК ГодДокумента,
		|	НАЧАЛОПЕРИОДА(ПоступлениеТоваровИУслугТовары.Ссылка.Дата, ГОД) КАК Поле1,
		|	ДОБАВИТЬКДАТЕ(ПоступлениеТоваровИУслугТовары.Ссылка.Дата, МЕСЯЦ, -3) КАК Поле2,
		|	ДАТАВРЕМЯ(2017, 7, 17) КАК Поле3,
		|	ВЫБОР
		|		КОГДА ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент.Признак = ЗНАЧЕНИЕ(Перечисление.ПризнакКлиента.ЧастноеЛицо)
		|			ТОГДА ""Нужно отправить письмо""
		|		ИНАЧЕ ""Ничего делать не нужно""
		|	КОНЕЦ КАК Поле4
		|ИЗ
		|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	
КонецПроцедуры

&НаКлиенте
Процедура НашиФункцииВЗапросе(Команда)
	НашиФункцииВЗапросеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПримерПереносаИзКонсолиНаСервере()
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровИУслугТовары.Товар КАК Номенклатура,
		|	СУММА(ПоступлениеТоваровИУслугТовары.Количество) КАК ОбщееКоличество,
		|	СУММА(ПоступлениеТоваровИУслугТовары.Сумма) КАК СуммаПоВсемДокументам
		|ИЗ
		|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары
		|
		|СГРУППИРОВАТЬ ПО
		|	ПоступлениеТоваровИУслугТовары.Товар
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура
		|АВТОУПОРЯДОЧИВАНИЕ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	
КонецПроцедуры

&НаКлиенте
Процедура ПримерПереносаИзКонсоли(Команда)
	ПримерПереносаИзКонсолиНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗапросСПараметромНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровИУслугТовары.Товар,
		|	ПоступлениеТоваровИУслугТовары.Количество,
		|	ПоступлениеТоваровИУслугТовары.Сумма,
		|	ПоступлениеТоваровИУслугТовары.Цена,
		|	ПоступлениеТоваровИУслугТовары.Ссылка,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент.Признак
		|ИЗ
		|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары
		|ГДЕ
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент.Признак = &Признак";
	
	Запрос.УстановитьПараметр("Признак", Признак);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровИУслугТовары.Товар,
		|	ПоступлениеТоваровИУслугТовары.Количество,
		|	ПоступлениеТоваровИУслугТовары.Цена
		|ИЗ
		|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары
		|ГДЕ
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент.Признак = &Признак
		|	И ПоступлениеТоваровИУслугТовары.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания";
	
	Запрос.УстановитьПараметр("ДатаНачала", Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("Признак", Признак);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	

КонецПроцедуры

&НаКлиенте
Процедура ЗапросСПараметром(Команда)
	ЗапросСПараметромНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗапросСПараметрами1НаСервере()
	
	 	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровИУслугТовары.Товар КАК Товар,
		|	ПоступлениеТоваровИУслугТовары.Количество,
		|	ПоступлениеТоваровИУслугТовары.Цена,
		|	ПоступлениеТоваровИУслугТовары.Сумма,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент КАК Поставщик,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Организация КАК Фирма,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Договор,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент.Признак
		|ИЗ
		|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары
		|ГДЕ
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Организация = &Организация
		|
		|УПОРЯДОЧИТЬ ПО
		|	Товар
		|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Сообщить(""+ВыборкаДетальныеЗаписи.Товар + " "+ВыборкаДетальныеЗаписи.Фирма);
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

КонецПроцедуры

&НаКлиенте
Процедура ЗапросСПараметрами1(Команда)
	ЗапросСПараметрами1НаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗапросСПараметрамиПоПННаСервере()
	 	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровИУслугТовары.Товар,
		|	ПоступлениеТоваровИУслугТовары.Количество,
		|	ПоступлениеТоваровИУслугТовары.Цена,
		|	ПоступлениеТоваровИУслугТовары.Сумма,
		|	ПоступлениеТоваровИУслугТовары.Ссылка КАК ДокументПТУ,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Номер,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Дата,
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент
		|ИЗ
		|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары
		|ГДЕ
		|	ПоступлениеТоваровИУслугТовары.Цена > &Цена
		|	И ПоступлениеТоваровИУслугТовары.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания";
	
	Запрос.УстановитьПараметр("ДатаНачала", Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("Цена", Цена);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Сообщить(""+ВыборкаДетальныеЗаписи.ДокументПТУ + " "+ ВыборкаДетальныеЗаписи.Товар);
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
КонецПроцедуры

&НаКлиенте
Процедура ЗапросСПараметрамиПоПН(Команда)
	ЗапросСПараметрамиПоПННаСервере();
КонецПроцедуры
