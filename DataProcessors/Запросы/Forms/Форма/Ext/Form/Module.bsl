
&НаСервере
Процедура ОбходРезультатовНаСервере()
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеТоваровИУслугТовары.Товар КАК Товар,
	|	ПоступлениеТоваровИУслугТовары.Сумма КАК Сумма,
	|	ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент КАК Контрагент
	|ИЗ
	|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары
	|ИТОГИ
	|	СУММА(Сумма)
	|ПО
	|	ОБЩИЕ,
	|	Контрагент";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаОбщийИтог = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВыборкаОбщийИтог.Следующий();		// Общий итог
	
	// Вставить обработку выборки ВыборкаОбщийИтог
	Сообщить(Строка(ВыборкаОбщийИтог.Сумма)) ;
	
	ВыборкаКонтрагент = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаКонтрагент.Следующий() Цикл
		// Вставить обработку выборки ВыборкаКонтрагент
		Сообщить(ВыборкаКонтрагент.Контрагент.Наименование+ " "+Строка(ВыборкаКонтрагент.Сумма)) ;
		
		ВыборкаДетальныеЗаписи = ВыборкаКонтрагент.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Сообщить(ВыборкаДетальныеЗаписи.Контрагент.Наименование+ " "+ВыборкаДетальныеЗаписи.Товар.Наименование+" "+Строка(ВыборкаДетальныеЗаписи.Сумма)) ;
		КонецЦикла;
	КонецЦикла;
	
	// Обход по конкретной группировке
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеТоваровИУслугТовары.Товар КАК Товар,
	|	ПоступлениеТоваровИУслугТовары.Сумма КАК Сумма,
	|	ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент КАК Контрагент
	|ИЗ
	|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары
	|ИТОГИ
	|	СУММА(Сумма)
	|ПО
	|	ОБЩИЕ,
	|	Контрагент,
	|	Товар";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаТовар = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Товар");
	
	
	Пока ВыборкаТовар.Следующий() Цикл
		// Вставить обработку выборки ВыборкаКонтрагент
		
		ВыборкаДетальныеЗаписи = ВыборкаТовар.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			// Вставить обработку выборки ВыборкаДетальныеЗаписи
		КонецЦикла;
	КонецЦикла;
	
	
	// обход запроса по итогам с иерархией
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеТоваровИУслугТовары.Товар КАК Товар,
	|	ПоступлениеТоваровИУслугТовары.Сумма КАК Сумма,
	|	ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент КАК Контрагент
	|ИЗ
	|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары
	|ИТОГИ
	|	СУММА(Сумма)
	|ПО
	|	ОБЩИЕ,
	|	Контрагент ИЕРАРХИЯ";
	//Результат = Запрос.Выполнить();
	
	//
	//ВыборкаОбщийИтог = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	//
	//ВыборкаОбщийИтог.Следующий();		// Общий итог
	//
	//// Вставить обработку выборки ВыборкаОбщийИтог
	//
	//ВыборкаКонтрагентГруппа = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	//Пока ВыборкаКонтрагентГруппа.Следующий() Цикл
	//	ВыборкаКонтрагент = ВыборкаКонтрагентГруппа.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией,"Контрагент");
	//	
	//	Пока ВыборкаКонтрагент.Следующий() Цикл
	//		// Вставить обработку выборки ВыборкаКонтрагент
	//		
	//		ВыборкаДетальныеЗаписи = ВыборкаКонтрагент.Выбрать();
	//		
	//		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//			// Вставить обработку выборки ВыборкаДетальныеЗаписи
	//		КонецЦикла;
	//	КонецЦикла;
	//КонецЦикла; 
	
	
	
	Результат = Запрос.Выполнить();
	
	ОбходИерархии(Результат);
	
	
	
КонецПроцедуры
&НаСервере
Процедура ОбходИерархии(ТекущаяСтрока)
	
	Выборка = ТекущаяСтрока.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией, "Контрагент");
	Пока Выборка.Следующий() Цикл
		
		ОбходИерархии(Выборка);
		Если Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоГруппировке Тогда
			
			ВыборкаДетали = Выборка.Выбрать();
			Пока ВыборкаДетали.Следующий() Цикл
				
				
				
			КонецЦикла; 
			
		КонецЕсли; 
		
	КонецЦикла;
КонецПроцедуры // ОбходИерархии()


&НаКлиенте
Процедура ОбходРезультатов(Команда)
	ОбходРезультатовНаСервере();
	АктивизироватьРезультат();
КонецПроцедуры

&НаСервере
Процедура ВложенныйЗапросНаСервере()
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Макет = Обработки.Запросы.ПолучитьМакет("Макет11");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПервоеПоступление.Ссылка,
		|	ПервоеПоступление.Номер,
		|	ПервоеПоступление.Дата,
		|	ПервоеПоступление.Контрагент,
		|	ПоследняяРеализация.Ссылка КАК Ссылка1,
		|	ПоследняяРеализация.Номер КАК Номер1,
		|	ПоследняяРеализация.Дата КАК Дата1,
		|	ПоследняяРеализация.Контрагент КАК Контрагент1
		|ИЗ
		|	(ВЫБРАТЬ ПЕРВЫЕ 1
		|		ПоступлениеТоваровИУслуг.Ссылка КАК Ссылка,
		|		ПоступлениеТоваровИУслуг.Номер КАК Номер,
		|		ПоступлениеТоваровИУслуг.Дата КАК Дата,
		|		ПоступлениеТоваровИУслуг.Контрагент КАК Контрагент
		|	ИЗ
		|		Документ.ПоступлениеТоваровИУслуг КАК ПоступлениеТоваровИУслуг
		|	
		|	УПОРЯДОЧИТЬ ПО
		|		ПоступлениеТоваровИУслуг.МоментВремени) КАК ПервоеПоступление,
		|	(ВЫБРАТЬ ПЕРВЫЕ 1
		|		РеализационнаяНакладная.Ссылка КАК Ссылка,
		|		РеализационнаяНакладная.Номер КАК Номер,
		|		РеализационнаяНакладная.Дата КАК Дата,
		|		РеализационнаяНакладная.Контрагент КАК Контрагент
		|	ИЗ
		|		Документ.РеализационнаяНакладная КАК РеализационнаяНакладная
		|	
		|	УПОРЯДОЧИТЬ ПО
		|		РеализационнаяНакладная.МоментВремени УБЫВ) КАК ПоследняяРеализация";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Товары.Ссылка,
		|	Товары.Код,
		|	Товары.Артикул,
		|	Остатки.КоличествоОстаток,
		|	Цены.Цена
		|ИЗ
		|	Справочник.Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ОстаткиТоваровОстатки.Товар КАК Товар,
		|			ОстаткиТоваровОстатки.КоличествоОстаток КАК КоличествоОстаток
		|		ИЗ
		|			РегистрНакопления.ОстаткиТоваров.Остатки(&НаДату, ) КАК ОстаткиТоваровОстатки) КАК Остатки
		|		ПО (Остатки.Товар = Товары.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ЦеныТоваровСрезПоследних.Товар КАК Товар,
		|			ЦеныТоваровСрезПоследних.Цена КАК Цена
		|		ИЗ
		|			РегистрСведений.ЦеныТоваров.СрезПоследних(&НаДату, ) КАК ЦеныТоваровСрезПоследних) КАК Цены
		|		ПО (Цены.Товар = Товары.Ссылка)";
	
	Запрос.УстановитьПараметр("НаДату", Период.ДатаОкончания);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
КонецПроцедуры



&НаКлиенте
Процедура ВложенныйЗапрос(Команда)
	ВложенныйЗапросНаСервере();
	АктивизироватьРезультат();
КонецПроцедуры

&НаСервере
Процедура ОбертываниеВложенногоЗапросаНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МойНовыйЗапрос.Ссылка,
	|	МойНовыйЗапрос.Номер,
	|	МойНовыйЗапрос.Дата,
	|	МойНовыйЗапрос.Контрагент,
	|	МойНовыйЗапрос.Ссылка1,
	|	МойНовыйЗапрос.Номер1,
	|	МойНовыйЗапрос.Дата1,
	|	МойНовыйЗапрос.Контрагент1
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПервоеПоступление.Ссылка КАК Ссылка,
	|		ПервоеПоступление.Номер КАК Номер,
	|		ПервоеПоступление.Дата КАК Дата,
	|		ПервоеПоступление.Контрагент КАК Контрагент,
	|		ПерваяРеализация.Ссылка КАК Ссылка1,
	|		ПерваяРеализация.Номер КАК Номер1,
	|		ПерваяРеализация.Дата КАК Дата1,
	|		ПерваяРеализация.Контрагент КАК Контрагент1
	|	ИЗ
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ПоступлениеТоваровИУслуг.Ссылка КАК Ссылка,
	|			ПоступлениеТоваровИУслуг.Номер КАК Номер,
	|			ПоступлениеТоваровИУслуг.Дата КАК Дата,
	|			ПоступлениеТоваровИУслуг.Контрагент КАК Контрагент
	|		ИЗ
	|			Документ.ПоступлениеТоваровИУслуг КАК ПоступлениеТоваровИУслуг
	|		
	|		УПОРЯДОЧИТЬ ПО
	|			ПоступлениеТоваровИУслуг.МоментВремени) КАК ПервоеПоступление,
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			РеализационнаяНакладная.Ссылка КАК Ссылка,
	|			РеализационнаяНакладная.Номер КАК Номер,
	|			РеализационнаяНакладная.Дата КАК Дата,
	|			РеализационнаяНакладная.Контрагент КАК Контрагент
	|		ИЗ
	|			Документ.РеализационнаяНакладная КАК РеализационнаяНакладная
	|		
	|		УПОРЯДОЧИТЬ ПО
	|			РеализационнаяНакладная.МоментВремени) КАК ПерваяРеализация) КАК МойНовыйЗапрос";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбертываниеВложенногоЗапроса(Команда)
	ОбертываниеВложенногоЗапросаНаСервере();
	АктивизироватьРезультат();
КонецПроцедуры

&НаСервере
Процедура ВложенныйЗапросВУсловииНаСервере()
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Макет = Обработки.Запросы.ПолучитьМакет("Макет9");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровИУслугТовары.Товар
		|ИЗ
		|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары
		|ГДЕ
		|	ПоступлениеТоваровИУслугТовары.Товар В
		|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|				РеализационнаяНакладнаяТовары.Товар
		|			ИЗ
		|				Документ.РеализационнаяНакладная.Товары КАК РеализационнаяНакладнаяТовары
		|			ГДЕ
		|				РеализационнаяНакладнаяТовары.Ссылка.Проведен)";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
КонецПроцедуры

&НаКлиенте
Процедура ВложенныйЗапросВУсловии(Команда)
	ВложенныйЗапросВУсловииНаСервере();
	АктивизироватьРезультат();
КонецПроцедуры

&НаСервере
Процедура ВычислениеИтоговНаСервере()
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Макет = Обработки.Запросы.ПолучитьМакет("Макет7");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровИУслуг.Ссылка КАК Ссылка,
		|	НАЧАЛОПЕРИОДА(ПоступлениеТоваровИУслуг.Дата, ДЕНЬ) КАК ДатаПрихода
		|ИЗ
		|	Документ.ПоступлениеТоваровИУслуг КАК ПоступлениеТоваровИУслуг
		|ИТОГИ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Ссылка)
		|ПО
		|	ДатаПрихода";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДатаПрихода = Макет.ПолучитьОбласть("ДатаПрихода");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДатаПрихода = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаДатаПрихода.Следующий() Цикл
		ОбластьДатаПрихода.Параметры.Заполнить(ВыборкаДатаПрихода);
		ТабДок.Вывести(ОбластьДатаПрихода, ВыборкаДатаПрихода.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ВычислениеИтогов(Команда)
	ВычислениеИтоговНаСервере();
	АктивизироватьРезультат();
КонецПроцедуры

&НаСервере
Процедура ЗапросСПараметрамиНаСервере()
	Дата1 = Период.ДатаНачала;
	Дата2 = Период.ДатаОкончания;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеТоваровИУслуг.Ссылка,
	|	ПоступлениеТоваровИУслуг.Номер,
	|	ПоступлениеТоваровИУслуг.Дата,
	|	ПоступлениеТоваровИУслуг.Контрагент
	|ИЗ
	|	Документ.ПоступлениеТоваровИУслуг КАК ПоступлениеТоваровИУслуг
	|ГДЕ
	|	ПоступлениеТоваровИУслуг.Дата МЕЖДУ &Дата1 И &Дата2";
	
	Запрос.УстановитьПараметр("Дата1", Дата1);
	Запрос.УстановитьПараметр("Дата2", Дата2);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапросСПараметрами(Команда)
	ЗапросСПараметрамиНаСервере();
	АктивизироватьРезультат();
КонецПроцедуры

&НаСервере
Процедура ОстаткиНаСервере(ДатаОстатков,ВыбранныйТовар)
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Макет = Обработки.Запросы.ПолучитьМакет("Макет");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиТоваровОстатки.Товар,
		|	ОстаткиТоваровОстатки.КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.ОстаткиТоваров.Остатки(&ДатаОстатков, Товар = &ВыбранныйТовар) КАК ОстаткиТоваровОстатки";
	
	Запрос.УстановитьПараметр("ВыбранныйТовар", ВыбранныйТовар);
	Запрос.УстановитьПараметр("ДатаОстатков", ДатаОстатков);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	ТабДок.Очистить();
	
	//ТабДок = Новый ТабличныйДокумент;
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	
КонецПроцедуры

&НаКлиенте
Процедура Остатки(Команда)
	ОстаткиНаСервере(Период.ДатаОкончания,Товар);
	АктивизироватьРезультат();
КонецПроцедуры

&НаСервере
Процедура ОборотыРегистрОстатковНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиТоваровОбороты.Период,
		|	ОстаткиТоваровОбороты.Товар,
		|	ОстаткиТоваровОбороты.КоличествоОборот,
		|	ОстаткиТоваровОбороты.КоличествоПриход,
		|	ОстаткиТоваровОбороты.КоличествоРасход
		|ИЗ
		|	РегистрНакопления.ОстаткиТоваров.Обороты(&ДатаНачала, &ДатаОкончания, День, Товар = &Товар) КАК ОстаткиТоваровОбороты";
	
	Запрос.УстановитьПараметр("ДатаНачала", Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("Товар", Товар);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
Сообщить (""+ВыборкаДетальныеЗаписи.Период+" "+ВыборкаДетальныеЗаписи.Товар + " " + Строка(ВыборкаДетальныеЗаписи.КоличествоРасход) );
	КонецЦикла;
	

	
КонецПроцедуры

&НаКлиенте
Процедура ОборотыРегистрОстатков(Команда)
	ОборотыРегистрОстатковНаСервере();
	АктивизироватьРезультат();
КонецПроцедуры

&НаСервере
Процедура ОстаткиИОборотыНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиТоваровОстаткиИОбороты.Товар,
		|	ОстаткиТоваровОстаткиИОбороты.КоличествоНачальныйОстаток,
		|	ОстаткиТоваровОстаткиИОбороты.КоличествоОборот,
		|	ОстаткиТоваровОстаткиИОбороты.КоличествоПриход,
		|	ОстаткиТоваровОстаткиИОбороты.КоличествоРасход,
		|	ОстаткиТоваровОстаткиИОбороты.КоличествоКонечныйОстаток
		|ИЗ
		|	РегистрНакопления.ОстаткиТоваров.ОстаткиИОбороты(&ДатаНачала, &ДатаОкончания, Авто, ДвиженияИГраницыПериода, Товар = &Товар) КАК ОстаткиТоваровОстаткиИОбороты";
	
	Запрос.УстановитьПараметр("ДатаНачала", Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("Товар", Товар);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
Сообщить (""+ВыборкаДетальныеЗаписи.Товар + " " + Строка(ВыборкаДетальныеЗаписи.КоличествоОборот) );
	КонецЦикла;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиИОбороты(Команда)
	ОстаткиИОборотыНаСервере();
	АктивизироватьРезультат();
КонецПроцедуры

&НаСервере
Процедура СрезПоследнихНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЦеныТоваровСрезПоследних.Период,
		|	ЦеныТоваровСрезПоследних.Товар,
		|	ЦеныТоваровСрезПоследних.Цена
		|ИЗ
		|	РегистрСведений.ЦеныТоваров.СрезПоследних(&ДатаНачала, Товар = &Товар) КАК ЦеныТоваровСрезПоследних";
	
	Запрос.УстановитьПараметр("ДатаНачала", Период.ДатаНачала);
	Запрос.УстановитьПараметр("Товар", Товар);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
Сообщить (""+ВыборкаДетальныеЗаписи.Товар + " " + Строка(ВыборкаДетальныеЗаписи.Цена) );
КонецЦикла;
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура СрезПоследних(Команда)
	СрезПоследнихНаСервере();
КонецПроцедуры

&НаСервере
Процедура ТестНаСервере()
	////{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	//// Данный фрагмент построен конструктором.
	//// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	//
	//Макет = Обработки.Запросы.ПолучитьМакет("Макет1");
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	ПоступлениеТоваровИУслуг.Номер,
	//	|	ПоступлениеТоваровИУслуг.Дата,
	//	|	ПоступлениеТоваровИУслуг.Проведен,
	//	|	ПоступлениеТоваровИУслуг.Контрагент,
	//	|	ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровИУслуг.Контрагент),
	//	|	ПоступлениеТоваровИУслуг.Организация,
	//	|	ПоступлениеТоваровИУслуг.Договор
	//	|ИЗ
	//	|	Документ.ПоступлениеТоваровИУслуг КАК ПоступлениеТоваровИУслуг";
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	//ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	//ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	//ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	//ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	//
	//ТабДок.Очистить();
	//ТабДок.Вывести(ОбластьЗаголовок);
	//ТабДок.Вывести(ОбластьШапкаТаблицы);
	//ТабДок.НачатьАвтогруппировкуСтрок();
	//
	//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//
	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//	ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
	//	ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
	//КонецЦикла;
	//
	//ТабДок.ЗакончитьАвтогруппировкуСтрок();
	//ТабДок.Вывести(ОбластьПодвалТаблицы);
	//ТабДок.Вывести(ОбластьПодвал);
	//
	////}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	ПоступлениеТоваровИУслуг.Контрагент,
	//	|	ПоступлениеТоваровИУслуг.Организация,
	//	|	ПоступлениеТоваровИУслуг.Договор,
	//	|	ПоступлениеТоваровИУслуг.Номер,
	//	|	ПоступлениеТоваровИУслуг.Дата,
	//	|	ПоступлениеТоваровИУслуг.Ссылка
	//	|ИЗ
	//	|	Документ.ПоступлениеТоваровИУслуг КАК ПоступлениеТоваровИУслуг
	//	|ГДЕ
	//	|	ПоступлениеТоваровИУслуг.Дата > &Дата";
	//	
	//	
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//ТекОрг=Константы.ОсновнаяОрганизация.Получить();
	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//	Сообщить(ВыборкаДетальныеЗаписи.Номер);
	//	//ТекОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
	//	//ТекОбъект.Организация=ТекОрг ;
	//	//ТекОбъект.Записать();
	//КонецЦикла;
	//
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	 	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровИУслуг.Номер,
		|	ПоступлениеТоваровИУслуг.Дата,
		|	ПоступлениеТоваровИУслуг.Контрагент
		|ИЗ
		|	Документ.ПоступлениеТоваровИУслуг КАК ПоступлениеТоваровИУслуг
		|ГДЕ
		|	ПоступлениеТоваровИУслуг.Дата МЕЖДУ &Дата1 И &Дата2";
	
	Запрос.УстановитьПараметр("Дата1", Период.ДатаНачала);
	Запрос.УстановитьПараметр("Дата2", Период.ДатаОкончания);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	
	

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Организации.Ссылка КАК Орг,
		|	Организации.Наименование,
		|	Организации.Код,
		|	Организации.Префикс
		|ИЗ
		|	Справочник.Организации КАК Организации";
	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	
	

	
КонецПроцедуры

&НаКлиенте
Процедура Тест(Команда)
	ТестНаСервере();
КонецПроцедуры

&НаСервере
Процедура СоединениеТаблицНаСервере()
	
	Макет = Обработки.Запросы.ПолучитьМакет("Макет2");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Товары.Ссылка,
		|	Товары.Представление,
		|	Товары.ВерсияДанных,
		|	Товары.ПометкаУдаления,
		|	Товары.Код,
		|	Товары.Наименование,
		|	Товары.Поставщик,
		|	Товары.Артикул,
		|	Товары.Цена,
		|	Товары.Партия,
		|	Товары.Предопределенный,
		|	Товары.ИмяПредопределенныхДанных,
		|	ОстаткиТоваровОстатки.КоличествоОстаток,
		|	ОстаткиТоваровОстатки.СуммаОстаток
		|ИЗ
		|	РегистрНакопления.ОстаткиТоваров.Остатки КАК ОстаткиТоваровОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Товары КАК Товары
		|		ПО ОстаткиТоваровОстатки.Товар = Товары.Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	
КонецПроцедуры

&НаКлиенте
Процедура СоединениеТаблиц(Команда)
	СоединениеТаблицНаСервере();
	АктивизироватьРезультат();
КонецПроцедуры

&НаСервере
Процедура внутреннееСоединениеНаСервере()
	
	Макет = Обработки.Запросы.ПолучитьМакет("Макет5");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Контрагенты.Родитель,
		|	Контрагенты.Ссылка,
		|	Контрагенты.Код,
		|	Контрагенты.Наименование,
		|	Контрагенты.Менеджер,
		|	Сотрудники.Пол,
		|	Сотрудники.Адрес,
		|	Сотрудники.ОбъемПродаж,
		|	Сотрудники.Наименование КАК Наименование1
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
		|		ПО Контрагенты.Менеджер = Сотрудники.Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	

	
КонецПроцедуры

&НаКлиенте
Процедура внутреннееСоединение(Команда)
	внутреннееСоединениеНаСервере();
	АктивизироватьРезультат();
КонецПроцедуры

&НаСервере
Процедура ПолноеСоединениеНаСервере()
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Макет = Обработки.Запросы.ПолучитьМакет("Макет4");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Контрагенты.Родитель,
		|	Контрагенты.Ссылка,
		|	Контрагенты.Код,
		|	Контрагенты.Наименование,
		|	Контрагенты.Менеджер,
		|	Сотрудники.Пол,
		|	Сотрудники.Адрес,
		|	Сотрудники.ОбъемПродаж,
		|	Сотрудники.Наименование КАК Наименование1
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|		ПОЛНОЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
		|		ПО Контрагенты.Менеджер = Сотрудники.Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПолноеСоединение(Команда)
	ПолноеСоединениеНаСервере();
	АктивизироватьРезультат();
КонецПроцедуры

&НаСервере
Процедура ДемонстрацияNullНаСервере()
	
	Макет = Обработки.Запросы.ПолучитьМакет("Макет6");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Контрагенты.Родитель,
		|	Контрагенты.Ссылка,
		|	Контрагенты.Код,
		|	Контрагенты.Наименование,
		|	Контрагенты.Менеджер,
		|	Сотрудники.Пол,
		|	Сотрудники.Адрес,
		|	Сотрудники.ОбъемПродаж,
		|	Сотрудники.Наименование КАК Наименование1,
		|	ЕСТЬNULL(Сотрудники.ОбъемПродаж, 0) + 100 КАК ОбъемПродаж1
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
		|		ПО Контрагенты.Менеджер = Сотрудники.Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	Текст ="ВЫБРАТЬ
	       |	Контрагенты.Код,
	       |	Контрагенты.Наименование,
	       |	Контрагенты.Признак,
	       |	Контрагенты.Менеджер,
	       |	Сотрудники.Код КАК Код1,
	       |	Сотрудники.Наименование КАК Наименование1,
	       |	Сотрудники.Пол,
	       |	ЕСТЬNULL(Сотрудники.ОбъемПродаж, 0) КАК ОбъемПродаж,
	       |	ЕСТЬNULL(Сотрудники.ОбъемПродаж, 0) + 100 КАК Поле1,
	       |	ЕСТЬNULL(Сотрудники.Пол, ЗНАЧЕНИЕ(Перечисление.Пол.Мужской)) КАК Поле2,
	       |	ВЫБОР
	       |		КОГДА Сотрудники.Код ЕСТЬ NULL
	       |			ТОГДА ""NULL""
	       |		ИНАЧЕ """"
	       |	КОНЕЦ КАК Поле3
	       |ИЗ
	       |	Справочник.Контрагенты КАК Контрагенты
	       |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
	       |		ПО Контрагенты.Менеджер = Сотрудники.Ссылка" ;
	
КонецПроцедуры

&НаКлиенте
Процедура ДемонстрацияNull(Команда)
	ДемонстрацияNullНаСервере();
	АктивизироватьРезультат();
КонецПроцедуры

&НаСервере
Процедура ВыборкаПоУсловиюIsNullНаСервере()
	Макет = Обработки.Запросы.ПолучитьМакет("Макет6");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Контрагенты.Родитель,
		|	Контрагенты.Ссылка,
		|	Контрагенты.Код,
		|	Контрагенты.Наименование,
		|	Контрагенты.Менеджер,
		|	Сотрудники.Пол,
		|	Сотрудники.Адрес,
		|	Сотрудники.ОбъемПродаж,
		|	Сотрудники.Наименование КАК Наименование1
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
		|		ПО Контрагенты.Менеджер = Сотрудники.Ссылка
		|ГДЕ
		|	Сотрудники.ОбъемПродаж ЕСТЬ NULL";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборкаПоУсловиюIsNull(Команда)
	ВыборкаПоУсловиюIsNullНаСервере();
	АктивизироватьРезультат();
КонецПроцедуры

&НаСервере
Процедура ЗапросСПараметрамиМассивНаСервере()
	Если ТаблицаТоваров.Количество()>0 Тогда
	
	//МассивТоваров = Новый Массив;
	//Для каждого СтрокаТаблицы Из ТаблицаТоваров Цикл
	//
	//	    МассивТоваров.Добавить(СтрокаТаблицы.Товар);
	//
	//КонецЦикла; 
	МассивТоваров =ТаблицаТоваров.Выгрузить(); 
	Макет = Обработки.Запросы.ПолучитьМакет("Макет8");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиТоваровОстаткиИОбороты.КоличествоНачальныйОстаток,
		|	ОстаткиТоваровОстаткиИОбороты.КоличествоПриход,
		|	ОстаткиТоваровОстаткиИОбороты.КоличествоРасход,
		|	ОстаткиТоваровОстаткиИОбороты.КоличествоКонечныйОстаток,
		|	ОстаткиТоваровОстаткиИОбороты.Товар
		|ИЗ
		|	РегистрНакопления.ОстаткиТоваров.ОстаткиИОбороты(, , , , Товар В (&МассивТоваров)) КАК ОстаткиТоваровОстаткиИОбороты";
	
	Запрос.УстановитьПараметр("МассивТоваров", МассивТоваров);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	КонецЕсли; 
	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапросСПараметрамиМассив(Команда)
	ЗапросСПараметрамиМассивНаСервере();
	АктивизироватьРезультат();
КонецПроцедуры
// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаКлиенте
Процедура АктивизироватьРезультат()

	//ЭтаФорма.ТекущийЭлемент=Элементы.ТаблДок;  не используем  ЭтаФорма
	ЭтотОбъект.ТекущийЭлемент  =Элементы.ТаблДок;


КонецПроцедуры // АктивизироватьРезультат()

&НаСервере
Процедура ЗапросСПараметромПоТоваруНаСервере()
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Макет = Обработки.Запросы.ПолучитьМакет("Макет10");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровИУслугТовары.Ссылка,
		|	ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровИУслугТовары.Ссылка),
		|	ПоступлениеТоваровИУслугТовары.НомерСтроки,
		|	ПоступлениеТоваровИУслугТовары.Товар,
		|	ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровИУслугТовары.Товар),
		|	ПоступлениеТоваровИУслугТовары.Количество,
		|	ПоступлениеТоваровИУслугТовары.Сумма,
		|	ПоступлениеТоваровИУслугТовары.Цена,
		|	ПоступлениеТоваровИУслугТовары.ЕдиницаИзмерения,
		|	ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровИУслугТовары.ЕдиницаИзмерения)
		|ИЗ
		|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары
		|ГДЕ
		|	ПоступлениеТоваровИУслугТовары.Товар = &Товар";
	
	Запрос.УстановитьПараметр("Товар", Товар);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапросСПараметромПоТовару(Команда)
	ЗапросСПараметромПоТоваруНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ВременныеТаблицыНаСервере()
ТекстЗапроса="ВЫБРАТЬ ПЕРВЫЕ 1
             |	ПоступлениеТоваровИУслуг.Ссылка,
             |	ПоступлениеТоваровИУслуг.Номер,
             |	ПоступлениеТоваровИУслуг.Дата,
             |	ПоступлениеТоваровИУслуг.Контрагент,
             |	ПоступлениеТоваровИУслуг.Организация
             |ПОМЕСТИТЬ ПервыйПриход
             |ИЗ
             |	Документ.ПоступлениеТоваровИУслуг КАК ПоступлениеТоваровИУслуг
             |
             |УПОРЯДОЧИТЬ ПО
             |	ПоступлениеТоваровИУслуг.МоментВремени
             |;
             |
             |////////////////////////////////////////////////////////////////////////////////
             |ВЫБРАТЬ ПЕРВЫЕ 1
             |	РеализационнаяНакладная.Ссылка,
             |	РеализационнаяНакладная.Номер,
             |	РеализационнаяНакладная.Дата,
             |	РеализационнаяНакладная.Контрагент,
             |	РеализационнаяНакладная.Организация
             |ПОМЕСТИТЬ ПоследныйРасход
             |ИЗ
             |	Документ.РеализационнаяНакладная КАК РеализационнаяНакладная
             |
             |УПОРЯДОЧИТЬ ПО
             |	РеализационнаяНакладная.МоментВремени УБЫВ
             |;
             |
             |////////////////////////////////////////////////////////////////////////////////
             |ВЫБРАТЬ
             |	ПервыйПриход.Ссылка,
             |	ПервыйПриход.Номер,
             |	ПервыйПриход.Дата,
             |	ПервыйПриход.Контрагент,
             |	ПервыйПриход.Организация,
             |	ПоследныйРасход.Ссылка КАК Ссылка1,
             |	ПоследныйРасход.Номер КАК Номер1,
             |	ПоследныйРасход.Дата КАК Дата1,
             |	ПоследныйРасход.Контрагент КАК Контрагент1,
             |	ПоследныйРасход.Организация КАК Организация1
             |ИЗ
             |	ПервыйПриход КАК ПервыйПриход,
             |	ПоследныйРасход КАК ПоследныйРасход"	
	
КонецПроцедуры

&НаКлиенте
Процедура ВременныеТаблицы(Команда)
	ВременныеТаблицыНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЕщеОдинNullНаСервере()
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Макет = Обработки.Запросы.ПолучитьМакет("Макет12");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Товары.Ссылка КАК ТоварИзСправочника,
		|	Товары.Артикул,
		|	ОстаткиТоваровОстатки.Товар,
		|	ОстаткиТоваровОстатки.КоличествоОстаток,
		|	ЕСТЬNULL(ОстаткиТоваровОстатки.КоличествоОстаток, 0) + 10 КАК Поле1,
		|	ЕСТЬNULL(ОстаткиТоваровОстатки.Товар, ""Нет на остатке"") КАК Поле2,
		|	ТИПЗНАЧЕНИЯ(ЕСТЬNULL(ОстаткиТоваровОстатки.Товар, ""Нет на остатке"")) КАК Поле3
		|ИЗ
		|	Справочник.Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиТоваров.Остатки КАК ОстаткиТоваровОстатки
		|		ПО Товары.Ссылка = ОстаткиТоваровОстатки.Товар
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТоварИзСправочника
		|АВТОУПОРЯДОЧИВАНИЕ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

КонецПроцедуры

&НаКлиенте
Процедура ЕщеОдинNull(Команда)
	ЕщеОдинNullНаСервере();
	АктивизироватьРезультат();

КонецПроцедуры

&НаКлиенте
Процедура ОстаткиПакетом(Команда)
	ОстаткиПакетомНаСервере();
	АктивизироватьРезультат();
КонецПроцедуры

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаСервере
Процедура ОстаткиПакетомНаСервере()

	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Макет = Обработки.Запросы.ПолучитьМакет("Макет13");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализационнаяНакладнаяТовары.Товар,
		|	СУММА(РеализационнаяНакладнаяТовары.Количество) КАК Количество,
		|	МАКСИМУМ(РеализационнаяНакладнаяТовары.НомерСтроки) КАК НомерСтроки
		|ПОМЕСТИТЬ ТоварыИзДокумента
		|ИЗ
		|	Документ.РеализационнаяНакладная.Товары КАК РеализационнаяНакладнаяТовары
		|ГДЕ
		|	РеализационнаяНакладнаяТовары.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	РеализационнаяНакладнаяТовары.Товар
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиТоваровОстатки.Товар,
		|	ОстаткиТоваровОстатки.КоличествоОстаток
		|ПОМЕСТИТЬ ОстаткиПоСписку
		|ИЗ
		|	РегистрНакопления.ОстаткиТоваров.Остатки(
		|			&НаДату,
		|			Товар В
		|				(ВЫБРАТЬ
		|					ТоварыИзДокумента.Товар
		|				ИЗ
		|					ТоварыИзДокумента КАК ТоварыИзДокумента)) КАК ОстаткиТоваровОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыИзДокумента.Товар,
		|	ТоварыИзДокумента.Количество,
		|	ТоварыИзДокумента.НомерСтроки,
		|	ОстаткиПоСписку.КоличествоОстаток
		|ИЗ
		|	ТоварыИзДокумента КАК ТоварыИзДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоСписку КАК ОстаткиПоСписку
		|		ПО ТоварыИзДокумента.Товар = ОстаткиПоСписку.Товар";
	
	Запрос.УстановитьПараметр("НаДату", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("Ссылка", Реализационная);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА



КонецПроцедуры // ()

&НаСервере
Процедура ОстаткиИЦеныНаСервере()
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Макет = Обработки.Запросы.ПолучитьМакет("МакетОЦ");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Товары.Ссылка,
		|	Товары.Код,
		|	Товары.Наименование КАК Наименование,
		|	Товары.Артикул,
		|	ЕСТЬNULL(ОстаткиТоваровОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
		|	ЕСТЬNULL(ОстаткиТоваровОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
		|	ЦеныТоваровСрезПоследних.Цена
		|ИЗ
		|	Справочник.Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиТоваров.Остатки КАК ОстаткиТоваровОстатки
		|		ПО Товары.Ссылка = ОстаткиТоваровОстатки.Товар
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныТоваров.СрезПоследних КАК ЦеныТоваровСрезПоследних
		|		ПО Товары.Ссылка = ЦеныТоваровСрезПоследних.Товар
		|
		|УПОРЯДОЧИТЬ ПО
		|	Наименование";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиИЦены(Команда)
	ОстаткиИЦеныНаСервере();
		АктивизироватьРезультат();

КонецПроцедуры

&НаСервере
Процедура ПолучитьПериодыКурсовНаСервере()
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Макет = Обработки.Запросы.ПолучитьМакет("МакетКВ");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КурсыВалют.Период,
		|	КурсыВалют.Валюта,
		|	КурсыВалют.Курс
		|ПОМЕСТИТЬ ТаблицаКурсов
		|ИЗ
		|	РегистрСведений.КурсыВалют КАК КурсыВалют
		|ГДЕ
		|	КурсыВалют.Валюта = &Валюта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаКурсов.Период КАК Период,
		|	ТаблицаКурсов.Валюта,
		|	ТаблицаКурсов.Курс,
		|	МИНИМУМ(ЕСТЬNULL(ДОБАВИТЬКДАТЕ(ТаблицаКурсов1.Период, СЕКУНДА, -1), &ТекДата)) КАК Период1
		|ИЗ
		|	ТаблицаКурсов КАК ТаблицаКурсов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаКурсов КАК ТаблицаКурсов1
		|		ПО ТаблицаКурсов.Период < ТаблицаКурсов1.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаКурсов.Период,
		|	ТаблицаКурсов.Валюта,
		|	ТаблицаКурсов.Курс
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период,
		|	Период1";
	
	Запрос.УстановитьПараметр("Валюта", Валюта);
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

КонецПроцедуры

&НаКлиенте
Процедура ПолучитьПериодыКурсов(Команда)
	ПолучитьПериодыКурсовНаСервере();
КонецПроцедуры
