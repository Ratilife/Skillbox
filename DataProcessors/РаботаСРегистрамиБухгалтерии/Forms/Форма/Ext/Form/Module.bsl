
&НаКлиенте
Процедура Остаток(Команда)
	
	ОстатокНаСервере(Дата, Счет);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОстатокНаСервере(Дата, Счет)
	Если ЗначениеЗаполнено(Дата) Тогда
	
		Граница = Новый Граница(КонецДня(Дата), ВидГраницы.Включая);
	
		
	Иначе
		Граница=Дата;
	КонецЕсли; 
	
	
	Фильтр = Новый Структура("Счет", Счет);
	Таблица = РегистрыБухгалтерии.РегистрУправленческий.Остатки(Граница,,Фильтр);
	Ост = Таблица.Итог("СуммаОстатокДт");
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = "Остаток по счету "+Ост;
	Сообщение.Сообщить(); 

КонецПроцедуры // ОстатокНаСервере(Дата, Счет)()

&НаСервере
Процедура ОстатокНаДатуНаСервере()
	Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	РегистрУправленческийОстатки.Субконто1,
	//	|	ЕСТЬNULL(РегистрУправленческийОстатки.СуммаОстаток, 0) КАК СуммаОстаток
	//	|ИЗ
	//	|	РегистрБухгалтерии.РегистрУправленческий.Остатки(&Дата, Счет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ТоварыНаСкладах), , Субконто1 = &Товар) КАК РегистрУправленческийОстатки";
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РегистрУправленческийОстатки.Субконто1,
		|	ЕСТЬNULL(РегистрУправленческийОстатки.СуммаОстаток, 0) КАК СуммаОстаток
		|ИЗ
		|	РегистрБухгалтерии.РегистрУправленческий.Остатки(&Дата, Счет = ЗНАЧЕНИЕ(ПланСчетов.Управленческий.ТоварыНаСкладах), , Субконто1 = &Товар) КАК РегистрУправленческийОстатки";

	Граница = Новый Граница(КонецДня(Дата), ВидГраницы.Включая);
		
	Запрос.УстановитьПараметр("Дата", Граница);
	Запрос.УстановитьПараметр("Товар", Товар);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Остаток "+ВыборкаДетальныеЗаписи.Субконто1+" ="+ВыборкаДетальныеЗаписи.СуммаОстаток;
		Сообщение.Сообщить(); 
	КонецЦикла;

	
КонецПроцедуры

&НаКлиенте
Процедура ОстатокНаДату(Команда)
	ОстатокНаДатуНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОстатокПоВидуСубконтоНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РегистрУправленческийОстатки.Счет КАК Счет,
		|	РегистрУправленческийОстатки.Субконто1 КАК Субконто1,
		|	РегистрУправленческийОстатки.СуммаОстаток КАК СуммаОстаток
		|ИЗ
		|	РегистрБухгалтерии.РегистрУправленческий.Остатки(, , , Субконто1 = &Субконто1) КАК РегистрУправленческийОстатки";
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	РегистрУправленческийОстатки.Счет КАК Счет,
	//	|	РегистрУправленческийОстатки.Субконто1 КАК Субконто1,
	//	|	РегистрУправленческийОстатки.СуммаОстаток КАК СуммаОстаток
	//	|ИЗ
	//	|	РегистрБухгалтерии.РегистрУправленческий.Остатки(, , ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконто.Товары), ) КАК РегистрУправленческийОстатки";


	Граница = Новый Граница(КонецДня(Дата), ВидГраницы.Включая);
		
	Запрос.УстановитьПараметр("Субконто1", Товар);
	Запрос.УстановитьПараметр("НаДату", Граница);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Остаток ="+ВыборкаДетальныеЗаписи.СуммаОстаток;
		Сообщение.Сообщить(); 
	КонецЦикла;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РегистрУправленческийОстатки.Счет КАК Счет,
		|	РегистрУправленческийОстатки.Субконто1 КАК Субконто1,
		|	РегистрУправленческийОстатки.СуммаОстаток КАК СуммаОстаток
		|ИЗ
		|	РегистрБухгалтерии.РегистрУправленческий.Остатки(, , &Субконто, ) КАК РегистрУправленческийОстатки";
	Массив = Новый Массив;
	Массив.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Товары);
	Массив.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Контрагенты);
	Граница = Новый Граница(КонецДня(Дата), ВидГраницы.Включая);
		
	Запрос.УстановитьПараметр("Субконто", Массив);
	Запрос.УстановитьПараметр("НаДату", Граница);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Остаток ="+ВыборкаДетальныеЗаписи.СуммаОстаток;
		Сообщение.Сообщить(); 
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ОстатокПоВидуСубконто(Команда)
	ОстатокПоВидуСубконтоНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОборотыПоСчетуНаСервере()
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РегистрУправленческийОбороты.Счет,
		|	РегистрУправленческийОбороты.Субконто1,
		|	РегистрУправленческийОбороты.Субконто2,
		|	РегистрУправленческийОбороты.КорСчет,
		|	РегистрУправленческийОбороты.КорСубконто1,
		|	РегистрУправленческийОбороты.КорСубконто2,
		|	РегистрУправленческийОбороты.СуммаОборот,
		|	РегистрУправленческийОбороты.СуммаОборотДт,
		|	РегистрУправленческийОбороты.СуммаОборотКт,
		|	РегистрУправленческийОбороты.КоличествоОборот,
		|	РегистрУправленческийОбороты.КоличествоОборотДт,
		|	РегистрУправленческийОбороты.КоличествоОборотКт,
		|	РегистрУправленческийОбороты.КоличествоКорОборот,
		|	РегистрУправленческийОбороты.КоличествоКорОборотДт,
		|	РегистрУправленческийОбороты.КоличествоКорОборотКт
		|ИЗ
		|	РегистрБухгалтерии.РегистрУправленческий.Обороты КАК РегистрУправленческийОбороты";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
КонецПроцедуры

&НаКлиенте
Процедура ОборотыПоСчету(Команда)
	ОборотыПоСчетуНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПланыСчетовДемоНаСервере()
	ТоварыНаСкладах=ПланыСчетов.Управленческий.ТоварыНаСкладах;
КонецПроцедуры

&НаКлиенте
Процедура ПланыСчетовДемо(Команда)
	ПланыСчетовДемоНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПредставлениеПолейНаСервере()
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Макет = Обработки.РаботаСРегистрамиБухгалтерии.ПолучитьМакет("Макет1");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровИУслугТовары.Товар,
		|	ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровИУслугТовары.Товар),
		|	ПоступлениеТоваровИУслугТовары.Количество,
		|	ПоступлениеТоваровИУслугТовары.Цена
		|ИЗ
		|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
	Сообщить(ВыборкаДетальныеЗаписи.Товар);	
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеПолей(Команда)
	ПредставлениеПолейНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПредставлениеНаСервере()
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Макет = Обработки.РаботаСРегистрамиБухгалтерии.ПолучитьМакет("Макет2");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровИУслугТовары.Товар,
		|	ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровИУслугТовары.Товар),
		|	ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент,
		|	ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровИУслугТовары.Ссылка.Контрагент)
		|ИЗ
		|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
КонецПроцедуры

&НаКлиенте
Процедура Представление(Команда)
	ПредставлениеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПримерЗамераПроизводительностиНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровИУслуг.Ссылка,
		|	ПоступлениеТоваровИУслуг.Номер,
		|	ПоступлениеТоваровИУслуг.Дата,
		|	ПоступлениеТоваровИУслуг.Контрагент,
		|	ПоступлениеТоваровИУслуг.Организация
		|ИЗ
		|	Документ.ПоступлениеТоваровИУслуг КАК ПоступлениеТоваровИУслуг";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Сообщить("" +ВыборкаДетальныеЗаписи.Ссылка + " " +ВыборкаДетальныеЗаписи.Контрагент + " "+ВыборкаДетальныеЗаписи.Организация ) ;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровИУслуг.Ссылка,
		|	ПоступлениеТоваровИУслуг.Номер,
		|	ПоступлениеТоваровИУслуг.Дата,
		|	ПоступлениеТоваровИУслуг.Контрагент,
		|	ПоступлениеТоваровИУслуг.Организация,
		|	ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровИУслуг.Контрагент),
		|	ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровИУслуг.Организация),
		|	ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваровИУслуг.Ссылка)
		|ИЗ
		|	Документ.ПоступлениеТоваровИУслуг КАК ПоступлениеТоваровИУслуг";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Сообщить("" +ВыборкаДетальныеЗаписи.СсылкаПредставление + " " +ВыборкаДетальныеЗаписи.КонтрагентПредставление + " "+ВыборкаДетальныеЗаписи.ОрганизацияПредставление ) ;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПримерЗамераПроизводительности(Команда)
	ПримерЗамераПроизводительностиНаСервере();
КонецПроцедуры
