
&НаСервере
Процедура ПоискНаСервере()
	
	Ссылка = Справочники.Контрагенты.НайтиПоНаименованию(Наименование);
	Если ЗначениеЗаполнено(Ссылка) Тогда
		Сообщить(Ссылка);
	КонецЕсли; 
	//точное соответствие
	Ссылка = Справочники.Контрагенты.НайтиПоНаименованию(Наименование,Истина);
	Если ЗначениеЗаполнено(Ссылка) Тогда
		Сообщить(Ссылка);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура Поиск(Команда)
	ПоискНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПредопределенныйЭлементНаСервере()
	Сообщить(Справочники.Контрагенты.ЧастноеЛицо.Наименование);
	Сообщить(Справочники.Контрагенты.ЧастноеЛицо.Код);
КонецПроцедуры

&НаКлиенте
Процедура ПредопределенныйЭлемент(Команда)
	ПредопределенныйЭлементНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВыборкаНаСервере()
	//Выборка всех элементов справочника
	Выборка = Справочники.Контрагенты.Выбрать(,,,"Наименование Убыв");
	Пока Выборка.Следующий() Цикл
		
		Сообщить("" + Выборка.Родитель + "-"+Выборка.Наименование);
		
	КонецЦикла;
	//Выборка с отбором
	
	//Отбор = Новый Структура;
	//Отбор.Вставить("Признак",Перечисления.ПризнакКлиента.ЧастноеЛицо);
	//Выборка = Справочники.Контрагенты.Выбрать(,,Отбор,"Наименование Убыв");
	//
	//Пока Выборка.Следующий() Цикл
	//	
	//	Сообщить("" + Выборка.Родитель + "-"+Выборка.Наименование);
	//	
	//КонецЦикла;
	
	//Выборка иерархически
	//Выборка = Справочники.Контрагенты.ВыбратьИерархически();
	//
	//Пока Выборка.Следующий() Цикл
	//	
	//	Сообщить("" + Выборка.Родитель + "-"+Выборка.Наименование);
	//	
	//КонецЦикла;
	
	
КонецПроцедуры

&НаКлиенте
Процедура Выборка(Команда)
	ВыборкаНаСервере();
КонецПроцедуры

&НаСервере
Процедура СозданиеГруппИЭлементовНаСервере()
	НоваяГруппа = Справочники.Контрагенты.НайтиПоНаименованию("Кондитерские 270219");
	Если ЗначениеЗаполнено(НоваяГруппа) Тогда
		
	Иначе
		НоваяГруппа = Справочники.Контрагенты.СоздатьГруппу();
		НоваяГруппа.Наименование = "Кондитерские 270219";
		НоваяГруппа.Записать();
		
		
	КонецЕсли; 
	
	НовыйЭлемент = Справочники.Контрагенты.СоздатьЭлемент();
	НовыйЭлемент.Наименование = "Магазин Сладкоежка 270219";
	НовыйЭлемент.Родитель = НоваяГруппа.Ссылка;
	НовыйЭлемент.ВалютаВзаиморасчетов =  Константы.ВалютаУчета.Получить();
	НовыйЭлемент.Описание = "Магазин";
	НовыйЭлемент.Признак = Перечисления.ПризнакКлиента.ЧастноеЛицо;	
	//Если НовыйЭлемент.ПроверитьЗаполнение() Тогда
		
		НовыйЭлемент.Записать();
		
	//Иначе
	//	Сообщить("Элемент не записан");
	//КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура СозданиеГруппИЭлементов(Команда)
	СозданиеГруппИЭлементовНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПроверитьНаПустотуНаСервере()
	Сообщить(Контрагент = Справочники.Контрагенты.ПустаяСсылка());
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьНаПустоту(Команда)
	Сообщить(Контрагент.Пустая());
	Сообщить(НЕ ЗначениеЗаполнено(Контрагент));
	ПроверитьНаПустотуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура Копировать(Команда)
	
	КопироватьНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура КопироватьНаСервере()
	
	НовыйЭлемент = Контрагент.Скопировать();
	НовыйЭлемент.Наименование = "копия "+НовыйЭлемент.Наименование;
	НовыйЭлемент.Записать();
	
КонецПроцедуры // КопироватьНаСервере()

&НаСервере
Процедура ОпределитьПринадлежностьНаСервере()
	Сообщить(Контрагент.ПринадлежитЭлементу(ГруппаКонтрагентов));
КонецПроцедуры

&НаКлиенте
Процедура ОпределитьПринадлежность(Команда)
	ОпределитьПринадлежностьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВыборкаИИзменениеНаСервере()
	Выборка = Справочники.Контрагенты.Выбрать();
	Пока Выборка.Следующий() Цикл
		СпрОбъект = Выборка.ПолучитьОбъект();
		СпрОбъект.Наименование = СпрОбъект.Наименование+"_"+СпрОбъект.Код;
		СпрОбъект.Записать();
		
	КонецЦикла;
	//Выборка = Справочники.Контрагенты.Выбрать();
	//Пока Выборка.Следующий() Цикл
	//	НомерПодчеркивания = Найти( Выборка.Наименование,"_");
	//	Если НомерПодчеркивания<>Неопределено Тогда
	//		
	//		
	//		СпрОбъект = Выборка.ПолучитьОбъект();
	//		
	//		СпрОбъект.Наименование = Лев(СпрОбъект.Наименование,НомерПодчеркивания-1);
	//		СпрОбъект.Записать();
	//	КонецЕсли; 
	//	
	//КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ВыборкаИИзменение(Команда)
	ВыборкаИИзменениеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПометкаНаУдалениеНаСервере()
	// пометка на удаление одного элемента
	// неверно
	СпрОбъект = Контрагент.ПолучитьОбъект();
	СпрОбъект.ПометкаУдаления = Истина;
	СпрОбъект.Записать();
	// верно
	Если ЗначениеЗаполнено(Контрагент) Тогда
		
		СпрОбъект = Контрагент.ПолучитьОбъект();
		СпрОбъект.ПометкаУдаления = Истина;
		СпрОбъект.Записать();
		
		
	КонецЕсли; 
	//  пометка на удаление всех элементов
	//Выборка = Справочники.Контрагенты.Выбрать();
	//Пока Выборка.Следующий() Цикл
	//	Если Не Выборка.Предопределенный Тогда
	//		СпрОбъект = Выборка.ПолучитьОбъект();
	//		СпрОбъект.ПометкаУдаления = Истина;
	//		СпрОбъект.Записать();
	//	КонецЕсли; 
	//	
	//КонецЦикла;
	// снятие пометки на удаление
	//Выборка = Справочники.Контрагенты.Выбрать();
	//Пока Выборка.Следующий() Цикл
	//	Если Не Выборка.Предопределенный Тогда
	//		СпрОбъект = Выборка.ПолучитьОбъект();
	//		СпрОбъект.ПометкаУдаления = Ложь;
	//		СпрОбъект.Записать();
	//	КонецЕсли; 
	//	
	//КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПометкаНаУдаление(Команда)
	ПометкаНаУдалениеНаСервере();
КонецПроцедуры

&НаСервере
Процедура СсылкаПаКлиентеИНаСервереНаСервере()
	Сообщить(Контрагент.ПолноеЮридическоеНаименование);
КонецПроцедуры

&НаКлиенте
Процедура СсылкаПаКлиентеИНаСервере(Команда)
	СсылкаПаКлиентеИНаСервереНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПроверкаЗаполненияПрограммнаяНаСервере()
	НовыйЭлемент = Справочники.Контрагенты.СоздатьЭлемент();
	НовыйЭлемент.Наименование = "Магазин Без проверки";
	НовыйЭлемент.ВалютаВзаиморасчетов =  Константы.ВалютаУчета.Получить();
	НовыйЭлемент.Описание = "Магазин";
	НовыйЭлемент.Записать();
	
	НовыйЭлемент = Справочники.Контрагенты.СоздатьЭлемент();
	НовыйЭлемент.Наименование = "Магазин С Проверкой";
	НовыйЭлемент.ВалютаВзаиморасчетов =  Константы.ВалютаУчета.Получить();
	НовыйЭлемент.Описание = "Магазин";
	Если НовыйЭлемент.ПроверитьЗаполнение()  Тогда
		Попытка
			
			НовыйЭлемент.Записать();
			
			
		Исключение
			Сообщить("Магазин С Проверкой не записан "+ОписаниеОшибки());
		КонецПопытки;
		
		
	КонецЕсли;  
	НовыйЭлемент = Справочники.Контрагенты.СоздатьЭлемент();
	НовыйЭлемент.Заполнить();
	НовыйЭлемент.Наименование = "Магазин С Заполнением";
	НовыйЭлемент.Описание = "Магазин";
	Если НовыйЭлемент.ПроверитьЗаполнение()  Тогда
		НовыйЭлемент.Записать();
	КонецЕсли; 	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаЗаполненияПрограммная(Команда)
	ПроверкаЗаполненияПрограммнаяНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПроверитьПроцедуруМодуляНаСервере()
	Справочники.Контрагенты.ЧастноеЛицо.ПолучитьОбъект().РаботаетПроцедураМодуля();
	Справочники.Контрагенты.РаботаетПроцедураМодуляМенеджера();	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПроцедуруМодуля(Команда)
	ПроверитьПроцедуруМодуляНаСервере();
КонецПроцедуры


&НаСервере
Процедура ПоикПоКодуНаСервере()
	Ссылка = Справочники.Товары.НайтиПоКоду(Код);
	Если ЗначениеЗаполнено(Ссылка) Тогда
		Сообщить(Ссылка);
	Иначе
		Сообщить("Элемент не найден" );
	КонецЕсли; 
КонецПроцедуры


&НаКлиенте
Процедура ПоикПоКоду(Команда)
	ПоикПоКодуНаСервере();
КонецПроцедуры


&НаСервере
Процедура ПоискВПределахВладельцаНаСервере()
	Ссылка = Справочники.Договора.НайтиПоНаименованию(НомерДоговора,Истина,,Контрагент);
	Если ЗначениеЗаполнено(Ссылка) Тогда
		Сообщить(""+Ссылка.Код +" "+ Ссылка.Наименование+ " " + Ссылка.Владелец);
	Иначе
		Сообщить("Элемент не найден" );
	КонецЕсли; 
	
КонецПроцедуры


&НаКлиенте
Процедура ПоискВПределахВладельца(Команда)
	ПоискВПределахВладельцаНаСервере();
КонецПроцедуры


&НаСервере
Процедура НайтиПоРеквизитуНаСервере()
	Ссылка = Справочники.Контрагенты.НайтиПоРеквизиту("ЕДРПОУ",РеквизитПоиска);
	Если ЗначениеЗаполнено(Ссылка) Тогда
		Сообщить(Ссылка);
	Иначе
		Сообщить("Элемент не найден" );
	КонецЕсли; 
КонецПроцедуры


&НаКлиенте
Процедура НайтиПоРеквизиту(Команда)
	НайтиПоРеквизитуНаСервере();
КонецПроцедуры


&НаСервере
Процедура СоздатьДоговорНаСервере()
	НовыйДоговор = Справочники.Договора.СоздатьЭлемент();
	НовыйДоговор.Владелец=Контрагент;
	НовыйДоговор.Наименование=НомерДоговора;
	НовыйДоговор.Записать();
	
КонецПроцедуры


&НаКлиенте
Процедура СоздатьДоговор(Команда)
	СоздатьДоговорНаСервере();
КонецПроцедуры


&НаСервере
Процедура ПоказатьКонтактыНаСервере()
	ТаблицаКонтактов = Контрагент.Контакты;
	Для каждого СтрокаТаблицы Из ТаблицаКонтактов Цикл
		Сообщить(СтрокаТаблицы.Телефон);
		
		
	КонецЦикла; 
	Выборка =Справочники.Контрагенты.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Не Выборка.ЭтоГруппа Тогда
			Если Выборка.Контакты.Количество()=0 Тогда
				
			Иначе
				Сообщить("Контакты контрагента " +Выборка.Наименование);
				ТаблицаКонтактов = Выборка.Контакты;
				Для каждого СтрокаТаблицы Из ТаблицаКонтактов Цикл
					Сообщить(СтрокаТаблицы.Телефон);
					
					
				КонецЦикла; 
				
			КонецЕсли; 
			
			
		КонецЕсли; 
		
	КонецЦикла;
	
	
КонецПроцедуры


&НаКлиенте
Процедура ПоказатьКонтакты(Команда)
	ПоказатьКонтактыНаСервере();
КонецПроцедуры

&НаСервере
Процедура КакВыглядитСсылкаНаСервере()
	Сообщить("Контрагент "+Контрагент.УникальныйИдентификатор());
	Сообщить("Товар "+Товар.УникальныйИдентификатор());
	Сообщить("Оператор "+Оператор.УникальныйИдентификатор());
	Сообщить("Группа Контрагент "+ГруппаКонтрагентов.УникальныйИдентификатор());
	
КонецПроцедуры

&НаКлиенте
Процедура КакВыглядитСсылка(Команда)
	КакВыглядитСсылкаНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СписокВсехСправочниковНаСервере()
	Для каждого ТекущийСправочник Из Справочники Цикл
		
		Сообщить("Данные из " +ТекущийСправочник);
		//Выборка = ТекущийСправочник.Выбрать();
		//Пока Выборка.Следующий() Цикл
		//	
		//	Сообщить(Выборка);
		//	
		//КонецЦикла;
	КонецЦикла; 	
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВсехСправочников(Команда)
	СписокВсехСправочниковНаСервере();
КонецПроцедуры

&НаСервере
Процедура КонтрагентПриИзмененииНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	КонтрагентПриИзмененииНаСервере();
КонецПроцедуры
