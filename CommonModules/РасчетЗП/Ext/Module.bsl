Процедура РассчитатьРегистрРасчета(Набор, Отказ) Экспорт
	
	Ссылка = Набор.Отбор.Регистратор.Значение;
	ИмяРегистра = Набор.Метаданные().Имя;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОсновныеНачисления.ВидРасчета.КатегорияРасчета КАК Категория,
	|	ОсновныеНачисления.ВидРасчета.СпособРасчета КАК Способ
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисления КАК ОсновныеНачисления
	|ГДЕ
	|	ОсновныеНачисления.Регистратор = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Категория
	|ИТОГИ ПО
	|	Категория";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ОсновныеНачисления", ИмяРегистра);
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Результат = Запрос.Выполнить();
	
	ВыборкаКатегории = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаКатегории.Следующий() Цикл
		
		ВыборкаСпособы = ВыборкаКатегории.Выбрать();
		Параметры = ПолучитьСтруктуруНеобходимыхДанных(ВыборкаСпособы);
		
		Результат = ПолучитьДанныеДляРасчета(Параметры, ИмяРегистра, Ссылка, ВыборкаКатегории.Категория);
		Выборка = Результат.Выбрать();
		
		РассчитатьЗаписиРегистраРасчета(Выборка, Набор, Отказ);
		
		Набор.Записать(,Истина);
	КонецЦикла;
	
	
КонецПроцедуры

Процедура РассчитатьЗаписиРегистраРасчета(Выборка, Набор, Отказ)

	Поиск = Новый Структура("НомерСтроки");
	Тариф = Перечисления.СпособыРасчета.ПоОтработанномуВремени;
	Простой = Перечисления.СпособыРасчета.ВынужденныйПростой;
	Невыход = Перечисления.СпособыРасчета.УдержаниеЗаДеньНевыхода;
	ФиксированнойСуммой = Перечисления.СпособыРасчета.ФиксированнойСуммой;
	Процентом = Перечисления.СпособыРасчета.Процентом;
	Для каждого Запись Из Набор Цикл
	
		Поиск.НомерСтроки = Запись.НомерСтроки;
		Выборка.Сбросить();
		Если Выборка.НайтиСледующий(Поиск) Тогда
		
			Если Выборка.Способ = Тариф ИЛИ Выборка.Способ = Простой Тогда
				Если Выборка.План=0 Тогда
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = "Нет данных графика";
					Сообщение.Сообщить(); 
					Отказ = Истина;
				Иначе
					КПростой = ?(Выборка.Способ = Простой, 2/3, 1);
					Результат = Выборка.Факт*Выборка.Размер/Выборка.План*КПростой;
				КонецЕсли; 
			ИначеЕсли Выборка.Способ = Невыход Тогда
				Результат = -Выборка.Факт/8*Выборка.Размер;
			ИначеЕсли Выборка.Способ = ФиксированнойСуммой Тогда
				Результат = Выборка.Размер;
			ИначеЕсли Выборка.Способ = Процентом Тогда
				Результат = Выборка.Размер*Выборка.База/100;
			КонецЕсли;
			
			Запись.Результат = Результат*?(Запись.Сторно, -1, 1);
		
		КонецЕсли; 
	
	КонецЦикла; 
	

КонецПроцедуры


Функция ПолучитьСтруктуруНеобходимыхДанных(Выборка)
	
	Параметры = Новый Структура;
	Параметры.Вставить("ДанныеГрафика", Ложь);
	Параметры.Вставить("База", Ложь);
	Пока Выборка.Следующий() Цикл
		Если Выборка.Способ = Перечисления.СпособыРасчета.ВынужденныйПростой
			ИЛИ Выборка.Способ = Перечисления.СпособыРасчета.ПоОтработанномуВремени
			ИЛИ Выборка.Способ = Перечисления.СпособыРасчета.УдержаниеЗаДеньНевыхода Тогда
			Параметры.ДанныеГрафика = Истина;
		ИначеЕсли Выборка.Способ = Перечисления.СпособыРасчета.Процентом Тогда
			Параметры.База = Истина;
		КонецЕсли; 
	КонецЦикла;
	
	Возврат Параметры;
	
КонецФункции // ПолучитьСтруктуруНеобходимыхДанных(ВыборкаСпособы)()

Функция ПолучитьДанныеДляРасчета(Параметры, ИмяРегистра, Ссылка, КатегорияРасчета)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	Измерения.Добавить("Подразделение");
	Запрос.УстановитьПараметр("Измерения", Измерения);
	Запрос.УстановитьПараметр("КатегорияРасчета", КатегорияРасчета);
	
	Если ИмяРегистра = "ОсновныеНачисления" Тогда
		Запрос.Текст = "ВЫБРАТЬ
		|	ОсновныеНачисления.НомерСтроки,
		|	ОсновныеНачисления.ВидРасчета.СпособРасчета Способ,
		|	ОсновныеНачисления.Размер";
		Если Параметры.ДанныеГрафика Тогда
			Запрос.Текст = Запрос.Текст + "
			|	,ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия, 0) КАК План,
			|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК Факт";
		КонецЕсли; 
		
		Если Параметры.База Тогда
			Запрос.Текст = Запрос.Текст + "
		|	,ЕСТЬNULL(ОсновныеНачисленияБазаОсновныеНачисления.РезультатБаза, 0) + ЕСТЬNULL(ОсновныеНачисленияБазаДополнительныеНачисления.РезультатБаза, 0) КАК База";
		КонецЕсли; 
		
		Запрос.Текст = Запрос.Текст + "
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисления КАК ОсновныеНачисления";
		
		Если Параметры.ДанныеГрафика Тогда
			Запрос.Текст = Запрос.Текст + "
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисления.ДанныеГрафика(
		|				Регистратор = &Ссылка
		|					И ВидРасчета.КатегорияРасчета = &КатегорияРасчета) КАК ОсновныеНачисленияДанныеГрафика
		|		ПО ОсновныеНачисления.НомерСтроки = ОсновныеНачисленияДанныеГрафика.НомерСтроки";
		КонецЕсли;
	
		Если Параметры.База Тогда
			Запрос.Текст = Запрос.Текст + "
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисления.БазаОсновныеНачисления(
		|				&Измерения,
		|				&Измерения,
		|				,
		|				Регистратор = &Ссылка
		|					И ВидРасчета.КатегорияРасчета = &КатегорияРасчета) КАК ОсновныеНачисленияБазаОсновныеНачисления
		|		ПО ОсновныеНачисления.НомерСтроки = ОсновныеНачисленияБазаОсновныеНачисления.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисления.БазаДополнительныеНачисления(
		|				&Измерения,
		|				&Измерения,
		|				,
		|				Регистратор = &Ссылка
		|					И ВидРасчета.КатегорияРасчета = &КатегорияРасчета) КАК ОсновныеНачисленияБазаДополнительныеНачисления
		|		ПО ОсновныеНачисления.НомерСтроки = ОсновныеНачисленияБазаДополнительныеНачисления.НомерСтроки";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|ГДЕ
		|	ОсновныеНачисления.Регистратор = &Ссылка
		|	И ОсновныеНачисления.ВидРасчета.КатегорияРасчета = &КатегорияРасчета";
		
		
	ИначеЕсли ИмяРегистра = "ДополнительныеНачисления" Тогда
		
		Запрос.Текст = "ВЫБРАТЬ
		|	ДополнительныеНачисления.НомерСтроки,
		|	ДополнительныеНачисления.ВидРасчета.СпособРасчета Способ,
		|	ДополнительныеНачисления.Размер";
		Если Параметры.База Тогда
			Запрос.Текст = Запрос.Текст + "
		|	,ЕСТЬNULL(ДополнительныеНачисленияБазаДополнительныеНачисления.РезультатБаза, 0) + ЕСТЬNULL(ДополнительныеНачисленияБазаОсновныеНачисления.РезультатБаза, 0) КАК База";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|ИЗ
		|	РегистрРасчета.ДополнительныеНачисления КАК ДополнительныеНачисления";
		Если Параметры.База Тогда
			Запрос.Текст = Запрос.Текст + "
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ДополнительныеНачисления.БазаДополнительныеНачисления(
		|				&Измерения,
		|				&Измерения,
		|				,
		|				Регистратор = &Ссылка
		|					И ВидРасчета.КатегорияРасчета = &КатегорияРасчета) КАК ДополнительныеНачисленияБазаДополнительныеНачисления
		|		ПО ДополнительныеНачисления.НомерСтроки = ДополнительныеНачисленияБазаДополнительныеНачисления.НомерСтроки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.ДополнительныеНачисления.БазаОсновныеНачисления(
		|				&Измерения,
		|				&Измерения,
		|				,
		|				Регистратор = &Ссылка
		|					И ВидРасчета.КатегорияРасчета = &КатегорияРасчета) КАК ДополнительныеНачисленияБазаОсновныеНачисления
		|		ПО ДополнительныеНачисления.НомерСтроки = ДополнительныеНачисленияБазаОсновныеНачисления.НомерСтроки";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|ГДЕ
		|	ДополнительныеНачисления.Регистратор = &Ссылка
		|	И ДополнительныеНачисления.ВидРасчета.КатегорияРасчета = &КатегорияРасчета";
	ИначеЕсли ИмяРегистра = "Удержания" Тогда
		
		Запрос.Текст = "ВЫБРАТЬ
		|	Удержания.НомерСтроки,
		|	Удержания.ВидРасчета.СпособРасчета Способ,
		|	Удержания.Размер";
		Если Параметры.База Тогда
			Запрос.Текст = Запрос.Текст + "
		|	,ЕСТЬNULL(УдержанияБазаДополнительныеНачисления.РезультатБаза, 0) + ЕСТЬNULL(УдержанияБазаОсновныеНачисления.РезультатБаза, 0) КАК База";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|ИЗ
		|	РегистрРасчета.Удержания КАК Удержания";
		Если Параметры.База Тогда
			Запрос.Текст = Запрос.Текст + "
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.Удержания.БазаДополнительныеНачисления(
		|				&Измерения,
		|				&Измерения,
		|				,
		|				Регистратор = &Ссылка
		|					И ВидРасчета.КатегорияРасчета = &КатегорияРасчета) КАК УдержанияБазаДополнительныеНачисления
		|		ПО Удержания.НомерСтроки = УдержанияБазаДополнительныеНачисления.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.Удержания.БазаОсновныеНачисления(
		|				&Измерения,
		|				&Измерения,
		|				,
		|				Регистратор = &Ссылка
		|					И ВидРасчета.КатегорияРасчета = &КатегорияРасчета) КАК УдержанияБазаОсновныеНачисления
		|		ПО Удержания.НомерСтроки = УдержанияБазаОсновныеНачисления.НомерСтроки";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|ГДЕ
		|	Удержания.Регистратор = &Ссылка
		|	И Удержания.ВидРасчета.КатегорияРасчета = &КатегорияРасчета";
	КонецЕсли; 
	
	
	Возврат Запрос.Выполнить();
	
КонецФункции // ПолучитьДанныеДляРасчета(Параметры)()


Процедура РасчитатьСторнирование(НаборЗаписей, ДокументСсылка)         Экспорт

	// 1. Запрос, в котором получается факт и норма часов рабочего времени, база для расчета больничного    
	Запрос = Новый Запрос;
    Запрос.Текст =

	"ВЫБРАТЬ
	 |	ОсновныеНачисленияСторнированиеДанныеГрафика.НомерСтроки									 КАК НомерСтроки,
	 |	ОсновныеНачисленияСторнированиеДанныеГрафика.ВидРасчета 									 КАК ВидРасчета,
	 |	ОсновныеНачисленияСторнированиеДанныеГрафика.Размер 										 КАК Размер,
	 |	ЕСТЬNULL(ОсновныеНачисленияСторнированиеДанныеГрафика.ЗначениеФактическийПериодДействия,0)	 КАК Дней,
	 |	ЕСТЬNULL(ОсновныеНачисленияСторнированиеДанныеГрафика.ЗначениеБазовыйПериод,0) 				 КАК БазаДней,
	 |	ЕСТЬNULL(ОсновныеНачисленияСторнированиеБазаОсновныеНачисленияСторнирование.РезультатБаза,0) КАК База,
	 |	ЕСТЬNULL(ОсновныеНачисленияСторнированиеДанныеГрафика.ЗначениеПериодДействия,0)				 КАК НормаДней
	 |ИЗ
	 |	РегистрРасчета.ОсновныеНачисленияСторнирование.ДанныеГрафика(Регистратор = &Регистратор) КАК ОсновныеНачисленияСторнированиеДанныеГрафика
	 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияСторнирование.БазаОсновныеНачисленияСторнирование(&Измерения, &Измерения, , Регистратор = &Регистратор) КАК ОсновныеНачисленияСторнированиеБазаОсновныеНачисленияСторнирование
	 |		ПО ОсновныеНачисленияСторнированиеДанныеГрафика.НомерСтроки = ОсновныеНачисленияСторнированиеБазаОсновныеНачисленияСторнирование.НомерСтроки"   ;
	
	Измерения = Новый Массив;
    Измерения.Добавить("Сотрудник");
    
    Запрос.УстановитьПараметр("Регистратор", ДокументСсылка);
    Запрос.УстановитьПараметр("Измерения", Измерения);

	// 2. Определение структуры для поиска по номеру строки 
		Поиск = Новый Структура("НомерСтроки");
    
    	Для Каждого Запись Из НаборЗаписей Цикл

			Выборка = Запрос.Выполнить().Выбрать();
			// 3. Поиск нужной строки выборки по номеру строки
   			Если Выборка.НайтиСледующий(Поиск) Тогда
        
            	Если Выборка.ВидРасчета = ПланыВидовРасчета.ОсновноеНачислениеСторнирование.Оклад Тогда
					// 4. Расчет оклада пропорционально отработанным дням
	 				Запись.Результат = ?(Выборка.НормаДней = 0, 0, Выборка.Размер * Выборка.Дней / Выборка.НормаДней);
	  			ИначеЕсли Выборка.ВидРасчета = ПланыВидовРасчета.ОсновноеНачислениеСторнирование.Больничный Тогда			
					// 5. Расчет больничного по среднедневному заработку за предыдущий месяц * число дней болезни * процент
	            	Запись.Результат = ?(Выборка.БазаДней = 0, 0, Выборка.Дней * Выборка.База / Выборка.БазаДней) * Выборка.Размер / 100;
	  			КонецЕсли;	
				// 6. Сторно-записи должны отменять текущие записи, а значит, записываться с "-" 
				Запись.Результат = Запись.Результат * ?(Запись.Сторно, -1, 1);
			КонецЕсли;
			Выборка.Сбросить();
		КонецЦикла;	
	// 7. Запись набора без пересчета фактического периода действия
	НаборЗаписей.Записать(,,Ложь);
КонецПроцедуры

Процедура РассчитатьИзменениеОклада(Ссылка,ОсновныеНачисления) Экспорт
	ОсновныеВР = ОсновныеНачисления.ВыгрузитьКолонку("ВидРасчета");
	
	Отбор = Новый Структура("НомерСтроки");
	
	Если ОсновныеВР.Найти(ПланыВидовРасчета.ОсновноеНачислениеИзменениеОклада.Оклад) <> Неопределено Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		//"ВЫБРАТЬ
		//|	ОсновноеНачислениеИзменениеОкладаДанныеГрафика.НомерСтроки КАК НомерСтроки,
		//|	ОсновноеНачислениеИзменениеОкладаДанныеГрафика.Размер КАК Размер,
		//|	ОсновноеНачислениеИзменениеОкладаДанныеГрафика.ЗначениеДниФактическийПериодДействия КАК Факт,
		//|	ОсновноеНачислениеИзменениеОкладаДанныеГрафика.ЗначениеДниПериодДействия КАК План
		//|ИЗ
		//|	РегистрРасчета.ОсновноеНачислениеИзменениеОклада.ДанныеГрафика КАК ОсновноеНачислениеИзменениеОкладаДанныеГрафика
		//|ГДЕ
		//|	ОсновноеНачислениеИзменениеОкладаДанныеГрафика.Регистратор = &Ссылка"
		
		"ВЫБРАТЬ
		|	ОсновноеНачислениеИзменениеОкладаДанныеГрафика.НомерСтроки КАК НомерСтроки,
		|	ОсновноеНачислениеИзменениеОкладаДанныеГрафика.Размер КАК Размер,
		|	ОсновноеНачислениеИзменениеОкладаДанныеГрафика.ЗначениеПериодДействия КАК План,
		|	ОсновноеНачислениеИзменениеОкладаДанныеГрафика.ЗначениеФактическийПериодДействия КАК Факт
		|ИЗ
		|	РегистрРасчета.ОсновноеНачислениеИзменениеОклада.ДанныеГрафика КАК ОсновноеНачислениеИзменениеОкладаДанныеГрафика
		|ГДЕ
		|	ОсновноеНачислениеИзменениеОкладаДанныеГрафика.Регистратор = &Ссылка"
		;
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		Результат = Запрос.Выполнить();
		
		Выборка = Результат.Выбрать();
		
		Для Каждого Запись Из ОсновныеНачисления Цикл
			Если Запись.ВидРасчета <> ПланыВидовРасчета.ОсновноеНачислениеИзменениеОклада.Оклад Тогда
				Продолжить;
			КонецЕсли;
			Отбор.НомерСтроки = Запись.НомерСтроки;
			
			Если Выборка.НайтиСледующий(Отбор) Тогда
				Запись.Результат = Выборка.Факт / Выборка.План * Выборка.Размер;
			КонецЕсли;
			
			Выборка.Сбросить();
		КонецЦикла;		
		
		ОсновныеНачисления.Записать(,Истина);
		
	КонецЕсли;
	
	
КонецПроцедуры


Процедура РассчитатьЗаписиДополнительногоРегистра(НаборЗаписей, Ссылка) Экспорт
    
    // 1. Запрос, в котором получается сумма продаж по подразделению для расчета премии
    Запрос = Новый Запрос;
    Запрос.Текст =
	"ВЫБРАТЬ
	|	ДополнительныеНачисленияПроцентОтПродажиТовара.НомерСтроки 				КАК НомерСтроки,
	|	ДополнительныеНачисленияПроцентОтПродажиТовара.ВидРасчета 				КАК ВидРасчета,
	|	ДополнительныеНачисленияПроцентОтПродажиТовара.Параметр 				КАК Параметр,
	|	ЕСТЬNULL(ПродажиПроцентОтПродажиТоваровОбороты.СуммаПродажОборот, 0) 	КАК СуммаПродаж
	|ИЗ
	|	РегистрРасчета.ДополнительныеНачисленияПроцентОтПродажиТовара КАК ДополнительныеНачисленияПроцентОтПродажиТовара
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПродажиПроцентОтПродажиТоваров.Обороты КАК ПродажиПроцентОтПродажиТоваровОбороты
	|		ПО ДополнительныеНачисленияПроцентОтПродажиТовара.Сотрудник.Подразделение = ПродажиПроцентОтПродажиТоваровОбороты.Подразделение
	|ГДЕ
	|	ДополнительныеНачисленияПроцентОтПродажиТовара.Регистратор = &Регистратор"
	;
    
    Запрос.УстановитьПараметр("Регистратор", Ссылка);
    Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(НачалоМесяца(Ссылка.ПериодРегистрации) - 1));
    Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(НачалоМесяца(Ссылка.ПериодРегистрации - 1)));

    Выборка = Запрос.Выполнить().Выбрать();
    
    // 2. Определение структуры для поиска по номеру строки
    Поиск = Новый Структура("НомерСтроки");
    
    Для Каждого Запись Из НаборЗаписей Цикл
        
        Поиск.НомерСтроки = Запись.НомерСтроки;
        
        // 3. Поиск нужной строки выборки по номеру строки записи
        Если Выборка.НайтиСледующий(Поиск) Тогда
            
            // 4. Расчет премии
            Если Выборка.ВидРасчета  = ПланыВидовРасчета.ДополнительныеНачисления.Премия Тогда
                Запись.Результат = Выборка.СуммаПродаж * Выборка.Параметр / 100;   
            КонецЕсли;
            
        КонецЕсли; 
        
        // 5. Позицию выборки необходимо сбросить в начало
        Выборка.Сбросить();
        
    КонецЦикла;
    
    // 6. Запись набора
    НаборЗаписей.Записать();

КонецПроцедуры
