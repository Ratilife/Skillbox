Процедура КонтрольРежимаЗавершенияРаботыПользователей() Экспорт

	//// Получим текущее значение параметров блокировки.
	//ТекущийРежим = СоединенияИБВызовСервера.ПараметрыБлокировкиСеансов();
	//БлокировкаУстановлена = ТекущийРежим.Установлена;
	//
	//Если Не БлокировкаУстановлена Тогда
	//	Возврат;
	//КонецЕсли;
	//	
	//ВремяНачалаБлокировки = ТекущийРежим.Начало;
	//ВремяОкончанияБлокировки = ТекущийРежим.Конец;
	//
	//// ИнтервалЗакрытьСЗапросом и ИнтервалПрекратить имеют отрицательное значение,
	//// поэтому, когда идет сравнение этих параметров с разницей (ВремяНачалаБлокировки - ТекущийМомент),
	//// то используется "<=", так как данная разница постоянно уменьшается.
	//ИнтервалПредупреждения    = ТекущийРежим.ИнтервалОжиданияЗавершенияРаботыПользователей;
	//ИнтервалЗакрытьСЗапросом = ИнтервалПредупреждения / 3;
	//ИнтервалПрекратитьВМоделиСервиса = 60; // За минуту до начала блокировки.
	//ИнтервалПрекратить        = 0; // В момент установки блокировки.
	//ТекущийМомент             = ТекущийРежим.ТекущаяДатаСеанса;
	//
	//Если ВремяОкончанияБлокировки <> '00010101' И ТекущийМомент > ВремяОкончанияБлокировки Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//ДатаВремениНачалаБлокировки  = Формат(ВремяНачалаБлокировки, "ДЛФ=DD");
	//ВремяВремениНачалаБлокировки = Формат(ВремяНачалаБлокировки, "ДЛФ=T");
	//
	//ТекстСообщения = СоединенияИБКлиентСервер.ИзвлечьСообщениеБлокировки(ТекущийРежим.Сообщение);
	//Шаблон = НСтр("ru = 'Рекомендуется завершить текущую работу и сохранить все свои данные. Работа программы будет завершена %1 в %2. 
	//	|%3'");
	//ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Шаблон, ДатаВремениНачалаБлокировки, ВремяВремениНачалаБлокировки, ТекстСообщения);
	//
	//РазделениеВключено = СтандартныеПодсистемыКлиент.ПараметрыРаботыКлиента().РазделениеВключено;
	//Если Не РазделениеВключено
	//	И (Не ЗначениеЗаполнено(ВремяНачалаБлокировки) Или ВремяНачалаБлокировки - ТекущийМомент < ИнтервалПрекратить) Тогда
	//	
	//	СтандартныеПодсистемыКлиент.ПропуститьПредупреждениеПередЗавершениемРаботыСистемы();
	//	ЗавершитьРаботуСистемы(Ложь, ТекущийРежим.ПерезапуститьПриЗавершении);
	//	
	//ИначеЕсли РазделениеВключено
	//	И (Не ЗначениеЗаполнено(ВремяНачалаБлокировки) Или ВремяНачалаБлокировки - ТекущийМомент < ИнтервалПрекратитьВМоделиСервиса) Тогда
	//	
	//	СтандартныеПодсистемыКлиент.ПропуститьПредупреждениеПередЗавершениемРаботыСистемы();
	//	ЗавершитьРаботуСистемы(Ложь, Ложь);
	//	
	//ИначеЕсли ВремяНачалаБлокировки - ТекущийМомент <= ИнтервалЗакрытьСЗапросом Тогда
	//	
	//	СоединенияИБКлиент.ЗадатьВопросПриЗавершенииРаботы(ТекстСообщения);
	//	
	//ИначеЕсли ВремяНачалаБлокировки - ТекущийМомент <= ИнтервалПредупреждения Тогда
	//	
	//	СоединенияИБКлиент.ПоказатьПредупреждениеПриЗавершенииРаботы(ТекстСообщения);
	//	
	//КонецЕсли;
	
КонецПроцедуры
